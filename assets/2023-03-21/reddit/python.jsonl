{"title":"Sunday Daily Thread: What's everyone working on this week?","description":"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.","link":"https://www.reddit.com/r/Python/comments/11v57uj/sunday_daily_thread_whats_everyone_working_on/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":16}}
{"title":"Tuesday Daily Thread: Advanced questions","description":"Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.","link":"https://www.reddit.com/r/Python/comments/11x0no5/tuesday_daily_thread_advanced_questions/","created":"2023-03-21","tags":["reddit","python"],"meta":{"num_comments":5}}
{"title":"Lona - create full web-applications from a simple Python script","description":"It's been more than a year since last time i posted about my web-framework Lona, and it evolved quite a bit since then!\n\nLona is an easy to use, full Python, framework to create beautiful web-applications in minutes, without dealing with JavaScript or CSS. It has a very flat learning curve to get you started, and scales as your project grows. It is written in vanilla Python and JavaScript, so you don't have to deal with tools and libraries like npm, vue, react etc.\n\nOne of the newest additions to the project is the tutorial i wrote ([https://lona-web.org/1.x/tutorial/index.html](https://lona-web.org/1.x/tutorial/index.html)) to make the first steps even easier. It contains many examples, and small clips of them.\n\nFeedback in any form would be very welcome!\n\n&amp;#x200B;\n\nGithub: [https://github.com/lona-web-org/lona](https://github.com/lona-web-org/lona)\n\nDocumentation: [https://lona-web.org/1.x/](https://lona-web.org/1.x/)\n\nDemos: [https://lona-web.org/1.x/demos/index.html](https://lona-web.org/1.x/demos/index.html)","link":"https://www.reddit.com/r/Python/comments/11wppu7/lona_create_full_webapplications_from_a_simple/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":44}}
{"title":"Opinion on the monaco lib ?","description":"Hi everyone,\n\nI want to develop Monte Carlo simulations for various uses, with tkinter as GUI. I initially planned to interface python with c++, but i just came across the monaco lib. Maybe it is enough for what i need (simulation of traffic jams for example), and could avoid me to interface python and c++ which doesn't seem to be that easy. Do you guys have experience with monaco ? Is it fast / flexible ?\n\nThanks !","link":"https://www.reddit.com/r/Python/comments/11xbg6o/opinion_on_the_monaco_lib/","created":"2023-03-21","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Build an open-source Python Game - $12.7K in prizes.","description":"Show off your game development skills and win some amazing prizes. Join us in creating an open-source game using Python and the framework of your choice.\n\nPyGames is open to everyone, including beginners. You have a month to build the game and submit it to the gallery!\n\nThe game can be anything you want - a multiplayer arcade-style game, a console game, or whatever you can think of that's fun. It doesn't have to be original, but it has to be built by you.\n\nWe have some incredible awards to give out as well.\n\n* The \"One-of-a-kind\" award, worth $2500, goes to the most unique game.\n* The \"Pure Nostalgia\" award, also worth $2500, goes to the game that brings back the best memories.\n* And for those of you who love a challenge, the \"Headache Fuel\" award, worth $2500, goes to the most frustrating but fun game.\n* Six honorable mentions worth $700 each.\n* If you're one of the first 20 eligible submissions, you'll win $50 just for submitting.\n\nThis challenge is about creativity. Your implementation is less important than the creativity of the game you come up with. Whether you're a seasoned game developer or a newcomer to the scene, this is your chance to learn something new, have fun, and win prizes.\n\nSubmit your game at [PyGames](https://aka.ms/PyGames)","link":"https://www.reddit.com/r/Python/comments/11x4jkx/build_an_opensource_python_game_127k_in_prizes/","created":"2023-03-21","tags":["reddit","python"],"meta":{"num_comments":14}}
{"title":"Random Settler's Of Catan Board Generating Program","description":"I made a python program to randomly generate a game board with numbers for Settler's of Catan - the original idea was to get my friends to shut up about making unfair boards, but it's actually a pretty good beginner lesson so I made a tutorial on it here:\n\n[https://www.youtube.com/watch?v=7h3sFhBAgcw](https://www.youtube.com/watch?v=7h3sFhBAgcw)\n\nAnd all the code is available here:\n\n[https://github.com/plemaster01/CatanBoardGeneration](https://github.com/plemaster01/CatanBoardGeneration)","link":"https://www.reddit.com/r/Python/comments/11wjz95/random_settlers_of_catan_board_generating_program/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":8}}
{"title":"How to perform an excel formula such as, \"A1/A2-1\" using a pandas dataframe?","description":"I am able to perform actions on the same row of a data frame using an expression such as,\n\n&amp;#x200B;\n\ndf\\['total'\\] = df\\['Col1\"\\] + df\\['Col2\"\\]\n\n&amp;#x200B;\n\nHowever, I am not sure how to perform calculations involving different rows. I am hoping to avoid turning my dataframe columns into list or arrays for computation and then having to add the list as a dataframe column. Really wanting to know how this is best achieved. Thank you for advance","link":"https://www.reddit.com/r/Python/comments/11wrnj1/how_to_perform_an_excel_formula_such_as_a1a21/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":6}}
{"title":"Orm or not Orm? Mayim?","description":"Hello everyone, im more or less proficient in sql, already manage my database as is, and i dont know if i need an orm or not and mostly where do i need to look to not use it but still have some goodies, i have seen mayim project, i feel like its more or less the degree of freedom i need, id like opinions on that and maybe alternatives to evaluate.. thanks everyone","link":"https://www.reddit.com/r/Python/comments/11ws1js/orm_or_not_orm_mayim/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":13}}
{"title":"I made a Conway's game of life in a Python GIF exporter!","description":"Hey everyone! I created a [Python application to export Conway's Game of Life simulations](https://github.com/linguini1/conway) as GIFs and PNGs after becoming fascinated with the cool behaviour this game produces.\n\nThere is a library of some common seeds/automata from the original game rules, as well as a library of different cells that can be used to achieve different behaviour. The configuration of the simulation can either take a set amount of generations/frames to run for, or can be instructed to run until the simulation stagnates.\n\nIt is currently geared towards developers as you will have to mess around with the [main.py](https://main.py) file to use different cell types and seeds (which I am working on changing to be more user-friendly). There is some sample code in the README documentation, and a GitHub Wiki that explains some features.\n\nAny feedback is welcome! I am especially looking for a speedier way to create the long GIFs, as right now longer simulations can take a while to scale and stitch together.\n\n[\\\\\"Maze cell\\\\\" simulation](https://i.redd.it/dsi9mzdf2xoa1.gif)\n\n[The \\\\\"Shoebox\\\\\" seed using classic cells from the original Game Of Life rules](https://i.redd.it/x8ac46qh2xoa1.gif)","link":"https://www.reddit.com/r/Python/comments/11wmoj0/i_made_a_conways_game_of_life_in_a_python_gif/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Feel free to shit on my code this is a script for finding if a number is even or odd","description":"\\# lists off numbers  \nodd = \\[1, 3, 5, 7, 9\\]  \n\n\n\\# requests input and checks for illegal characters  \ninput = input(\"Number?\")  \nif not input.isdigit():  \n print(\"error\")  \n exit()  \n\n\n\\# finds last digit of number  \nnum = int(repr(int(input))\\[-1\\])  \n\\# compares the listed digits and the last digit of the number  \nif num in odd:  \n print(\"odd\")  \nelse:  \n print(\"even\")","link":"https://www.reddit.com/r/Python/comments/11xarii/feel_free_to_shit_on_my_code_this_is_a_script_for/","created":"2023-03-21","tags":["reddit","python"],"meta":{"num_comments":5}}
{"title":"I've created one of the Fastest Python web Frameworks!!","description":"**Panther**  \n**Github**: [https://github.com/AliRn76/panther](https://github.com/AliRn76/panther)  \n**Documentation**: [https://pantherpy.github.io/](https://pantherpy.github.io/)  \n\n\nhttps://preview.redd.it/gtec70b1uroa1.png?width=831&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=08c1d9b71f3f555297432cc817dfa09d05c67c66","link":"https://www.reddit.com/r/Python/comments/11vzvde/ive_created_one_of_the_fastest_python_web/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":34}}
{"title":"NASA's Cassini - Cosmic Dust Analyzer: How to calibrate a space instrument","description":"Hello everyone,\n\nIn my current small tutorial series I am showing how the Cassini Cosmic Dust Analyzer (CDA) was calibrated. A detailed description of the initial idea can be seen [here](https://youtu.be/rO6w9B0Jw7U) or read here on Wikipedia: [https://en.wikipedia.org/wiki/Cosmic\\_Dust\\_Analyzer](https://en.wikipedia.org/wiki/Cosmic_Dust_Analyzer).\n\nNow before an instrument is set to space one needs to have an understanding and also (empirical) equations and algorithms to convert electric signals into the physical units you'd like to derive. E.g., a current or voltage corresponds to the velocity of a dust particle. To achieve this, the instrument is calibrated in a dust accelerator. Yes, you hear it correctly. A ... \"Cern like accelerator\" ... not for atoms, but for micrometer sized dust particles (e.g., made of iron, Latex, or carbonous compositions).\n\nNow in this small series I want to show how the instrument is calibrated, what kind of calibration functions exist (empirical ones) and how one could use Machine Learning to improve the calibration accuracy of the instrument.\n\nIn this first video it is about the data exploration and understanding. The video and corresponding Open Source GitHub Link can be seen below.\n\nHope you'll like it; and if you work in a lab; also doing some calibration work, maybe the ML based approach will be of interest for you!\n\nBest,\n\nThomas\n\nYouTube: [https://youtu.be/gq-qk\\_Jq5p0](https://youtu.be/gq-qk_Jq5p0)\n\nGitHub: [https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/01\\_data\\_exploration.ipynb](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/01_data_exploration.ipynb)","link":"https://www.reddit.com/r/Python/comments/11vjmc2/nasas_cassini_cosmic_dust_analyzer_how_to/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":4}}
{"title":"Python Cybersecurity \u2014 Build your own python tools (PortScanner, Visual Network Tracker and Anonymous FTP Scanner)","description":"**Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities.\n\n**Link**: [https://youtu.be/bH-3PuQC\\_n0](https://youtu.be/bH-3PuQC_n0)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial covers the implementation steps needed to take a file of network traffic and convert it into an visual presentation using Google Maps.\n\n**Link**: [https://youtu.be/xuNuy8n8u-Y](https://youtu.be/xuNuy8n8u-Y)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called \u201canonymous\u201d\n\n**Link**: [https://youtu.be/BIZfRodSW9w](https://youtu.be/BIZfRodSW9w)","link":"https://www.reddit.com/r/Python/comments/11vl6ul/python_cybersecurity_build_your_own_python_tools/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":11}}
{"title":"CPorter: Streamlined C &amp; Python Integration with Auto Type Checking and more","description":"Over the weekend I wrote a simple wrapper for ctypes. It simplifies the process of compiling, loading, and calling C functions from Python. I wrote it mostly for fun, I'm sure there are much better library wrappers out there but it was a nice exercise in Python packaging and Mypy.\n\n I do enjoy statically-typed languages for the verboseness, so I took a crack at type hints and static-type checking with Python for once. Only 260 LOC but I'm happy it passes Mypy fully. \n\n\n\n\n\nHere's an example to show some speed differences:\n    \n    from cporter.cporter import CPorter\n\n    def fibonacci_iterative(n):\n        a = 0\n        b = 1\n        elif n == 0:\n            return a\n        elif n == 1:\n            return b\n        else:\n            for i in range(2,n+1):\n                c = a + b\n                a = b\n                b = c\n            return b\n    \n    cporter = CPorter()\n    \n    cporter.set_library_path(\"examples/lib\")\n    cporter.add_library(\"fib\")\n    print(\"Calculating 100th fibonacci number\")\n    py_results = cporter.profile_python_function(fibonacci_iterative, 100)\n    c_results = cporter.profile_function(\"fib\", \"fibonacci_iterative\", 100)\n    \n    print(f\"C Result:{c_results[0]} Time: {c_results[1]} seconds\")\n    print(f\"Python Result:{c_results[0]} Time: {py_results[1]} seconds\")\n\nAnd our result:\n\n    Calculating 100th fibonacci number\n    C Result:3736710778780434371 Time: 0.0001399169999999339 seconds\n    Python Result:3736710778780434371 Time: 5.000000000032756e-06 seconds\n\nAnyway, here's the repo: https://github.com/snacsnoc/cporter\n\nThe inspiration came from another project I submitted a few PRs to, [sushi](https://github.com/dev-sushi/sushi). It's another library to run functions from foreign languages within Python. Check it out, it's pretty cool.","link":"https://www.reddit.com/r/Python/comments/11wd5y8/cporter_streamlined_c_python_integration_with/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"List of reasons to avoid side effects","description":"Hello, sometimes, in Python pull request review, I found myself posting: \"please refactor this without unnecessary side effects\". Then you get a response back in the spirit of \"who cares? it doesn't change the logic\". Then you start typing reasons why unnecessary side effects are long-term-harmful, and you forget some items. \n\nThere are some nice resources out there: for example [this awesome thread](https://softwareengineering.stackexchange.com/questions/15269/why-are-side-effects-considered-evil-in-functional-programming) or Eric Elliot's post about [simplicity and side effects](https://medium.com/javascript-scene/the-single-biggest-mistake-programmers-make-every-day-62366b432308). Then there are more specific good posts about Python [import-time side effects](https://chrismorgan.info/blog/say-no-to-import-side-effects-in-python/) in Python and generic observation that side effect lead to [mocking in tests](https://blog.thecodewhisperer.com/permalink/you-dont-hate-mocks-you-hate-side-effects). The majority of side-effect-related posts discuss it in the context of functional programming ([this one](https://thejs.dev/jmitchell/what-are-side-effects-and-what-you-can-do-about-them-jws), another [very good one from Jesse Warden](https://jessewarden.com/books/real-world-functional-programming/part1/01_input_output_side_effects.html), [one more](https://www.yld.io/blog/the-not-so-scary-guide-to-functional-programming/)). \n\nBut I just wanted to make a short list that you can pull out when needed. So here we go:\n\nCode with side effects  \n \\- is fragile - leads to unexpected crashes  \n \\- is unexpectedly slow and is hard to optimize  \n \\- is hard to use concurrently  \n \\- is hard to read and understand  \n \\- it is hard to reuse  \n \\- is hard to debug, release and write tests\n\nI put more detailed arguments into [a Medium post](https://levelup.gitconnected.com/all-dangers-of-side-effects-for-python-coders-fdf0743457a3) on each of those items.\n\nWhat do you think?","link":"https://www.reddit.com/r/Python/comments/11wzf3o/list_of_reasons_to_avoid_side_effects/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":4}}
{"title":"Are people abusing Python?","description":"I learned Python after coming from the C/C++ and Java world. With the massive increase in popularity of Python in the last 10 years, seeing the way it developed, it seems to me like it gained a lot of functionality, which comes natural in other languages, but feels a bit odd in Python.\n\nTo be more specific - albeit Python being dynamically typed, people developed countless tools to check or validate or even enforce types in compile or run time (mypy, pyre, pydantic, pyduck etc.). It feels like it goes against the nature of its loose typing.\n\nAnother example are decorators. This pattern is noticably overused by many tools adding functionality, but even the language itself - defining a \\`class\\`,\\`static\\` and \\`abstract\\` methods with decorators seems just weird and unnatural. Same thing with function overloading.  Anecdotally, it feels like comparing German to English. German has a special word for every peculiar thing and native support for word generation by concatenation of multiple words whilst in English you have to add some common words together and hope this combination doesnt already exist. And if it does, so what, people will get it from the context.\n\nLastly, slightly off-topic but relevant point is that it is not even a simple language in my opinion. It has a very flat learning curve initially but the complexity is just further down the road. Im talking about metaclasses,data descriptors, coroutines, magic methods etc. Some languages are difficult right away (C++, Rust etc.), but Python is a intricate misfit dressed as a simpleton.\n\nAm I misunderstanding a philosophical path of the language or is it simply just a scripting langugage that got massively popular through chance and is now used for stuff it was not intended for?\n\nEdit: grammar","link":"https://www.reddit.com/r/Python/comments/11wye72/are_people_abusing_python/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":41}}
{"title":"TUT | quick video tutorial about self-hosting APIs","description":"Hi gouyss, I made a quick video for web devs that want to self-host their apps. I showcase Docker, Docker-Compose and Traefik very quickly and show web developers how to get their APIs public quickly. Nothing groundbreaking but I needed this information and I didn't have a clear understanding of where to find it but it's my utmost hope it helps others that were chasing project requirements that are outlined in this video.   \n\n\nVideo Link: [https://www.youtube.com/watch?v=NIHzYIkXFhE](https://www.youtube.com/watch?v=NIHzYIkXFhE&amp;t=16s)\r  \nGithub Link:  [https://github.com/Wizock/how-to-host-FastAPI-Apis-on-traefik](https://github.com/Wizock/how-to-host-FastAPI-Apis-on-traefik)  \n\n\nAll feedback is appreciated :).","link":"https://www.reddit.com/r/Python/comments/11wbwqv/tut_quick_video_tutorial_about_selfhosting_apis/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Middle level book to study Python","description":"Is there any middle level book I can use once I know all the basics data types, functions, classes etc in order to level up the language? Thanks!","link":"https://www.reddit.com/r/Python/comments/11vhrgr/middle_level_book_to_study_python/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":29}}
{"title":"Smarty-GPT: wrapper of prompts/contexts","description":"This is a simple wrapper that introduces any imaginable complex context to each question submitted to Open AI API. The main goal is to enhance the accuracy obtained in its answers in a **TRANSPARENT** way to end users.\n\nThis idea arose in the context of a health-related experiment lead by CiTIUS.(**more coming soon**).\n\n&amp;#x200B;\n\n[https://github.com/citiususc/Smarty-GPT](https://github.com/citiususc/Smarty-GPT)","link":"https://www.reddit.com/r/Python/comments/11wh5v9/smartygpt_wrapper_of_promptscontexts/","created":"2023-03-20","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Is it possible to include C code in a package published to PyPi while not limiting compatibility?","description":"Hello!\n\nI am working on a library, and in a part of it, I perform a customized search over large bytes objects. In my experience, C code runs about an order of magnitude faster when working with primitive data like byte arrays, I wanted to rewrite that part of the code in C to gain performance.\n\nI know about the ctypes module, but I am worried about portability. The library has about 30k downloads, so I want it to be compatible will any system it is installed on.\n\nTo my knowledge, numpy is also largely written in C. Do they compile their code for every possible platform and choose the binaries dynamically, or is there some other good way to do it?\n\nIf someone has any experience regarding this, any help would be appreciated greatly!","link":"https://www.reddit.com/r/Python/comments/11vsrnh/is_it_possible_to_include_c_code_in_a_package/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":16}}
