{"title":"Sunday Daily Thread: What's everyone working on this week?","description":"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.","link":"https://www.reddit.com/r/Python/comments/12244qx/sunday_daily_thread_whats_everyone_working_on/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":8}}
{"title":"Monday Daily Thread: Project ideas!","description":"Comment any project ideas beginner or advanced in this thread for others to give a try! If you complete one make sure to reply to the comment with how you found it and attach some source code! If you're looking for project ideas, you might be interested in checking out Al Sweigart's, [\"The Big Book of Small Python Projects\"](https://inventwithpython.com/bigbookpython/) which provides a list of projects and the code to make them work.","link":"https://www.reddit.com/r/Python/comments/1234ii2/monday_daily_thread_project_ideas/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Introducing gptty v0.2.1 - A Powerful CLI Wrapper for ChatGPT with Context Preservation &amp; Query Support, Now on PyPI!","description":"Hey Reddit! \ud83d\ude80\n\nI'm excited to share with you the latest version of **gptty** (v0.2.1), a context-preserving CLI wrapper for OpenAI's ChatGPT, now with a handy `query` subcommand and available on PyPI!\n\n\ud83d\udd17 **GitHub:** [https://github.com/signebedi/gptty/](https://github.com/signebedi/gptty/)\n\n\ud83d\udd17 **PyPI:** [https://pypi.org/project/gptty/](https://pypi.org/project/gptty/)\n\n**What's new in gptty v0.2.1?**\n\n\ud83d\udcda **The Query Subcommand**: The `query` subcommand allows you to submit multiple questions directly from the command line, making it easier than ever to interact with ChatGPT for quick and precise information retrieval (and also has a pretty cool loading graphic).\n\n[Scripting the \\`query\\` subcommand to pass multiple questions](https://preview.redd.it/qw6q6mame7qa1.png?width=1661&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=3a1aad3b9b61babc439ccb0a3a77aa792501cd3e)\n\n\ud83c\udff7\ufe0f **Tagging for Context**: gptty enables you to add context tags to your questions, helping you get more accurate responses by providing relevant context from previous interactions. This is useful for generating more coherent and on-topic responses based on your tags.\n\n\ud83d\udce6 **PyPI Deployment**: gptty is now available on PyPI, making it super easy to install and get started with just a simple `pip install gptty`.\n\n**Why should developers choose gptty?**\n\n\ud83c\udfaf **Focus on Delivered Value**: gptty is designed to help developers, data scientists, and anyone interested in leveraging ChatGPT to get the most value out of the API, thanks to context preservation, command-line integration, and new query feature.\n\n\ud83d\udee0\ufe0f **Ease of Use &amp; Flexibility**: gptty offers an intuitive command-line interface (running [click](https://click.palletsprojects.com/en/8.1.x/) under the hood), making it simple to interact with ChatGPT, either for quick one-off questions or more complex, context-driven interactions. Plus, it can be easily integrated into your existing workflows or automation scripts.\n\n\ud83e\udde0 **Harness the Power of ChatGPT**: By combining the capabilities of ChatGPT with gptty's context-preserving features and query support, you can unlock a wide range of applications, from answering technical questions to generating code snippets, and so much more.\n\n\ud83d\udd00 **Support for All GPT-3 Models**: gptty currently supports all GPT-3 models, providing developers with the flexibility to choose the model that best suits their specific use case or application. This ensures that you can make the most of the OpenAI API and its various models without having to switch between different tools.\n\n\ud83d\udd0c **Planned Plug-and-Play Support for GPT-4 API Tokens**: In anticipation of the upcoming GPT-4 release, we're working on adding plug-and-play support for GPT-4 API tokens. This means that, once GPT-4 is available, you'll be able to seamlessly integrate it into your gptty setup and continue leveraging the power of the latest generation of language models.\n\nTo get started, simply install gptty using `pip`:\n\n    pip install gptty\n\nCheck out the **GitHub repo** for detailed documentation and examples on how to make the most of gptty: [https://github.com/signebedi/gptty/](https://github.com/signebedi/gptty/). You can also see my original post about this [here](https://www.reddit.com/r/Python/comments/11w7lw6/check_out_gptty_a_cli_wrapper_for_chatgpt_written/).\n\nHappy coding! \n\n**Edit**. Please forgive the cringe worthy emoji use. My lawyer informed me that, as a python / pypi developer, I was legally obligated to add them.","link":"https://www.reddit.com/r/Python/comments/123aiqk/introducing_gptty_v021_a_powerful_cli_wrapper_for/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":4}}
{"title":"Which GUI module is better in Python? tkinter or PyQt or kivy?","description":"","link":"https://www.reddit.com/r/Python/comments/123b6x2/which_gui_module_is_better_in_python_tkinter_or/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":18}}
{"title":"I created Pamet - a FOSS desktop app for organizing thoughts and notes","description":"Github: [https://github.com/v-ko/pamet](https://github.com/v-ko/pamet)\n\n  \nThere's a gazillion note taking apps, I know, but when I started the project - there was none with the GUI I imagined. Currently Miro is pretty close, but it's closed source and it's not possible to keep your data locally, so that's the main reason I continued developing Pamet.\n\n&amp;#x200B;\n\n[Demo](https://i.redd.it/m0fwjov3j4qa1.gif)\n\n# A bit of history\n\nI couple of years ago I began rewriting the app from C++/Qt to Python/Qt (PySide6). I started out with over-engineering and over-thinking it, drowning in the cross-platform-GUI swamp of technologies and so on. In the end I decided I'll use mainly Python (since I use it for work and also I love the syntax). I would try to be noobishly DRY and the reuse the actions/states with Brython in the browser and then Cordova for mobile (sounds like a great debugging experience right?).\n\nSo some time passed, I stripped my gui-architecture ambitions to a state manager ([Fusion](https://github.com/v-ko/fusion)) and finished the initial version of the app.\n\nIn retrospect - I should've done the standard thing nowadays - make a web frontend (e.g. React) with an Electron desktop app and whatever for mobile. I'll probably transition in that direction in time. But for now - I'm happy with the results.\n\n# Capabilities and philosophy\n\n(\"Pamet\" means memory in Bulgarian.)The main idea is to have 2D map-like pages (pan, zoom navigation) with notes, that can be made and styled fast. There's hyperlinking between different pages. There's a backup service by default (though restoring backups is manual for now). You can import images (audio, video - not yet implemented). You can have web links as notes, as well as activate scripts (open by double-click). Most of the testing is done on Linux. The Windows build is outdated ATM, so I'd recommend a PyPI install.\n\nI have yet to showcase the way I'm using the app, but I beilieve that everyone makes their own pattern  in time. The 2d plane + hyperlinking GUI is the UI closest to the way I connect concepts in my mind, and organize clusters of them.\n\nPamet is not supposed to be a do-it-all program, but rather it should serve for organizing ideas, \"second-brain\" is fitting buzzword right now. But it won't try to be a spreadsheet editor, image editor, specialized kanban, etc. For example right now you can import images, but editing them is done by double-clicking them to open the file, and then using whatever software you have. So the point is to keep references and possibly previews of external resources, but integrate with the existing tools, rather than reinvent the wheel.\n\n# I'd appreciate feedback\n\nThe project is still quite immature. I've been using it daily for quite a while now, but I realize that my habits are a niche, so I don't expect it would be applicable for everyone. I'd be thankful for any and all constructive feedback. About the interface, about the code, about what similar software you're using, etc.\n\n# Still this is not exactly a release\n\nI wouldn't dub this post a release, since there's quite some more work to be done. The user documentation is quite minimal. Installation is done only from PyPI or source. It's mostly a showcase. But I've put quite a lot of work in the project, and I really wanted to put it out there and get feedback.","link":"https://www.reddit.com/r/Python/comments/122vjzu/i_created_pamet_a_foss_desktop_app_for_organizing/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":5}}
{"title":"How to Build Python Media Player with PyQt5","description":"In this Python PyQt5 article we want to learn How to Build Python Media Player with PyQt5, Python is powerful language that can be used for different types of applications including creating multimedia applications. PyQt5 is popular Python library that allows developers to create graphical user interfaces for desktop applications. in this article we want to talk about how to build Python media player with PyQt5.\n\n&amp;#x200B;\n\nYou can check the complete tutorial in the below link\n\n[https://geekscoders.com/how-to-build-python-media-player-with-pyqt5/](https://geekscoders.com/how-to-build-python-media-player-with-pyqt5/)","link":"https://www.reddit.com/r/Python/comments/123hgj0/how_to_build_python_media_player_with_pyqt5/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Starlite updates March '22 | 2.0 is coming","description":"**Disclaimer**: It says \"March '22\" in the title but it should say \"March '23\". The new are from today, not a year ago.\n\nHello fellow Pythoneers, \nit's time for me to once more talk about Starlite for a bit!\n\n## Recap\n\nWhat's Starlite?\n\nStarlite is a flexible and highly performant ASGI framework, focused on building APIs\nwhile delivering great developer experience by offering ready-built solutions for \ncommon tasks such as ORM integration, caching, session management, key/value stores,\nOpenAPI-schema generation and interactive API docs, type safety and much more.\n\nYou can read more about Starlite's features in our [documentation](https://docs.starliteproject.dev)!\n\nSo what's new?\n\n\n## Starlite 2.0 on the horizon\n\nIt's been over two months since \n[we announced](https://www.reddit.com/r/Python/comments/108aq5b/starlite_development_updates_january_23/)\nStarlite `2.0`, more as a side note than major news, so it's about time to see how \nthings are going!\n\nFirstly, as with any proper project, there has been a *slight* feature creep, and\nthe `2.0` update will be a bit more involved as initially expected. But we have it under\ncontrol. We can stop at any time. I promise.\n\nJokes aside, the announcement still holds true: Starlite 2.0 retains most of its core \nfunctionality, and from a user perspective, not a lot has to change when upgrading \nyour app from `1.x` to `2.0`; If you don't want to make use of new features, the upgrade\npath will mostly consist of changing some import paths and slightly adjusting a few \nconfiguration values. \n\nBut let's take a look at what has changed, and what is yet to come.\n\n\n## Adieu Pydantic\n\nStarting with the release of `2.0.0alpha1`, Starlite replaced most of its internal models\nthat relied on Pydantic (mostly with data- or plain classes). In the following releases\nleading up to `2.0`, we will remove the last dependencies on Pydantic, and you can\nuse Starlite completely Pydantic-free.\n\nBut why?\n\nThe main motivations behind this were performance improvements and flexibility:\n\n\n**Performance**\n\nPydantic is a great library, but being fast is not one of its strengths. Its performance \nwill likely increase drastically in version 2.0, with the \n[core validation logic written in Rust](https://docs.pydantic.dev/blog/pydantic-v2/#performance), \nbut early tests indicate that it will likely still be slower than other libraries when \nit comes to (de)serialization. \n\nIn many cases this might not be an issue, but having the option to switch to an \nalternative if desired is still a valuable option, and can have significant impact on\nthe overall performance of an application.\n\n\n**Flexibility**\n\nPydantic is by far not the only library of its kind, with prominent members of the \nsame class being [attrs](https://www.attrs.org/), [cattrs](https://catt.rs/) or even \nplain [dataclasses](https://docs.python.org/3/library/dataclasses.html) for some use \ncases. \n\nStarlite currently only supports modelling data with Pydantic, which means this will\nnecessarily force an integration of Pydantic into the rest of the application's layers,\nbe it by directly using Pydantic models there, or simply the need of an additional\n\"translation layer\".\n\nBy removing Starlite's reliance on Pydantic, we're opening doors to a new, more \nflexible type of integration, which will ultimately allow to plugin in arbitrary\nmodelling libraries.\n\n\n**Does this mean I won't be able to use Starlite with Pydantic anymore?**\n\nNo. Starlite will continue to support Pydantic modelling of any kind, and you'll be able\nto keep using Pydantic models everywhere you've used them before. \n\nPydantic will be removed as a core dependency eventually, which means Starlite will be\nable to run without it, but there are no plans to stop supporting it.\n\n\n## All new DTOs\n\n[DTOs](https://docs.starliteproject.dev/1/usage/dto.html) will become more integral in \nStarlite 2.0, taking care of most of the data conversion between various types of models.\n\nThis feature is yet to be released, but it will allow you to seamlessly use data modelled\nwith for example Pydantic, [SQLAlchemy](https://www.sqlalchemy.org/), \n[msgspec](https://jcristharif.com/msgspec/) or \n[dataclasses](https://docs.python.org/3/library/dataclasses.html) in your route handlers,\nwithout the need for an intermediary model; The conversion will be handled by the specific\nDTO \"backend\" implementation. This new paradigm also makes it trivial to add support for \nany such modelling library, by simply implementing an appropriate backend.\n\n\n## emit(\"We have an event bus now\")\n\nStarting with the first alpha release  - `2.0.0alpha1` -, Starlite includes a simple\nevent bus that can be used to emit and receive events, supporting both synchronous\nand asynchronous listeners. Currently only a basic in-memory, per-process backend is \nincluded, but future versions will add support for inter-process communication by\nadding backends for [Redis](https://redis.io/), [RabbitMQ](https://www.rabbitmq.com/) and \nothers.\n\nThis is an exciting new feature, as it allows powerful patterns such as websocket \nbroadcasting, or can, in combination with \n[background tasks](https://docs.starliteproject.dev/1/usage/responses.html#background-tasks), \neliminate the need for external task queues such as [celery](https://docs.celeryq.dev/)\nor [arq](https://arq-docs.helpmanual.io/).\n\n\n## Data stores\n\nAnother exciting new feature coming in 2.0 are the all new, fully integrated\n[data stores](https://docs.starliteproject.dev/2/usage/stores.html). They are simple\nkey/value stores, including backends for the file system, memory, or common key/value\ndatabases like [Redis](https://redis.io/). \n\nThese stores are managed centrally by a \n[registry](https://docs.starliteproject.dev/2/usage/stores.html#managing-stores-with-the-registry), \nproviding easy configuration, isolation and a hierarchical structure via \n[namespacing](https://docs.starliteproject.dev/2/usage/stores.html#namespacing), and \nintegration with third parties such as plugins. Via the registry it's possible to easily\naccess stores used by various built-in features such as rate-limiting or request \ncaching, making them available throughout the entire application context.\n\n\n## What else is new?\n\nTo keep this post (relatively) brief I won't mention all the changes going into `2.0`,\nso if you want to know everything that's changed until now, you can take a look at\nthe detailed [2.x changelog](https://docs.starliteproject.dev/2/release-notes/changelog.html#2.0.0alpha1-misc), \nwhich includes all the currently released changes, features (and bugfixes).\n\n\n## What's left to do\n\nThere are a few more things that have to be done before Starlite 2.0 will be released.\nYesterday the second alpha version ([`2.0.0alpha2`](https://github.com/starlite-api/starlite/releases/tag/v2.0.0alpha2)) \nhas been released, but it won't be the last development release before `2.0.0`. \n\nA few major items on the 2.0 todo-list currently are:\n\n- Finishing new DTO implementation\n- New signature modelling backend using [attrs](https://www.attrs.org/)\n- Remove the remaining parts that rely on Pydantic\n- Writing a migration guide for `1.x` &gt; `2.0`\n- Writing tutorials / prose documentation for the SQLAlchemy repository\n\nand of course lots of minor issue that need taking care of.\n\nThere is no set release date for `2.0`, but as things are currently going, I expect\none more alpha release before the first beta version comes out. At this point, no more\nbreaking changes will be introduced, allowing the beta to be tested for a while before\nit can be considered stable and ready for the final release.\n\nAnd as always, if you want to get involved or in touch, check out Starlite on [GitHub](https://github.com/starlite-api/starlite/) or [join our Discord](https://discord.gg/X3FJqy8d2j)!","link":"https://www.reddit.com/r/Python/comments/122ld24/starlite_updates_march_22_20_is_coming/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":23}}
{"title":"I've made a simple and extendable utility to perform tests coverage analysis","description":"I'm a QA Engineer and I need to check coverage for each test suites I'm making. I think this part of tests production is quite important for making quality tests.\n\nDue to points above I need to have an utility to make this analysis fast, simple and repetitive so I've made this utility - simple to use, tested, convenient to extend.\n\nGitHub repository: [QACoverageTool](https://github.com/MostHappyCougar/QACoverageTool)\n\nAt the version 0.1.1 have been relized following analysis approaches:\n\n* State-Transitions diagram - may be applicable for tests that follow *All-States, All-Transitions* coverage criterias\n* Pivot Table - may be applicable for tests that follow *n-wise* coverage criteria\n\nYou may check use cases here: [QACoverageTool Wiki - Analysis Mods](https://github.com/MostHappyCougar/QACoverageTool/wiki/Analysis-mods)\n\nI hope this utility may be useful for you also","link":"https://www.reddit.com/r/Python/comments/123do9n/ive_made_a_simple_and_extendable_utility_to/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"py-template: one-click Python environment v0.2.0 update","description":"Hey again,\n\nOriginal post with more context [here](https://www.reddit.com/r/Python/comments/yu4ynu/pytemplate_oneclick_extensive_github_actions/).\n\n## TLDR - what is it?\n\n[py-template](https://github.com/inovintell/py-template) is a [GitHub Template repository](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-template-repository) for Python, which provides:\n\n- Opinionated linting, autoformatting, etc. (this update changes [flake8](https://flake8.pycqa.org/en/latest/) to substantially faster [ruff](https://github.com/charliermarsh/ruff)\n- CI/CD, test coverage, automated documentation creation\n- [pre-commit](https://pre-commit.com/) integration for easy local development similar to pipelines\n- Automated dependency management via `poetry`, [renovatebot](https://github.com/renovatebot/renovate)\n\nThis update also includes more extensive documentation describing how to adjust the template to your liking (e.g. consistent Python versioning, `shell` aliases for one click setup and more), click [here](https://inovintell.github.io/docs-template/py-template/setup/) to check our docs.\n\nWe hope you are gonna find it as useful as we do (and if so, star/follow is always appreciated), thank you!","link":"https://www.reddit.com/r/Python/comments/122tph3/pytemplate_oneclick_python_environment_v020_update/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":6}}
{"title":"Created my first project 'macpip'","description":"Wrote my first original python project. It's a CLI tool you can use to output a list of your installed macOS apps in requirements format. I got a new MacBook and never install from backup, wished I could just pip freeze my list of apps from the original device. So I created a little tool to do that and a bit more.\n\nFor apps that can be found in the App Store I used mdls to get the bundleID and then used apples lookup api to surface App Store links in the lookup alongside the app.\n\nFor apps that can not be found in the App Store, I use googlesearch-python to pull in the first google result for app name + bundleID + download which I've found to be pretty good at surfacing the download link for most apps.\n\nusage:\n\n`macpip freeze &gt; apps.txt`\n\nexample output:\n\n`, 1Password -` [`https://apps.apple.com/us/app/1password-8-password-manager/id1511601750?uo=4`](https://apps.apple.com/us/app/1password-8-password-manager/id1511601750?uo=4)\n\n`, Figma -` [`https://www.figma.com/downloads/`](https://www.figma.com/downloads/)\n\n`, Xcode -` [`https://apps.apple.com/us/app/xcode/id497799835?mt=12&amp;uo=4`](https://apps.apple.com/us/app/xcode/id497799835?mt=12&amp;uo=4)\n\n`, Magnet -` [`https://apps.apple.com/us/app/magnet/id441258766?mt=12&amp;uo=4`](https://apps.apple.com/us/app/magnet/id441258766?mt=12&amp;uo=4)\n\n  \nI've still got a few basic things to change:\n\n1.\tlocalize search results - currently I accept country code as an arg but don\u2019t use it in the non-bundleID search implementation\n2.\trewrite search lookup to not use the googlesearch-python lib to see if I can speed up execution\n\nWould love any tips/feedback even though it's fairly basic: \n\n[https://test.pypi.org/project/macpip/](https://test.pypi.org/project/macpip/)\n\n[https://github.com/mubranch/macpip](https://github.com/mubranch/macpip)\n\n\nEdit: fixed typo and shortened example output","link":"https://www.reddit.com/r/Python/comments/12366xj/created_my_first_project_macpip/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":6}}
{"title":"I made a Data Science project (Time Series Analysis Methods - Data Analysis &amp; Machine Learning) using Python and uploaded it to the Youtube","description":"I uploaded a full data science project which I do time series analysis and forecast in the video using Python. I explained how codes work and time series applications in video. Have a nice day, here is the link:\n\n[https://www.youtube.com/watch?v=euHSHN\\_hFX0](https://www.youtube.com/watch?v=euHSHN_hFX0)","link":"https://www.reddit.com/r/Python/comments/123fitp/i_made_a_data_science_project_time_series/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"I developed a CLI tool for querying CSV, Parquet and JSON files","description":"Filequery is an open source CLI tool I've been working on so I can easily use SQL to query CSV, Parquet and JSON files. I wrote this as a Python package which is essentially a wrapper around DuckDB. This lets you one or more queries against a file or a directory containing files and see the result in the terminal. You can also save the query results as CSV or Parquet files.\n\nOpen to feedback and suggestions.\n\n[https://pypi.org/project/filequery/](https://pypi.org/project/filequery/)","link":"https://www.reddit.com/r/Python/comments/122miha/i_developed_a_cli_tool_for_querying_csv_parquet/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":14}}
{"title":"https://replit.com/@zucalcu/Python?s=app","description":"Plz rate my code and tell my mistakes i am a beginner \ud83e\udd13","link":"https://www.reddit.com/r/Python/comments/123h8ye/httpsreplitcomzucalcupythonsapp/","created":"2023-03-27","tags":["python","reddit"],"meta":{"num_comments":4}}
{"title":"yoyo-migrations performance feedback","description":"Looking to gauge others' experience with the [yoyo-migrations](https://pypi.org/project/yoyo-migrations/) library. I've used it for a few months and have around 50 migration files built up. Along with hosted DB management, I use it to set up an ephemeral containerized DB for acceptance testing. This works great except for performance.\n\nApplying the full suite takes about 4 minutes, or over 5 seconds per migration (mostly simple table creation or alter statements). For contrast, a bare-bones script I wrote to iterate over the files and apply them manually completes in 2 seconds. I know yoyo is doing more than that behind the scenes, but a 120x increase is excessive.\n\nFor those that have used Yoyo, is that just how the tool operates in your experience? Or do I possibly have something messed up in my configuration? Thanks","link":"https://www.reddit.com/r/Python/comments/1232r09/yoyomigrations_performance_feedback/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"Warning, Streamlit collects a lot of data!","description":"I just found out that Streamlit defaults to sending telemetry data to Streamlit (and so sends it to Snowflake). While they say this is only metadata and not app information, I'm not totally sure I trust that.   \n\n\n[https://docs.streamlit.io/library/advanced-features/configuration#telemetry](https://docs.streamlit.io/library/advanced-features/configuration#telemetry)","link":"https://www.reddit.com/r/Python/comments/121pvdy/warning_streamlit_collects_a_lot_of_data/","created":"2023-03-25","tags":["python","reddit"],"meta":{"num_comments":58}}
{"title":"FCL (function-centered-language) is a functional language written in Python","description":"&amp;#x200B;\n\n[FizzBuzz implementation in FCL](https://preview.redd.it/y55v7h3ef3qa1.png?width=1306&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=5a1f659baef185d4df6be23e5b6b092ec735062d)\n\n**Hello**, recently made an interpreted language in python and haven't decided on its use cases or if I wanna be serious about it or not but just wanted to share.\n\nThe idea is to use function for everything although the language currently doesn't even support creating function which I will add soon. There's probably thousands of languages like this but wanted to find a unique use-case for now the real problem is speed so might rewrite in C++ or rust.\n\nAlso would like some feedback from pro language creators if my implementation is correct or not? for an average interpreted langauge.\n\nLink: [FCL (GitHub)](https://github.com/Fus3n/fcl)","link":"https://www.reddit.com/r/Python/comments/122nw08/fcl_functioncenteredlanguage_is_a_functional/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"Which area/field for new Python programmer?","description":"Hi. What's the easiest area/field to get into if you're a beginner Python programmer? I did 17 years programming in Coldfusion and am now learning Python.\n\nI appreciate any advice. Thanks.","link":"https://www.reddit.com/r/Python/comments/122uptr/which_areafield_for_new_python_programmer/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":13}}
{"title":"Python executable makers","description":"Hi there ! I'm curious what are you using to generate executable files for you Python scripts because I'm getting angry at some popular ones. I got some problems for my program with Pyinstaller as I think it didn't put the dependencies into the executable, the program wasn't working on computers without Python installed. As for cx\\_Freeze, it got the dependencies into it ( at least I think, as It created some extra files .dlls and other stuff ), but the executable didn't work at all because it got an error at run about input lines that I've put in the code(in [main.py](https://main.py), not setup.py) ( the program works in Pycharm ).","link":"https://www.reddit.com/r/Python/comments/122l5el/python_executable_makers/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":11}}
{"title":"How to Ban 1+N in Django","description":"I always thought of 1+N as a thing that you just keep in your head, catch on code reviews or via performance regressions. But preventing it might be a good idea too.\n\n [Read more](https://suor.github.io/blog/2023/03/26/ban-1-plus-n-in-django/)","link":"https://www.reddit.com/r/Python/comments/122kkrs/how_to_ban_1n_in_django/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":11}}
{"title":"Does it make more sense to learn Python myself and do the programming on my project later, or should I hire someone to create the project for me, that I can then take over once I learn it?","description":"For deeper context, check out my profile for my previous post in r/it for further details. The shortened version of it is that I have a repetitive data entry process that I do for my job. \n\nIt's something I do for myself because the results actively predict where I need to be to effect the best results. My company makes deliveries of a sort to over 1000 diffrent locations across my state. Knowing what our trucks are capable of delivering let's me know the operational condition of the equipment inside. As the companies service tech, I'm searching for broken systems that need repair, so I can get a very clear heads up of the problem areas long before the customers call it in.  (Example: If we regularly make a delivery of 600# and the last two deliveries show its dropped down to 50#, there's obviously something wrong there)\n\nI have a website database where every delivery is recorded. I've created a Google sheets file that's set up with formulas to crunch all the numbers for me. All I have to do is copy that delivery data from the website to the sheet and it automaticly calculates the rest. The website takes 60 seconds at least to collect the delivery data on one delivery. I compare it to what I have in the sheet and add in the new information. In order to keep up with the deliveries, I usually try to do data entry on about 100 entries each day. This process takes at least an hour every day whether it's a work day, weekend, or vacation. I get to spend at least an hour every day doing data entry work. \n\nThe goal I'm looking to accomplish is to move my Google sheets file over to some kind of automated program that will collect the data and crunch the numbers automaticly for me. Such a program would literally give me an hour more of free time every day. So it's definitely worth it to do. \n\nSo the question is, how should I do this? Should I learn how to program and do this project myself, or does it make sense to hire someone to create the program for me, and then when I learn programming, I can take over the program. \n\nOn the one hand, either way, I plan on learning programming, so I can save money and make the program myself, it's a win for me.\n\nOn the other hand, having someone else do it for me means I get an experienced hand to do it correctly the first time without the guess work that comes with doing while learning. Additionally,  saving that hour every day gives me that much more time I could put towards learning programming myself. \n\nIf I go that route, what would be a fair charge to expect for such a project, and is there anyone who would want to take on such a project?","link":"https://www.reddit.com/r/Python/comments/122wv7o/does_it_make_more_sense_to_learn_python_myself/","created":"2023-03-26","tags":["python","reddit"],"meta":{"num_comments":8}}
{"title":"Zang - A dynamically typed programming language made in python","description":"It even has a text editor with syntax highlighting! what do you guys think?\n\n[https://github.com/cmspeedrunner/Zang](https://github.com/cmspeedrunner/Zang)","link":"https://www.reddit.com/r/Python/comments/121ofpa/zang_a_dynamically_typed_programming_language/","created":"2023-03-25","tags":["python","reddit"],"meta":{"num_comments":37}}
{"title":"popularity behind pydantic","description":"I was trying to find a good data validation library to use and then came across pydantic.\n\nI was wondering what exactly is the reason behind this popularity of pydantic. I saw some other libraries also such as msgspec which seems to be still faster than pydantic-core, but doesn't seems much popular.\n\nAlthough I know speed is a secondary matter and first comes developer comfort as per many (this is what pydantic also claims to be the reason behind their popularity)... I just wanted to know if there are some mind blowing features in pydantic which I am missing.\n\nPS : can anyone share their experience, especially in production about how helpful pydantic was to them and wether they tried any other alternatives only to find that they lack in some aspects?","link":"https://www.reddit.com/r/Python/comments/121amct/popularity_behind_pydantic/","created":"2023-03-25","tags":["python","reddit"],"meta":{"num_comments":73}}
{"title":"pywinterminal -- fun project for Windows/Linux admins","description":"Hey everyone,\n\nI figured someone could benefit from this. I mainly use a Mac or Linux. I migrated from Windows earlier last year and haven't looked back. However, in my job as a Cloud Engineer/DevOps Engineer/WhateverTheyTellMeToBeNeer I still have to maintain some Windows servers.\n\nI'm a big terminal guy. I like being able to SSH into a server when I need a few quick things and be done. Well, SSH into Windows is possible now. However, most enterprises do not support this and you are working off of older based severs that would not even support this. This means you have to RDP into the server. I HATE RDP!!!!\n\nThis got me thinking, well, what about if you make a terminal to connect from Mac/Linux to Windows using the WinRM library in Python? I started thinking about it more, what if I used something that does it already and does it well? Ansible!!! What if you used Ansible as the backend, and created a mock terminal you could send commands through??? Winner!!!\n\nSo pywinterminal is exactly that. It is a fancy forever loop that allows you to send commands to a Windows server through a mock terminal. It maintains history and directory state. So if you send a command \"cd c:\\\\windows\\\\temp\", then the next command you sent \"dir\", it would output the the dir of \"C:\\\\windows\\\\temp\". This is still a work in progress, but it has been an absolute life saver for me.\n\nThere are limitations. if you set a variable, value is not not maintained. This is something I am looking into. HOWEVER, you can send piped commands and multiple commands like \"get-service | where name -like \\*win\\*\"  or \"mkdir c:\\\\temp; cd c:\\\\temp; dir\". It uses Ansible in the backend to send all this stuff back and forth. I may be able integrate this a bit more and have a custom playbook to keep a sort of \"variable state\". Until then it has a basic functionality.\n\nIt an open source project, and it is in an early alpha stage so their will be bugs. I have not extensively tested everything, but for general use it works. Code is a bit rough and by no means final. I do this in my spare time as I have time, which isn't much. Please enjoy! I hope it makes someone's life easier!\n\n[https://github.com/mcscwizzy/pywinterminal](https://github.com/mcscwizzy/pywinterminal)","link":"https://www.reddit.com/r/Python/comments/121lyf1/pywinterminal_fun_project_for_windowslinux_admins/","created":"2023-03-25","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Panther - Throttling (Day 1)","description":"Panther I**s A Fast &amp;  Friendly Web Framework For Building Async APIs With Python 3.11+**\n\nPanther has a built-in Throttling class that you can use to handle the rate limit of your APIsIt has rate and duration so you can specify how many requests the user can send to your API in a duration\n\n    from datetime import timedelta\n    from panther.app import API\n    from panther.throttling import Throttling\n    \n    \n    # User only can request 5 times in every minute\n    InfoThrottling = Throttling(rate=5, duration=timedelta(minutes=1))\n    \n    \n    @API(throttling=InfoThrottling)\n    async def info_api():\n        return {'detail': 'some detail'}\n\nPreview: [preview.redd.it](https://preview.redd.it/6mmvqpbidvpa1.jpg?width=1080&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=3f747d70a3c8eaca1917dcd9385c5d3efa9ed440)  \nGitHub: [https://github.com/AliRn76/panther/](https://github.com/AliRn76/panther/)  \nPyPI: [https://pypi.org/project/panther/](https://pypi.org/project/panther/)","link":"https://www.reddit.com/r/Python/comments/121ip41/panther_throttling_day_1/","created":"2023-03-25","tags":["python","reddit"],"meta":{"num_comments":2}}
