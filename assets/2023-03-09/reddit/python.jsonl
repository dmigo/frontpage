{"title":"Thursday Daily Thread: Python Careers, Courses, and Furthering Education!","description":"Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**","link":"https://www.reddit.com/r/Python/comments/11mcnzg/thursday_daily_thread_python_careers_courses_and/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"I made a Finance Database with over 300.000 tickers to make Investment Decisions easier","description":"It has been well over 2 years since I first introduced the database to this community, see [here](https://github.com/JerBouma/FinanceDatabase), and since then a lot changed so I felt like it is worth sharing about my package yet again and honestly, also to ask for a little bit of help.\n\nSo, within the investment universe there exists tens of thousands of companies (and even more when you include all exchanges). Identifying all of them and understanding in detail where they fit in the world is tough up to a point that it either requires you to pay a hefty fee to obtain this type of categorisation or do a massive amount of manual research. I found it a bit strange that this information was not publicly available while it is quite crucial for investment research. Therefore I got to work.\n\n**Insert the** [**FinanceDatabase**](https://github.com/JerBouma/FinanceDatabase)**.** This is a database of over 300.000 symbols (155k+ companies, 36k+ ETFs, 57k+ Funds, 3k+ Cryptocurrencies and more) that is fully categorised per country, industry, sector, category and more. It includes a package, written in Python and installable with \\`pip install financedatabase\\`, that gives access to the data with ease. You can obtain the entire dataset per asset class, search through it and filter based on specific options. Have a look at [this Notebook](https://github.com/JerBouma/FinanceDatabase/blob/main/examples.ipynb) to have an idea what it is offering.\n\nA simple example of what it does in the following:\n\n    import financedatabase as fd\n    \n    # Initialize the Equities database\n    equities = fd.Equities()\n    \n    # Obtain all data available excluding international exchanges\n    equities.select()\n\nWhich returns the following DataFrame: https://preview.redd.it/5gmiej7pbjma1.png?width=1516&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=faa84ca0e91107530f9845a5313ff79adc54ba6a\n\nBy default it hides non-US exchanges (since the ticker symbols work for most other programs) but that can be turned off with **equities.select(exclude\\_exchanges=False)** which returns 155.000 rows.\n\nThe database explicitly does not store up to date fundamental data. It tries to be as timeless as possible so that it doesn't become outdated fast. Because there are a variety of other ways, like FinancialModelingPrep, yFinance etc, to get this data there is no use in including this in the database.\n\nI've improved this database not only by increasing the amount of symbols (from 180k to 300k) but also:\n\n* Approximated the The Global Industry Classification Standard (GICS\u00ae), a standard used for sectors and industries everywhere. Note that this was approximated and therefore no actual data is collected. Furthermore, not all categories are included.\n* Updated and removed tickers that either no longer exist or had outdated information.\n* Made the package itself object orientated making data collecting and searching much more efficient and logical. (shoutout to [Colin Delahunty](https://github.com/colin99d) for the help here too)\n* The database initially featured thousands of JSON files. At the time it made sense also given my rather novice background in programming. However, a much more efficient (and manageable way) is to work with CSV files. So instead, one CSV file per asset class.\n* Due to using CSV files, it becomes **really** easy to update accordingly.\n* To make loading data itself still quick, it automatically compresses the data so that loading in data is not slowed down by using a format that is more easy to update.\n* Updated the README, Contributing Guidelines and overal documentation.\n\nSo being an open source project and trying to maintain such a database is tough to do alone. While I strongly believe the database can stay relevant for a long period due to the fact that the majority of companies do not suddenly stop existing, some maintenance is needed. Therefore, with this post I would like to not only invite you to explore the database but also to see if you can improve it along the way. Please visit the [CONTRIBUTING GUIDELINES](https://github.com/JerBouma/FinanceDatabase/blob/main/CONTRIBUTING.md) that explains in detail how you can contribute. Just pointing out wrong or missing information is already very beneficial!\n\nHope this database is still just as useful as it was two years ago!","link":"https://www.reddit.com/r/Python/comments/11lyyzb/i_made_a_finance_database_with_over_300000/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":29}}
{"title":"How can I deploy a full Tkinter app with database included?","description":"How to deploy a full desktop app with database ready to install on any pc?","link":"https://www.reddit.com/r/Python/comments/11mfk3l/how_can_i_deploy_a_full_tkinter_app_with_database/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":10}}
{"title":"What is the best way to start studying python? (f21)","description":"Disclaimer: I like studying things from the basic level first but I would like to get new ideas for studying python. \n\nSo lately I\u2019ve been studying python with chat gpt and it actually worked kinda nice\u2026 except for the limited questions per hour. I feel like I need to study more about the operators, variables and functions. Where shall I start at?","link":"https://www.reddit.com/r/Python/comments/11mmdje/what_is_the_best_way_to_start_studying_python_f21/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":19}}
{"title":"RustPython","description":"I first read about [RustPython](https://github.com/RustPython/RustPython) today and found [this discussion](https://www.reddit.com/r/Python/comments/iirja9/rustpython/?utm_source=share&amp;utm_medium=web2x&amp;context=3) that seems very interesting and still pertinent to the topic. Here's my take on it:\n\nEven though, as mentioned in the original thread, Rust is not a magical solution for anything, I think the language's features that make it less prone to bugs (mainly memory safety, AFAIK) could speed up improvements to Python. This could happen directly, or indirectly by simplifying contributions to the interpreter.\n\nSince the original discussion, the Linux kernel has started taking contributions in Rust. It'll probably be a very long time before the majority of the kernel is in Rust; if it is ever fully converted that will definitively take much longer. But this movement gives Rust a strong vote of credibility, and IMO a confident step in establishing Rust as the successor of C as de facto system language of the day (again, a confident *first* step).\n\nConnecting to the point above about Rust succeeding C, the Rust community seems a lot more prolific than C's while both C and C++ [were reported](https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/) as being used much more than Rust in 2022. I believe Rust has the qualities to dominate many of the areas C dominates today, but that trend has definitely not materialized yet. If there is indeed a trend of Rust growing more, and if this trend keeps up, an interpreter in Rust could eventually source from a larger pool of developers.\n\nLastly, I think the Rust and Python communities could mingle (e.g. over cherishing a good developer experience) and contribute much to each other in a way that doesn't happen with Python and C where there seems to be a wall imposing that Python is for flexibility and C for performance. This last point seems to me the most important/fruitful, but is also most subjective and sensible to my own biases.\n\nSo I'm curious about the community's feelings on this topic in general, but would also like to suggest the question: How important do you think it would be to have a mature Python interpreter written in Rust 10 years from now?","link":"https://www.reddit.com/r/Python/comments/11m43r5/rustpython/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":17}}
{"title":"If you had to develop a game in Python, what engine and tools would you use?","description":"Why? Do you think there is one engine that is better, or more appropriate?","link":"https://www.reddit.com/r/Python/comments/11lrlfn/if_you_had_to_develop_a_game_in_python_what/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":74}}
{"title":"can someone help me understand the pulp library and how to solve this problem","description":"i want to find the optimum solution and the pulp library is very complex m getting errors i don't understand and i need help with linearizing my variables thank you in advance \n\nproblem:\n\nA distributor of raw materials for cosmetics wants to improve its cash flows. The considered supply chain contains a single distributor, linked to one or more suppliers. These suppliers deliver the same product, but may have different characteristics, such as production capacity, price demanded, or payment deadline. We are interested in optimizing the physical and financial flows of the distributor. Cash constraints sometimes prevent it from carrying out its procurement activities optimally. A lack of liquidity can hinder the normal course of business. Sometimes, the potential demand is high but financial constraints leave it with no choice but to order less.\n\nIn addition, some suppliers offer discounts to companies that pay their bills in advance. In some cases, the distributor can stretch or defer accounts payable beyond the due date. Some suppliers allow the distributor not to pay at maturity on condition that penalties are applied to the amount of the invoice. It is therefore in its interest to focus on optimized payment management and find an optimal payment schedule.\n\nThe amount to be paid for each invoice differs depending on three possible scenarios: the invoice is paid with a discount before or at the discount period (ii) the invoice is paid at its actual value after the discount date but before or on the payment due date (iii) the invoice is paid with a penalty that depends on the time elapsed after the payment deadline. If the invoice is not paid before the due date, the penalty or interest begins to accumulate from that date until the prescription deadline of the invoice. Payment of the invoice must be made before the prescription period.\n\nThe distributor's objective is to plan its orders, the quantities to be delivered to each customer, the payment schedule of its invoices according to the available cash while maximizing its capital.\n\nThe problem data is provided in the excel file: demand/customer, quantity available by supplier, payment term/by supplier, and initial cash.","link":"https://www.reddit.com/r/Python/comments/11mpbkq/can_someone_help_me_understand_the_pulp_library/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"Using LLMs in a Streaming Context in Python","description":"I've been playing around with different real-time/streaming use cases in Python and I got interested in where LLMs could be useful to analyze data in real-time. It is wild how much easier it has gotten to use models with Hugging Face. I wrote this notebook to share something I recently made. It is a real-time pipeline to analyze financial news in real-time ([https://colab.research.google.com/drive/1TtLcvX4Xw4vDMVUOy5mOyJmMr7AqOrG4?usp=sharing](https://colab.research.google.com/drive/1TtLcvX4Xw4vDMVUOy5mOyJmMr7AqOrG4?usp=sharing)). \n\n&amp;#x200B;\n\nDoes anyone have some interesting ideas for using LLMs in a streaming context?","link":"https://www.reddit.com/r/Python/comments/11m7ifm/using_llms_in_a_streaming_context_in_python/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Becoming Python Backend Developer and gaining experience","description":"Hi,\n\nI've python knowledge and experience developing different small tools/projects (mostly around automating). I'm aware of Python SDK. I want to become Python backend engineer and do some hobby/small projects so that I can claim to be backend engineer. \n\nCan anybody guide me/point to tutorials/projects that may help me in this regard.","link":"https://www.reddit.com/r/Python/comments/11mjyy0/becoming_python_backend_developer_and_gaining/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":4}}
{"title":"smb library","description":"Is there any easy way to download smbprotocol zip file directly?\n\nI know pip command allows installation but I am looking a straight way to download it.\n\npip portal has a download section but that gives set up only which is not relevant.\n\n\nSomething like java allows to download JAR file directly.","link":"https://www.reddit.com/r/Python/comments/11mi055/smb_library/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Using Python to Cast Fullscreen Web Browser to TV","description":"Trying to get a script set that will always cast to a specific device, a web browser at full screen dark mode.\n\nThink using selenium might be the best route.\n\nAny tips? Does this sound possible?","link":"https://www.reddit.com/r/Python/comments/11lxj0y/using_python_to_cast_fullscreen_web_browser_to_tv/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":7}}
{"title":"A Programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges (developer post)","description":"I had the pleasure of presenting JOY OF PROGRAMMING here on r/python before and it was met with an overwhelmingly positive reception and a lot of valuable feedback. Thank you!  In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It covers a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Development is well underway and I'm aiming for a release in Q4 this year.\n\nToday I'd like to get your thoughts on the importance of debugging! Obviously, I already spent an unreasonable amount of time solving the problem, before talking to stakeholders :). So I did create a custom Python debugger (using sys.settrace) and hooked it up to my in-game GUI (based on Codemirror). Now you can set breakpoints, step through the code and inspect variables like you are used to - and the game / simulation steps along in sync (mostly).\n\nIf you are interested in the game, you can find a lot more information about this and all other features and an up to date devlog on the Steam page:\n\n[https://store.steampowered.com/app/2216770/JOY\\_OF\\_PROGRAMMING\\_\\_Software\\_Engineering\\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator)\n\nI\u2019m happy to answer any questions or to hear your feedback and ideas.","link":"https://www.reddit.com/r/Python/comments/11l0a09/a_programming_game_where_you_use_python_to/","created":"2023-03-07","tags":["python","reddit"],"meta":{"num_comments":59}}
{"title":"Documentation for COM support in pywin32","description":"I'm looking for good documentation of python's WinAPI COM support. \n\nThe most conscise documentation I can find is a chapter in Mark Hammond's \"Python Programming On Win32\". However, it was published in 2000 and AFAIK never updated since.\n\nThe online documentation is quite brief and as dated (e.g. https://mhammond.github.io/pywin32/html/com/win32com/HTML/QuickStartClientCom.html).\n\nIs there anything... better? Fresher?","link":"https://www.reddit.com/r/Python/comments/11lsvvs/documentation_for_com_support_in_pywin32/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":4}}
{"title":"Processing RAW (ARW) file","description":"Hi. I'm trying to process Sony ARW file with my custom dcp file. So I found rawpy library which does almost ok job, but it seems it is missing an ability to use a custom dcp file so colors in RGB images are bad. Does anybody know any way to programmatically process RAW files? RawTherapee does its job well as an app, but it seems there are no python bindings. Going to process thousands of images in AWS Lambda. Thanks","link":"https://www.reddit.com/r/Python/comments/11lvfcq/processing_raw_arw_file/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Using Python with the ChatGPT API","description":"I've been playing with ChatGPT API, and wanted to post this easy to get started using Python with the API.  It goes through the basic setup and also the code and playing around with different prompts.\n\n[https://medium.com/@msgold/using-the-chatgpt-api-with-python-c56857e0e153](https://medium.com/@msgold/using-the-chatgpt-api-with-python-c56857e0e153)","link":"https://www.reddit.com/r/Python/comments/11lkua4/using_python_with_the_chatgpt_api/","created":"2023-03-08","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"What are some useful standard libraries that you wish you had known earlier?","description":"I am fairly new to to python and just discovered enum and more recently, pickle. They were perfect for this small program I was building and it seems python has something perfect for almost every scenario. What are some other useful standard libs or methods within, that would be good for a beginner to know about?","link":"https://www.reddit.com/r/Python/comments/11kwy08/what_are_some_useful_standard_libraries_that_you/","created":"2023-03-07","tags":["python","reddit"],"meta":{"num_comments":118}}
