{"title":"Thursday Daily Thread: Python Careers, Courses, and Furthering Education!","description":"Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**","link":"https://www.reddit.com/r/Python/comments/11z1t15/thursday_daily_thread_python_careers_courses_and/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Re-usable engine for classic \"snake\" game","description":"\"engine\" is probably a bit of a grand term for this, but basically, there is a method that accepts a directional input (up/down/left/right) and produces a new game state for each frame of the game. Collecting/reading the inputs and drawing the game state is up to you (this also makes it useful for anyone wanting to train some ML system to play snake, if that's what you're into).  \n\n\nThere is also a sample terminal-based implementation as the module \\_\\_main\\_\\_, if you just wanna play snake :)   \n\n\n[https://eriknyquist.github.io/snakeng/](https://eriknyquist.github.io/snakeng/)","link":"https://www.reddit.com/r/Python/comments/11z5mh1/reusable_engine_for_classic_snake_game/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"How do I advance as a Python Programmer in general?","description":"Hey guys, randomly about 7 months ago I decided I wanted to learn how to code with python. I have done my fair share of watching tutorials and have just been working on small projects ever since. I have gotten to the point where I can understand almost any python code (aside from the game developing side I have never touched that) but I still am pretty lackluster at writing my own code. Anybody have advice for me on how to improve writing my own code?","link":"https://www.reddit.com/r/Python/comments/11yzbnn/how_do_i_advance_as_a_python_programmer_in_general/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":6}}
{"title":"GPTerminator - ChatGPT in the Terminal UPDATED","description":"Hey everyone, I posted about this project a while back, however, lots of changes have been made and I would appreciate if you guys checked it out! You can now copy code, save/load chats, configure, etc.\n\nRepository link: [https://github.com/AineeJames/ChatGPTerminator](https://github.com/AineeJames/ChatGPTerminator)\n\n[Example of GPTerminator](https://preview.redd.it/36qk7nvgoepa1.png?width=1587&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b68f2c5af57c9e24e0832610db1c1bbd00b3d805)","link":"https://www.reddit.com/r/Python/comments/11z6xd0/gpterminator_chatgpt_in_the_terminal_updated/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"Hey Guys, I'm an Open Source enthusiast. StackFoss.com is an open source StackOverFlow alternative, and what makes StackFoss awesome is Focus on open source and Ad-free.","description":"","link":"https://www.reddit.com/r/Python/comments/11zb27l/hey_guys_im_an_open_source_enthusiast/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"TUI app with 100+ interactive Python Regex exercises","description":"Hello!\n\nHaving an interactive program that automatically loads questions and checks the solution is wonderful to have while learning a topic. I wrote a [TUI app](https://github.com/learnbyexample/TUI-apps/blob/main/PyRegexExercises) that has beginner to advanced level exercises for Python regular expressions. There are more than 100 exercises covering both the builtin `re` and third-party `regex` modules.\n\nThis app is available on PyPI as [regexexercises](https://pypi.org/project/regexexercises/). Example installation instructions are shown below, adjust them based on your preferences and OS.\n\n    # virtual environment\n    $ python3 -m venv textual_apps\n    $ cd textual_apps\n    $ source bin/activate\n    $ pip install regexexercises\n\n    # launch the app\n    $ regexexercises\n\nTo run the app without having to enter the virtual environment again, add this alias to `.bashrc` (or equivalent):\n\n    # you'll have to change the path\n    alias regexexercises='/path/to/textual_apps/bin/regexexercises'\n\nAdjust the terminal dimensions for the widgets to appear properly, for example 84x25 (characters x lines). Visit https://youtu.be/0oXPeF8HutQ for a video demo. There's a user guide within the app as well.\n\nThese exercises have been adapted from my [Understanding Python re(gex)?](https://github.com/learnbyexample/py_regular_expressions) ebook (free to read online).\n\nHope you'll find this app useful. Let me know your feedback. Happy learning :)","link":"https://www.reddit.com/r/Python/comments/11ygklf/tui_app_with_100_interactive_python_regex/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":8}}
{"title":"Tools for address verification/repair","description":"Curious if anyone has experience with tools that can help me build an address verification/repair component of a data quality tool? Thanks very much in advance.","link":"https://www.reddit.com/r/Python/comments/11zepzq/tools_for_address_verificationrepair/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"Redditors, anyone knows a good Dashboard example that we can get some inspiration from to manage a Statistical process control to have in a manufacturing environment?","description":"","link":"https://www.reddit.com/r/Python/comments/11z6xnm/redditors_anyone_knows_a_good_dashboard_example/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Super Fast Proxy Fetcher for developers","description":"tl;dr I built ballyregan - a python package proxy fetcher that finds free valid proxies in seconds (300 proxies / 30s).\n\nHi everyone, I'm Idan, a software developer and former DevOps engineer. I was scrapping some websites for an automation when my IP got blocked and banned. Then I discovered the proxy world.\n\nso Ballyregan is a proxy fetcher that aims to be the fastest and most reliable out there. It fetches proxies from many different providers, validates them async to provide high performance and speed, and finally allows you to filter your proxies by protocol and anonymity level.\n\nWanna try out? Star us on Github! \u2b50: [Star!](https://github.com/idandaniel/ballyregan) (it really does help me out in keeping this thing going)","link":"https://www.reddit.com/r/Python/comments/11yh3qc/super_fast_proxy_fetcher_for_developers/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":24}}
{"title":"refine a pslg with iterated snap rounding","description":"[ShayHill/snap\\_pslg: Clean up a pslg with iterated snap rounding (github.com)](https://github.com/ShayHill/snap_pslg) \n\n# snap_pslg\n\nRefine a [planar straight-line graph](https://en.wikipedia.org/wiki/Planar_straight-line_graph) with [iterated snap rounding](https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.23.220).\n\n* floor all points to integer coordinates\n* eliminate edge intersections and t-junctions\n* if allowed to converge, no point will be within .5 units of an edge. You can remove this constraint entirely, maintaing more of the input shape at the cost of near t-junctions, by setting max_iterations to 0.\n\nThis will slightly distort the pslg, but the result will be ready for triangulation and other algorithms.\n\n## install\n~~~\npip install snap_pslg\n~~~\n\n## signature\n~~~python\nVec2 = Annotated[Iterable[float], \"2D vector\"]\n\ndef snap_round_pslg(\n    points: Iterable[Vec2], edges: Iterable[tuple[int, int]], max_iterations: int = 100\n) -&gt; tuple[list[IntPoint], list[tuple[int, int]]]:\n    \"\"\"Perform one iteration of snap rounding.\n\n    :param points: A list of 2D points\n    :param edges: A list of edges, each a pair of indices into points\n    :param max_iterations: optionally limit number of iterations to perform. By\n        default, will try 100 iterations to reach convergence.\n    :return: A list of 2D points, a list of edges, each a pair of indices into points\n\n    Some of the points may not have indices. That is fine.\n    \"\"\"\n~~~\n\n## usage\n\n~~~python\nfrom snap_pslg import snap_round_pslg\n\npoints = [(0, 0), (3, 0), (3, 3), (0, 3), (5, 5)]\nedges = [(0, 2), (1, 3)]\n\n# You might have noticed that point (5, 5) was never used. This is fine. It\n# will be retained as a point and any line segments that pass very close to it\n# will be routed through it.\n\nnew_points, new_segments = snap_round_pslg(points, edges)\n\nnew_points  # [(0, 0), (5, 5), (3, 3), (2, 2), (0, 3), (3, 0)]\nnew_edges  # [(0, 3), (4, 3), (3, 2), (3, 5)]\n\n# a new point, (3, 3) has been added at the segment intersection\n# each segment is broken into two pieces\n~~~","link":"https://www.reddit.com/r/Python/comments/11z7d4b/refine_a_pslg_with_iterated_snap_rounding/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Python-based (or usable through command-line) synths and samplers","description":"Hey all! I'm playing around with music generation in Python, but I've run into an issue where the synth I'm using only works with SoundFonts (.sf2), and while they're okay, they mostly sound pretty lame. Can anyone suggest some synths and/or samplers that work with Python or at least command line? It would need to take midi data and generate audio out of it.\n\n&amp;#x200B;\n\nAs a side note, I use Logic Pro/Ableton, so if there's a way to use VST or Audiounit synths that I already own inside Python, that would be HUGE.","link":"https://www.reddit.com/r/Python/comments/11yrwfz/pythonbased_or_usable_through_commandline_synths/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":8}}
{"title":"A fast way to create custom GUIs using Qt-designer and other lightweight library in python","description":"I got really irritated by the huge startup time and huge folder size of pyqt libraries. But i liked the comfort of Qt-designer. So I made a script to use the best of both worlds !.\n\nIt's a hobby project and still in adolescent stage. link  [here](https://github.com/amrutnrp/qui-converter)\n\nThoughts?\n\n&amp;#x200B;\n\nhttps://preview.redd.it/4g4wq7ya7apa1.png?width=1144&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=720b89e4cb9b1e4c691b16dbca4713395676f47f","link":"https://www.reddit.com/r/Python/comments/11yh58g/a_fast_way_to_create_custom_guis_using_qtdesigner/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"Birthday paradox","description":"I wanted to see the birthday paradox in a real example so I wrote this code. What do think ? Every time I found ~50% of the groups contains at least two equal numbers.\n\nhttps://ibb.co/Swdnxy3","link":"https://www.reddit.com/r/Python/comments/11yzg7d/birthday_paradox/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"Pricing python scripts?","description":"Is there any guide, bibliography or helpful tips to determine the price of a python script?\r\n\r\nI have developed some simple python scripts that automate certain tasks in several areas of our company, using mainly pandas, outlook and ERP/SAP data.\nThere's an internal contest on innovation ideas and I'm willing to compete in order to implement these scripts, but these solutions/scripts need be priced first.\n\r\nI work in this company as a supply chain employee, thus these scripts programming are not part of my assignments and they were programmed at home during my free time (to learn and to ease my daily work tbh)\r\n\r\nAny help will be appreciated.","link":"https://www.reddit.com/r/Python/comments/11z9503/pricing_python_scripts/","created":"2023-03-23","tags":["reddit","python"],"meta":{"num_comments":9}}
{"title":"python filename linter : a small pre-commit hook I made to lint python files and their folders to be snake_case","description":"Hey everyone, long time lurker here.\n\nhttps://github.com/ClementPinard/python_filename_linter\n\nJust made this small tool to make sure all your python files and their folders in your repo follow the snake_case convention. Was tired of seeing coworkers use the PascalCase each time a module only stores a class (I can't bear the sight of `from .MyClass import MyClass` anymore !)\n\nDon't hesitate to share your thoughts on this, this tools is arguably simple, to the point I was surprised I found nothing to do this already.\n\nFeedback appreciated on\n\n-  The existence of an older/better tool that fulfills the same purpose\n- An obvious drwaback or antipattern of this tool I didn't see\n\nAlso, although it's possible with the `--rename` command arg, this tools does not rename your files and folder automatically, because then it completely breaks your imports. I know you can do smart renaming that also updates imports in VSCode's pylance and in Pycharm as seen [here](https://devblogs.microsoft.com/python/python-in-visual-studio-code-december-2021-release/#module-rename-with-change-preview), if you know a way of doing that properly in python or CLI, let me know\n\nFinally, this tool comes with a pre-commit hook, don't hesitate to enforce it in your company to break all CIs for badly named python modules :)","link":"https://www.reddit.com/r/Python/comments/11yp6pv/python_filename_linter_a_small_precommit_hook_i/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Open source tool Pair, An iterative, stateful chat-like interface for programmers to pair programming with GPT-4","description":"we have released an Open source tool Pair ([https://github.com/jiggy-ai/pair](https://github.com/jiggy-ai/pair)), An iterative, stateful chat-like interface for programmers to pair programming with GPT-4, might be useful to some of you. Github Copilot is a great tool for leveraging GPTs while coding, but it is too \u201copen loop\u201d for more complex tasks that require Q&amp;A, feedback to guide it in a particular direction, iteration on code execution errors, etc. There is a large class of tasks that are better accomplished in an iterative, stateful chat-like interface, thus we built Pair. You are welcome to use it and also to contribute to it.","link":"https://www.reddit.com/r/Python/comments/11y8w3t/open_source_tool_pair_an_iterative_stateful/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"Using Python Code in Android Studio With Chaquopy","description":"Whenever we deploy any machine learning model in an android app often the preprocessing/post-processing function for the model would have to be written in Java or Kotlin. Around 3 years ago I stumbled upon a framework called Chaquopy that lets you use python code in android studio and I developed a demo object detection app in it. In this blog, I have shared the same with the community in a step-by-step fashion. If you have any doubts, please comment on medium. \n\n&amp;#x200B;\n\n[https://medium.com/geekculture/using-python-code-in-android-studio-with-chaquopy-2d4dc3469d4d?source=social.linkedin](https://medium.com/geekculture/using-python-code-in-android-studio-with-chaquopy-2d4dc3469d4d?source=social.linkedin)","link":"https://www.reddit.com/r/Python/comments/11ygsjm/using_python_code_in_android_studio_with_chaquopy/","created":"2023-03-22","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"PyVibe: Generate styled HTML pages from Python","description":"&amp;#x200B;\n\nhttps://preview.redd.it/s9zir6gfh6pa1.png?width=2560&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=f3e2bed1ee99d958272d2b579a56d2c5283dee6d\n\nI've been using Tailwind CSS, in particular [Flowbite](https://flowbite.com/), for a number of different Python projects that I was working on and through that process, I realized that I end up either repeating or copying functions that generate UI components.\n\nThat led me to create this Python library to make it easier to use re-use UI components for my Flask applications: [https://www.pyvibe.com/](https://www.pyvibe.com/)\n\n[https://github.com/pycob/pyvibe](https://github.com/pycob/pyvibe)\n\nI wrote it in such a way that it generates an HTML string, so it's usable in Flask, as a static HTML file, or even in Pyodide (which is Python running in the browser via WebAssembly). \n\nLet me know what you think!","link":"https://www.reddit.com/r/Python/comments/11xzbyp/pyvibe_generate_styled_html_pages_from_python/","created":"2023-03-21","tags":["reddit","python"],"meta":{"num_comments":16}}
