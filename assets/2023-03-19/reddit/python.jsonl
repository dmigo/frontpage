{"title":"Sunday Daily Thread: What's everyone working on this week?","description":"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.","link":"https://www.reddit.com/r/Python/comments/11v57uj/sunday_daily_thread_whats_everyone_working_on/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":4}}
{"title":"Saturday Daily Thread: Resource Request and Sharing! Daily Thread","description":"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!","link":"https://www.reddit.com/r/Python/comments/11u8hmv/saturday_daily_thread_resource_request_and/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"FastAPI 0.95.0 supports and recommends Annotated \ud83d\ude80 [cross-post from r/FastAPI]","description":"This is probably the biggest FastAPI feature in several months, I thought it was worth sharing it. \ud83e\udd13\n\n(Cross-post from [r/FastAPI](https://www.reddit.com/r/FastAPI/comments/11v0j5w/fastapi_0950_supports_and_recommends_annotated/) but I thought this was cool enough to also share it here \ud83d\ude2c).\n\nFastAPI `0.95.0`, just released, adds support for dependencies and parameters using `Annotated` and recommends its usage. \u2728\n\nThis has **several benefits**, one of the main ones is that now the parameters of your functions with `Annotated` would **not be affected** at all.\n\nIf you call those functions in **other places in your code**, the actual **default values** will be kept, your editor will help you notice missing **required arguments**, Python will require you to pass required arguments at **runtime**, you will be able to **use the same functions** for different things and with different libraries (e.g. **Typer** will soon support `Annotated` too, then you could use the same function for an API and a CLI), etc.\n\nBecause `Annotated` is **standard Python**, you still get all the **benefits** from editors and tools, like **autocompletion**, **inline errors**, etc.\n\nOne of the **biggest benefits** is that now you can create `Annotated` dependencies that are then shared by multiple *path operation functions*, this will allow you to **reduce** a lot of **code duplication** in your codebase, while keeping all the support from editors and tools.\n\nFor example, you could have code like this:\n\n```python\ndef get_current_user(token: str):\n    # authenticate user\n    return User()\n\n\n@app.get(\"/items/\")\ndef read_items(user: User = Depends(get_current_user)):\n    ...\n\n\n@app.post(\"/items/\")\ndef create_item(*, user: User = Depends(get_current_user), item: Item):\n    ...\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(*, user: User = Depends(get_current_user), item_id: int):\n    ...\n\n\n@app.delete(\"/items/{item_id}\")\ndef delete_item(*, user: User = Depends(get_current_user), item_id: int):\n    ...\n```\n\nThere's a bit of code duplication for the dependency:\n\n```python\nuser: User = Depends(get_current_user)\n```\n\n...the bigger the codebase, the more noticeable it is.\n\nNow you can create an annotated dependency once, like this:\n\n```python\nCurrentUser = Annotated[User, Depends(get_current_user)]\n```\n\nAnd then you can reuse this `Annotated` dependency:\n\n```python\nCurrentUser = Annotated[User, Depends(get_current_user)]\n\n\n@app.get(\"/items/\")\ndef read_items(user: CurrentUser):\n    ...\n\n\n@app.post(\"/items/\")\ndef create_item(user: CurrentUser, item: Item):\n    ...\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(user: CurrentUser, item_id: int):\n    ...\n\n\n@app.delete(\"/items/{item_id}\")\ndef delete_item(user: CurrentUser, item_id: int):\n    ...\n```\n\n...and `CurrentUser` has all the typing information as `User`, so your editor will work as expected (autocompletion and everything), and **FastAPI** will be able to understand the dependency defined in `Annotated`. \ud83d\ude0e\n\nRoughly **all the docs** have been rewritten to use `Annotated` as the main way to declare **parameters** and **dependencies**. All the **examples** in the docs now include a version with `Annotated` and a version without it, for each of the specific Python versions (when there are small differences/improvements in more recent versions). There were around 23K new lines added between docs, examples, and tests. \ud83d\ude80\n\nThe key updated docs are:\n\n* Python Types Intro:\n    * [Type Hints with Metadata Annotations](https://fastapi.tiangolo.com/python-types/#type-hints-with-metadata-annotations).\n* Tutorial:\n    * [Query Parameters and String Validations - Additional validation](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#additional-validation)\n        * [Advantages of `Annotated`](https://fastapi.tiangolo.com/tutorial/query-params-str-validations/#advantages-of-annotated)\n    * [Path Parameters and Numeric Validations - Order the parameters as you need, tricks](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#order-the-parameters-as-you-need-tricks)\n        * [Better with `Annotated`](https://fastapi.tiangolo.com/tutorial/path-params-numeric-validations/#better-with-annotated)\n    * [Dependencies - First Steps - Share `Annotated` dependencies](https://fastapi.tiangolo.com/tutorial/dependencies/#share-annotated-dependencies)\n\nSpecial thanks to [@nzig](https://github.com/nzig) for the core implementation and to [@adriangb](https://github.com/adriangb) for the inspiration and idea with [Xpresso](https://github.com/adriangb/xpresso)! \ud83d\ude80\n\nIt took a while to get this done as it involved several days thoroughly reviewing the core PR (impeccable job) and a couple of weeks of full-time, continuous, focused work rewriting the docs, examples, and tests. And now it's finally out! \ud83c\udf89\n\nThis will also probably enable much better third-party integrations that can now export `Annotated` dependencies. \ud83d\ude0e\n\nGo update your FastAPI version and start enjoying using `Annotated`! \ud83d\ude80\n\nCheck more details in the release notes: https://fastapi.tiangolo.com/release-notes/#0950","link":"https://www.reddit.com/r/Python/comments/11v0kcb/fastapi_0950_supports_and_recommends_annotated/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":13}}
{"title":"Hi r/py I'm working on a Python library for PySimpleGUI to design UIs with a Live Preview, giving a low barrier to entry. I hope you like it!","description":"This project is a fork from this users original project: [https://github.com/PriestTheBeast/SimpleGUIBuilder](https://github.com/PriestTheBeast/SimpleGUIBuilder)\n\nMy Repo expanding on the foundation with themes, live previews, and hoping to improve QOL: [https://github.com/samfisherirl/PySimpleGUI-Designer-with-Live-Preview](https://github.com/samfisherirl/PySimpleGUI-Designer-with-Live-Preview)\n\nThroughout my experience with software development, I have come to appreciate the accessibility and ease-of-use that Autohotkey provides, especially for mid to low-level use cases. However, for newcomer to the python programming language, I have found that the Qt framework can be quite intimidating to approach. While not impossible to learn, it can present a steep learning curve for beginners.\n\nSome of the things I really appreciate from my time with AHK:\n\n* GUI-to-EXE can be done within a few clicks with no coding, but provide paths to produce full OOP programs.\n* Simplified automation for mid to low-level use cases.\n* Allows for customization and flexibility through user-defined functions and commands.\n\nIn my pursuit to bridge the gap between visual design and code, I have found PySimpleGUI to be a great model. Its streamlined approach has allowed me to quickly translate visual designs into code, making the learning process much smoother. As a lifelong learner, I'm always eager to share my experiences and help others along the way.\n\nWith this project, I want to provide a relatively smooth UI experience that can allow users to build ready-made GUIs with ease.\n\nThis project is still in its early stages, and I'm excited to see where it goes. Personally, I've had success with pywebview and Eel due to the expansive HTML design tools available. I'm open to any recommendations for libraries or tools that you find helpful for GUI design. Thanks!\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n[https://imgur.com/a/LCf7ln1](https://imgur.com/a/LCf7ln1)\n\n&amp;#x200B;\n\nhttps://i.redd.it/9v7bi000cloa1.gif\n\n&amp;#x200B;","link":"https://www.reddit.com/r/Python/comments/11uyzsz/hi_rpy_im_working_on_a_python_library_for/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"What is something you wish there was a Python module for?","description":"","link":"https://www.reddit.com/r/Python/comments/11uyyh3/what_is_something_you_wish_there_was_a_python/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":85}}
{"title":"Workshop: Algorithmic Trading","description":"I\u2019m organizing a workshop next Tuesday on \u201cAlgorithmic Trading with Python\u201d and I thought it would be worth posting it here. Here\u2019s the link with more information:\n\nhttps://profitview.net/events/algorithmic-trading-with-python\n\nApologies in advance to the moderators (I have messaged them!): if you feel that it\u2019s not worth sharing here or not the place - happy for it to be taken down. \n\nLet me know if you have any questions / comments, glad to answer them here.\n\nCheers","link":"https://www.reddit.com/r/Python/comments/11uur4a/workshop_algorithmic_trading/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"Simple Transformer based Optical Music Recognition","description":"A simple transformer based optical music recognition for a robotics project.\n\nThe PyTorch model is trained to recognize a small sequences of notes in different environments (e.g. [https://huggingface.co/Flova/omr\\_transformer/resolve/main/sample1.png](https://huggingface.co/Flova/omr_transformer/resolve/main/sample1.png)). The notation is quite simple at the moment, but we plan on  expanding our dataset to recognize more complex notation with chords  etc.. We view the OMR problem as a NLP like task, as we predict the  LilyPond notation directly.\n\n&amp;#x200B;\n\nDemo and Model: [https://huggingface.co/Flova/omr\\_transformer](https://huggingface.co/Flova/omr_transformer)","link":"https://www.reddit.com/r/Python/comments/11v36lv/simple_transformer_based_optical_music_recognition/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Remove typing/stubs packages in production","description":"Imagine I have to deploy a package that's size restricted. I want to ignore typing packages at runtime, but I do not want to encounter `ModuleNotFound` exceptions.\n\nWhat's the best way to accomplish this?\n\nI know that we could do something like this:\n\n    from typing import TYPE_CHECKING\n     \n    if TYPE_CHECKING:\n        from package.module import SomeType\n     \n    def do_stuff(data: \"SomeType\") -&gt; None:\n        ...\n\nIs this the best way?","link":"https://www.reddit.com/r/Python/comments/11uljz7/remove_typingstubs_packages_in_production/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":27}}
{"title":"Why use classes?","description":"*I originally wrote this piece as an answer to a question on the* [*learnpython reddit*](https://www.reddit.com/r/learnpython/comments/11sebbg/been_using_python_for_3_years_never_used_a_class/?utm_source=share&amp;utm_medium=web2x&amp;context=3)*, and it was suggested that it would be a useful learning resource for many people who struggle with* ***why*** *we use classes rather than just variables and functions.  So here it is:*\n\n# Why use classes?\n\n**My \"Ah ha!\" moment for understanding classes was understanding that a** ***class*** **creates** ***objects*** **and defines the** ***type*** **of** ***object.***\n\nTime for an example:\n\nSay that we're writing a game, and we need to define certain things about the player:\n\n    player_name = \"James\"\n    player_level = \"novice\"\n\nWe also need to keep track of the player's score:\n\n    player_score = 0\n\nWe may also need to save each of the player's moves:\n\n    player_moves = [move1, move2, move3]\n\nand now we need to be able to increase the player's score when they win some points, and to add their last move to their list of moves. We can do this with a function:\n\n    def win_points (points, move):\n        player_score += points\n        player_moves.append(move)\n\n&amp;#x200B;\n\nThat's all fine so far. We have some global variables to hold the player's data, and a function to handle the results of a win, and all without writing any classes.\n\nNow say that we need to add another player. We will need to repeat all of the above but with unique identities so that we can distinguish player\\_1 from player\\_2:\n\n    player1_name = \"&lt;name&gt;\"\n    player1_level = \"novice\"\n    player1_score = 0\n    player1_moves = [move1, move2, move3]\n    \n    player2_name = \"&lt;name&gt;\"\n    player2_level = \"novice\"\n    player2_score = 0\n    player2_moves = [move1, move2, move3]\n    \n    def win_points (player_name, points, move):\n        if player_name == player1_name:\n            player1_score += points\n            player1_moves.append(move)\n        else:\n            player2_score += points\n            playe2_moves.append(move)\n\nStill not too bad, but what if we have 4 players, or 10, or more?\n\nIt would be better if we could make some kind of generic \"player\" data structure that can be reused for as many players as we need. Fortunately we can do that in Python:\n\nWe can write a kind of \"template\" / \"blueprint\" to define all of the attributes of a generic player and define each of the functions that are relevant to a player. This \"template\" is called a \"Class\", and the class's functions are called \"methods\".\n\n    class Player():\n        def __init__(self, name):\n            \"\"\"Initialise the player's attributes.\"\"\"\n            self.name = name\n            self.level = 'novice'\n            self.score = 0\n            self.moves = []\n    \n        def win_points(self, points, move):\n            \"\"\"Update player on winning points.\"\"\"\n            self.score += points\n            self.moves.append(move)\n\nNow we can create as many players (\"player objects\") as we like as *instances* of the *Player class*.\n\nTo create a new player (a \"player object\") we need to supply the Player class with a name for the player (because the initialisation function \\_\\_init\\_\\_() has an argument \"name\" which must be supplied). So we can create multiple *Player* objects like this:\n\n    player1 = Player('James')\n    player2 = Player('Joe')\n    player3 = Player('Fred')\n\nDon't overthink the `self` arguments. The self argument just means \"the specific class object that we are working with\". For example, if we are referring to *player1*, then self means \"the player1 object\".\n\nTo run the `Player.win_points()` method (the `win_points()` function in the class `Player`) for, say player3:\n\n    player3.win_points(4, (0, 1)) # Fred wins 4 points, move is tuple (0, 1)\n\nand we can access Fred's other attributes, such as Fred's player's name, or  last move, from the Player object:\n\n    print(player3.name)  # prints \"Fred\"\n    # Get Fred's last move\n    try:\n        last_move = player3.moves[-1]\n    except IndexError:\n        print('No moves made.')\n\nUsing a Class allows us to create as many \"Player\" type objects as we like, without having to duplicate loads of code.\n\nFinally, if we look at the type of any of the players,  we see that they are instances of the class \"Player\":\n\n    print(type(player1))  # prints \"&lt;class '__main__.Player'&gt;\"\n\nI hope you found this  post useful.","link":"https://www.reddit.com/r/Python/comments/11ts1qq/why_use_classes/","created":"2023-03-17","tags":["reddit","python"],"meta":{"num_comments":137}}
{"title":"Alternative to Pygments","description":"Can anyone name an alternative package to pygments to generated HTML for highlighted code blocks?","link":"https://www.reddit.com/r/Python/comments/11upnql/alternative_to_pygments/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":18}}
{"title":"Simplify a polyline or polygon with Visvalingham-Whyatt or Douglas-Peucker","description":"[https://pypi.org/project/simplify-polyline/](https://pypi.org/project/simplify-polyline/)\n\n# simplify_polyline\n\nSimplify an open or closed polyline.\n\n## Two functions:\n\nVisvalingham-Whyatt removes the smallest triangles formed by three consecutive points\nin a polyline or polygon. The big advantage for my purposes is that the starting\npoint on a polygon will not affect the result. The big disadvantage is that tall,\nthin spikes are removed along with short, thin triangles. So the smoothed polygon or\npolyline may not fit in anything close to the convex hull of the input.\n\nuse the Visvalingham-Whyatt algorithm with `vs_simplify`\n\nDouglas-Peucker gives a better representation of the convex hull. The big\ndisadvantage with Douglas-Peucker is that the starting point on a polygon will affect\nthe result. I've addressed this in the slow, but ideal (for my purposes) `simplify`\nfunction.\n\nuse the Douglas-Peucker algoritm with `simplify`\n\nThis will usually be the better choice.\n\n## arguments\n\n\n**verts** vertices along polyline. Anything that can be cast into a '*, 2'\n    array.\n\n(`simplify`) **min_dist** minimum height above a line segment for a point to be\nincluded.\n\n(`vw_simplify`) **min_area** minimum area of a triangle for a point to be\nincluded.\n\n**is_closed** optionally specify whether verts describe a polyline or polygon.\nIf not specified, is_closed is inferred from verts[0] == verts[-1]. The form of\nthe input (last vert == first vert) will be replicated in the output.\n\nIf verts is (a, b, c, d, a), return value will be (a, ..., a)\n\nIf verts is (a, b, c, d), and is_closed is True, return value will be (a, ..., d)\n\nSo, there are two ways to deal with closed polygons:\n\n* close by repeating first point at the end. Return value will keep this format\n\n* close by specifying `is_closed`. Return value will not repeat last point\n\n## install\n\n~~~\npip install simplify_polyline\n~~~","link":"https://www.reddit.com/r/Python/comments/11v89pg/simplify_a_polyline_or_polygon_with/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Pygame, ren'py, or python which is best for game making?","description":"So ive never coded or touched a single line of code and i want to know which python engine/software is the best for a beginner who has never coded. feel free to suggest something else if you feel its needed but try to say why it is. Im also not sure where to start, is youtube a good place or are there other free places? ive been wanting to make a game but it seems pretty daunting and im not sure if i should do it. i like doing/learning on my own because i have issues.\n\nAnyway, *so, Pygame, ren'py, or python which is best for game making?*","link":"https://www.reddit.com/r/Python/comments/11uxx4u/pygame_renpy_or_python_which_is_best_for_game/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":10}}
{"title":"Python Fullstack developer","description":"Hii guys,\n\nI have 3 years of Python Fullstack developer experience and till now I am working at same company and now I want to Switch, so now I want some suggestions  where i can find the best jobs relevant to my skills .\n\nThanks","link":"https://www.reddit.com/r/Python/comments/11vebq2/python_fullstack_developer/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"Personal Project - JDR Tool Introduction","description":"I recently started learning Python, so I tried to write this project as  an exercise. The idea of the concept is derived from the solution to the  difficulties encountered when helping the Ministry of Finance to  develop the system. Share it here.\n\n&amp;#x200B;\n\n![img](k5nt455yggoa1 \"Figure 1. Appearance of JDR tool\n\")\n\n&amp;#x200B;\n\n![gif](ns56h4y0hgoa1 \"Figure 2. Using JDR tools to execute and manage programs\n\")\n\n## Link\n\n* Source code: [https://github.com/Chen-Alfred/JDR](https://github.com/Chen-Alfred/JDR)\n* Execution file: [https://github.com/Chen-Alfred/JDR/tree/main/dist](https://github.com/Chen-Alfred/JDR/tree/main/dist)\n* Documentation (English): [https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw](https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw)\n\n## Motivation\n\nJDR (Job Dependency Runner) is a set of small data governance tools developed by this project. In short, it is a set of \"programs used to assist in the execution and management of programs\".\n\nAt work, the action of \"executing a program\" is not particularly difficult in most cases. Usually, you edit the command first, then throw it into the shell, or an interface/platform, and then wait for the result to come out. Will use tools like crontab to pre-schedule.\n\nWith this method, if the scale is only one or two to a dozen programs, there may be no problem, but if there are hundreds or thousands of programs, it will be difficult to manage. The reason lies in the management issues derived from \"quantity\" and \"dependency\"\n\nThese management issues include: \"What is the current state of the program?\", \"What is the sequence of program execution?\", \"If a certain program needs to be re-run, will it affect which downstream related programs?\" When the number of programs is larger, it is less likely to be managed by the engineer's memory. Even if the records are assisted by files, maintenance and searching will take time and cost.\n\nAnd because data analysis has become more and more important in recent years, the data governance issue of \"whether the program is executed correctly and on time\" has also been paid more and more attention. In order to solve these issues, I hope to implement a set of tools in this project, so that some management issues can be automated, dashboarded, and the results are presented in a visual way.\n\nMaybe this project will overlap with some ETL tools (such as: SSIS, Trinity, DataStage, Automation) in function, because ETL tools also have the function of executing and managing programs, but because I haven't found a tool that can meet the needs , so that's another reason why I decided I wanted to develop my own.\n\nI hope that users only need to maintain a work list (Excel format), and then after inputting the list into this tool, a graphical program dependency flow chart can be automatically generated. The graphical program dependency flowchart is a kind of DAG (Directed Acyclic Graph). After having a graph, many issues arise about how to operate it. I try to simplify these operations as much as possible, so that these operations and management behaviors can be easily performed only by making a setting on the graphical interface, pressing a button, and viewing a report.\n\nEveryone is welcome to use this set of tools, but the design of the tools is based on my personal previous development experience and my own imagination, so if someone thinks that it is not easy to use, inconvenient, or not flexible enough, please feel free to feed these questions back to me, so that I can use them as a reference for improvement.","link":"https://www.reddit.com/r/Python/comments/11ui2v4/personal_project_jdr_tool_introduction/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"run this!","description":"import webbrowser\n\n&amp;#x200B;\n\nurl = '[https://www.youtube.com/watch?v=dQw4w9WgXcQ](https://www.youtube.com/watch?v=dQw4w9WgXcQ)'\n\n[webbrowser.open](https://webbrowser.open)(url)","link":"https://www.reddit.com/r/Python/comments/11vfj4z/run_this/","created":"2023-03-19","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"New to Python. Is this an inconsistency of the 'round()' function?","description":"I understand that the built-in `round()` function uses the \"round half to even\" strategy. However, I noticed that this isn't applied when rounding to a certain number of decimal places.\n\nHere's an example:\n\n`round(38.5)` returns `38`, the closest even number. But if I do `round(3.85, 1)` it returns `3.9`, 9 not being the closest even number. Is there a reason as to why the \"round half to even\" strategy is only applied to integers and not floats? Or is this just an overlooked inconsistency? (This might be a really obvious math thing and I'm just dumb, but I'm asking because I wanna understand these intricacies)\n\nThanks!\n\nEDIT: I want to give everyone a genuine thank you for all the detailed explanations, links and examples to help me understand this properly. This sub seems incredibly friendly, thank you all for taking time out of your day to write out these amazing comments!","link":"https://www.reddit.com/r/Python/comments/11ud58f/new_to_python_is_this_an_inconsistency_of_the/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":32}}
{"title":"Making an ASGI Micro Framework","description":" \n\nHello guys , I working on an ASGI framework for fun, for now I make url matching and middleware supporting\n\nthe ASGI app is in the [app](https://app.py/) / AsgiApplication class\n\nI need to know how to make sub apps (Blueprintes in Flask )\n\n[Source code](https://github.com/t-el/AsgiFrame)","link":"https://www.reddit.com/r/Python/comments/11uxl2i/making_an_asgi_micro_framework/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"I made a tic tac toe game with 98 lines of code. Is this good for a beginner?","description":"[https://github.com/DJToners/TicTacToe2.git](https://github.com/DJToners/TicTacToe2.git)","link":"https://www.reddit.com/r/Python/comments/11u9868/i_made_a_tic_tac_toe_game_with_98_lines_of_code/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":65}}
{"title":"Mercury \u2013 Turn Python Notebooks to Web Apps","description":"Hi! \n\nWe're Piotr and Aleksandra, founders of Mercury (https://RunMercury.com), an open-source framework for converting Jupyter Notebooks to Web Apps. You can turn the Python notebook into an interactive web app, static website, presentation, report, or dashboard and share it online with non-technical users. You can self-host Mercury or use our hosting service (coming soon!).\n\n\nOur GitHub: https://github.com/mljar/mercury\n\n\nSharing Python notebooks is challenging. You can't send notebooks directly to non-technical stakeholders. You need to copy-paste results/charts into Word/PowerPoint or rewrite the notebook to a web framework. Mercury converts a notebook to a web app. Users can execute cells but can't edit them.\n\n\nMercury offers a set of widgets that can be added to the notebook. When serving notebook with Mercury, widget change triggers automatic re-execution of cells. Not all cells are re-executed, only cells with widget definition and below, so you can cache results from previous cells execution (loading large dataset or model).\n\n\nMercury comes with handy features to make sharing easy:\n\n- decide to hide or show the notebook's code,\n\n- add authentication to notebooks so only selected users can view them,\n\n- export final notebook to PDF or HTML file,\n\n- all to create output files in a notebook, and make them downloadable,\n\n- share multiple notebooks on one Site.\n\n\n\nHow does Mercury differ from existing solutions?\n\n- it was designed for notebooks, it offers simple re-execution of cells after widget update,\n\n- it has built-in authentication.\n\n\nMercury is available on AGPLv3. We would like to offer a hosting service to make deployment very easy (just upload a notebook to have a website). We offer commercial license for companies looking for private forks and dedicated support.\n\nWe'd love to hear feedback on the framework!","link":"https://www.reddit.com/r/Python/comments/11tp5fa/mercury_turn_python_notebooks_to_web_apps/","created":"2023-03-17","tags":["reddit","python"],"meta":{"num_comments":23}}
{"title":"Making a script that checks Twitch chat emote usage, channel has 828 emotes, VOD has 41,033 lines of chat. was blown away by how fast it took to run. 93ms.","description":"https://i.imgur.com/D88KQfa.png\n\n\ud83e\udd2f","link":"https://www.reddit.com/r/Python/comments/11uhi51/making_a_script_that_checks_twitch_chat_emote/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"What are some projects on GitHub you support either through contribution or sponsorship?","description":"Hey all, I'm Chris, the developer community manager at New Relic. I'm trying to learn more about what interests developers in our community, and one thing I'm curious about is how devs choose projects to support on GitHub. What are some examples of projects you either contribute to or sponsor, for whatever reason -- either they improve your QoL as a dev, or they're humanitarian projects for the betterment of humankind. Thanks for your insights!","link":"https://www.reddit.com/r/Python/comments/11u5v9v/what_are_some_projects_on_github_you_support/","created":"2023-03-17","tags":["reddit","python"],"meta":{"num_comments":4}}
{"title":"ML models for User Recognition using Keystroke Dynamics","description":"The keystroke dynamics that are used in this article\u2019s machine learning models for user recognition are behavioral biometrics. Keystroke dynamics uses the distinctive way that each person types to confirm their identity. This is accomplished by analyzing the **2 keystroke events** on Key-Press and Key-Release \u2014 that make up a keystroke on computer keyboards to extract typing patterns. *The article will examine how these patterns can be applied to create 3 precise machine learning models for user recognition.*\n\n&amp;#x200B;\n\nhttps://preview.redd.it/rv2a4okbmaoa1.png?width=645&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=983865d15bb83d5c94b43a5940617117f972a89d\n\nThe goal of this article will be split in two parts, ***building and training*** 3 Machine Learning models (1. **SVM** 2. **Random** **Forest** 3. **XGBoost**) and ***deploying the model*** in a real live single point API capable of predicting the user based on 5 input parameters: the ML model and 4 keystroke times.\n\n[https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad](https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad)","link":"https://www.reddit.com/r/Python/comments/11tpor9/ml_models_for_user_recognition_using_keystroke/","created":"2023-03-17","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"Introducing DataFrame QuickView: A Python package for easy DataFrame visualization, co-created with GPT-4! Seeking contributors \ud83d\ude80","description":"Hi, r/python! I'm u/gittb, and I'd like to share a project I've been working on called **DataFrame QuickView**. This package extends pandas DataFrame functionality to easily display and visualize DataFrames in a web-based environment, built using Flask. The catch? It's an experiment in paired programming with GPT-4, and I'm looking for contributors who want to join this exciting project!\n\n\ud83c\udf1f **Quick Overview of DataFrame QuickView:**\n\n* Extend pandas DataFrame with quickview()method\n* Display paginated DataFrame in a web browser\n* Create an interactive dropdown and button combination populated with DataFrame columns\n* Generate histograms based on the selected column when the button is pressed\n\n\ud83c\udfaf **Goal of the project:**\n\nThe primary goal is to expand the project with code written by Language Models (LLMs) like GPT-4. All contributions should be co-written primarily by LLMs to maintain the experimental nature of this project.\n\n\ud83d\udca1 **Potential additional functionality:**\n\n* More visualization types (bar charts, scatter plots, pie charts, etc.)\n* Filtering and sorting capabilities for DataFrames\n* Exporting visualizations as images or other formats\n* Adding support for multiple DataFrames\n\n\ud83d\udd0d **How to get involved:**\n\nIf you're interested in participating, check out the project on [GitHub](https://github.com/gittb/dataframe-quickview) and feel free to submit pull requests or open issues with your ideas. Remember that the code must be co-written primarily by LLMs for contribution acceptance.\n\nThanks for taking the time to read this post, and I'm looking forward to seeing what we can build together with the help of LLMs! Let's push the boundaries of AI-powered coding! \ud83d\ude80\n\nHappy coding! \ud83d\ude04 u/gittb\n\nEdit, forgot to include pypi link\n\n[https://pypi.org/project/dataframe-quickview/](https://pypi.org/project/dataframe-quickview/)\n\n&amp;#x200B;","link":"https://www.reddit.com/r/Python/comments/11uj8hh/introducing_dataframe_quickview_a_python_package/","created":"2023-03-18","tags":["reddit","python"],"meta":{"num_comments":1}}
