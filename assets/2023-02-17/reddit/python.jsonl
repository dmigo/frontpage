{"title":"Thursday Daily Thread: Python Careers, Courses, and Furthering Education!","description":"Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**","link":"https://www.reddit.com/r/Python/comments/113ck82/thursday_daily_thread_python_careers_courses_and/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"I used Python and ChatGPT to control Hue lights","description":"I wrote a project which allows you to control Hue smart lights with text commands. It sends the command to GPT-3 to translate it into a JSON which can be parsed to control the lights. You can type things like 'make one light blue and the other yellow'.\n\nI wrote a Medium article about it [here](https://medium.com/@richardhayes777/using-chatgpt-to-control-hue-lights-37729959d94f) and it's on GitHub [here](https://github.com/rhayes777/hue_chat).","link":"https://www.reddit.com/r/Python/comments/1141i77/i_used_python_and_chatgpt_to_control_hue_lights/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":43}}
{"title":"Cursive handwriting OCR: 98% accuracy achieved with the app ScriptReader!","description":"Hi there,\n\nHere is my latest project ScriptReader, which allows you to perform optical character recognition (OCR) on some handwritten notes that you wrote on special notebook pages generated with PrintANotebook.\n\nWith my preliminary dataset trained on my cursive handwriting, I was able to achieve over 98% accuracy! While there is room for improvement, this is a good result for cursive handwriting!\n\nCheck out my github repo at the following link: [https://github.com/LPBeaulieu/Handwriting-OCR-ScriptReader/blob/main/README.md](https://github.com/LPBeaulieu/Handwriting-OCR-ScriptReader/blob/main/README.md)\n\nhttps://preview.redd.it/57v6egjznnia1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=70e45dcf55855757513d91b9f3375160b4d82dcc","link":"https://www.reddit.com/r/Python/comments/1147mfp/cursive_handwriting_ocr_98_accuracy_achieved_with/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":7}}
{"title":"UK Train Departure board GUI","description":"&amp;#x200B;\n\n[Initial Screen](https://preview.redd.it/d776zemk0mia1.png?width=1912&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=c17b17155156f26e36349631f1dc28c7605a45e0)\n\n[Inputting a CRS Code](https://preview.redd.it/54twmimk0mia1.png?width=1918&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=ffcabc6e8826d4ea45683331018871654f542274)\n\n[Output ](https://preview.redd.it/ys91lhmk0mia1.png?width=1915&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=c48cfed87cba6d616bce7b988bebe602a9ed37cb)\n\nI made a train departure board using Python ([https://pastebin.com/8cQhW4hd](https://pastebin.com/8cQhW4hd)). The link contains the code it uses the national railway api to obtain the live train times and using tkinter for the GUI. If anyone has any suggestions for improvements or anything else that would be appreciated!","link":"https://www.reddit.com/r/Python/comments/114091x/uk_train_departure_board_gui/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":6}}
{"title":"I've written a pygame program that simulates spreading territory.","description":"[Github Link](https://github.com/ProarchwasTaken/tld_territory)\n\nNot gonna lie, this has to be the most complicated python program I've ever written yet. So complicated it's kinda hard for me to explain what I have here but I'll try my best. In this program, if you place a red/blue tile using the Q/E key, it will automatically spread to other tiles. It can not spread to wall tiles which you can place by clicking on an empty tile. It's a pretty cool think to watch. You can increase the grid size by changing a couple variables but be warned, anything higher then the values I preset will cause the program to slow to a crawl during intensive times.\n\nTo play this, just run main.py or run the .exe. The exe is standalone, so it does not need any other files to work.\n\nOverall, is there anything I could've done better? Thank you for using this program!\n\n&amp;#x200B;\n\nhttps://preview.redd.it/udzcmonjemia1.png?width=1323&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=8457cd85fa75e2156ae5a09751b35814d0050d8c","link":"https://www.reddit.com/r/Python/comments/1141y4u/ive_written_a_pygame_program_that_simulates/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"Sippycup: an in-browser Flask sandbox (i.e. Flask with training wheels)","description":"I've put together a proof-of-concept app for learning Flask in the browser: [sippycup.app](https://sippycup.app) ([github](https://github.com/travisdoesmath/sippycup)). \n\nSippycup uses Pyodide, so it can be built to be a completely static web page. Users can start learning Flask even if they don't have python installed yet. It even works on your phone!\n\nSince Pyodide (currently) doesn't have sockets for http.server, the app mocks up routing between the iframe and the web worker running Pyodide. \n\nTo simulate making requests from the served page, `fetch` is monkey patched with a shim function that handles messages between the iframe and main app. \n\nCode sketches can be shared by clicking the \"save\" icon in the top left, which will create a unique URL (for example: https://sippycup.app/marvelous-groovy-restaurant)\n\nIf you run into any weird behavior, please feel free to log an issue on github. \n\nThanks!","link":"https://www.reddit.com/r/Python/comments/113t4nd/sippycup_an_inbrowser_flask_sandbox_ie_flask_with/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":8}}
{"title":"How do you begin to tackle a programming problem without getting overwhelmed?","description":"I just don't know where to start. I usually start with setting up my variables but then everything after that just seems random and all over the place. Any advice?","link":"https://www.reddit.com/r/Python/comments/114k3mj/how_do_you_begin_to_tackle_a_programming_problem/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Hassle switching between different environments and interpreters (VSCode)","description":"This might be a noob question. Because of the need to use a different environment for a project. There's a lot of different environments and interpreters. Is there a way to automatically switch between them with the opening of a file from a particular project? It's takes me out of the flow when having to switch between these.","link":"https://www.reddit.com/r/Python/comments/114jufk/hassle_switching_between_different_environments/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Python module for observing performance of ML models (like ChatGPT3) in production","description":"Hello all \ud83d\udc4b\r\n\r\nI have been working on an open source project (my very first actually \ud83d\ude42) that helps observe ML models in production.\r\n\r\nAfter spending 7+ years in the ML space, I\u2019m sure about 2 things: (1) ML models are widely used to make critical business decisions (2) ML models are never 100% accurate and typically degrade over time. Additionally, due to the black box nature of these models, it\u2019s very challenging to identify and fix their issues.\r\n\r\nTo address this issue, I developed UpTrain that helps data scientists to understand how their ML models are performing in production and continuously improve them over time by monitoring their performance, checking for (data) distribution shifts and collecting edge cases to retrain them upon\r\n\r\nSome features to highlight \ud83d\ude80\r\n\r\n\u2705 Complete visibility into your model\u2019s online health via real-time dashboards\r\n\u2705 Automatically collects outliers and edge cases\r\n\u2705  Identifies data distribution shifts\r\n\u2705  Monitors quality of object embeddings\r\n\u2705 Model explainability\r\n\u2705 Continuously retrains and improves your model\r\n\r\nGITHUB: https://github.com/uptrain-ai/uptrain\r\n\r\nWould appreciate any feedback (the harsher the better) \ud83d\ude03 To show your appreciation and to follow our progress please star us \ud83c\udf1f","link":"https://www.reddit.com/r/Python/comments/114jr5q/python_module_for_observing_performance_of_ml/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Theine 0.1.3 release, sync/async decorator added","description":"Theine: High performance in-memory cache inspired by [Caffeine](https://github.com/ben-manes/caffeine).\n\n[https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\nReadme contains benchmarks and more design details now, take a look if you are interested.","link":"https://www.reddit.com/r/Python/comments/1148b76/theine_013_release_syncasync_decorator_added/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"Protect yourself from accidentally leaking sensitive information","description":"# \n\n[Protect yourself from accidentally leaking sensitive information](https://preview.redd.it/wrliv87s2nia1.jpg?width=512&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=b49a105ce40c1fd83e40d2356f1d63c6799eb55b)\n\nThis article will introduce you to a tool called [detect-secrets](https://github.com/Yelp/detect-secrets) that can help protect you from accidentally leaking sensitive information in your code repositories.\n\n# Why\n\nIt is crucial to ensure that confidential data such as passwords and private keys are protected when working on software development projects. Nevertheless, there is a risk of unintentionally exposing this information by including it in code repositories, which can be accessed by anyone who has access to the repository. Hence, it is vital to implement precautions to prevent such data breaches.\n\n# What is [detect-secrets](https://github.com/Yelp/detect-secrets)\n\n[detect-secrets](https://github.com/Yelp/detect-secrets) is an open-source tool that can scan files within a repository for potentially sensitive information, such as private keys, API keys, passwords, or other sensitive data. It works by analyzing code for patterns that match certain types of secrets and alerts developers if any are found.\n\n# Prerequisites\n\nTo use [detect-secrets](https://github.com/Yelp/detect-secrets), you'll need to have [pipx](https://pypa.github.io/pipx/) and [pre-commit](https://pre-commit.com/) installed.\n\n[pipx](https://pypa.github.io/pipx/) is a tool for managing Python applications that are installed globally, but isolated from the system Python environment. This helps ensure that different applications don't interfere with each other. Install it as follows:\n\n    python3 -m pip install --user pipx\n\n[pre-commit](https://pre-commit.com/) is a tool for setting up and managing pre-commit hooks in your code repository. Pre-commit hooks are scripts that run before committing code, allowing you to catch issues before they're committed to the repository. Install it as follows:\n\n    pipx install pre-commit\n\n# Installation\n\nInstall [detect-secrets](https://github.com/Yelp/detect-secrets) as follows:\n\n    pipx install detect-secrets\n\n# Configure (per repository)\n\n**Step 1: Run the detect-secrets and create baseline file**\n\nRun the following command to scan your code repository for sensitive information and create a baseline file. This file will contain a list of known secrets for your repository:\n\n    detect-secrets scan &gt; .secrets.baseline\n\nCheck the generated `.secrets.baseline` file thoroughly. If you have important secrets detected there, remove them from the code. Otherwise, mark each detected secret as verified by setting `is_verified: true`.\n\n*Example \\`.secrets.baseline\\` file:*\n\n    {\n      \"results\": {\n        \"README.rst\": [\n          {\n            \"type\": \"Secret Keyword\",\n            \"filename\": \"README.rst\",\n            \"hashed_secret\": \"077d5a0e0f8bb517307a6e92a73b0a9aa959233c\",\n            \"is_verified\": true,\n            \"line_number\": 311\n          }\n        ],\n        \"project/settings.py\": [\n          {\n            \"type\": \"Secret Keyword\",\n            \"filename\": \"project/settings.py\",\n            \"hashed_secret\": \"2e56b31925af569c194d2cc738d1f1bc22b63df0\",\n            \"is_verified\": true,\n            \"line_number\": 68\n          }\n        ]\n      },\n      \"generated_at\": \"2023-01-06T00:15:43Z\"\n    }\n\n**Step 2: Modify .pre-commit-config.yaml file**\n\nAdd the following line in your `.pre-commit-config.yaml` to include the [detect-secrets](https://github.com/Yelp/detect-secrets) hook. This will automatically run [detect-secrets](https://github.com/Yelp/detect-secrets) on your code before each commit, so you can catch any new secrets that have been accidentally added:\n\n    - repo: https://github.com/Yelp/detect-secrets\n      rev: v1.4.0\n      hooks:\n        - id: detect-secrets\n          name: Detect secrets\n          language: python\n          entry: detect-secrets-hook\n          args: ['--baseline', '.secrets.baseline']\n\n*Example \\`.pre-commit-config.yaml\\` file:*\n\n    exclude: \"^/migrations/\"\n    default_stages: [ commit, push ]\n    default_language_version:\n      python: python3\n    \n    repos:\n    \n      - repo: https://github.com/Yelp/detect-secrets\n        rev: v1.4.0\n        hooks:\n          - id: detect-secrets\n            name: Detect secrets\n            language: python\n            entry: detect-secrets-hook\n            args: ['--baseline', '.secrets.baseline']\n\n**Step 3: Install the pre-commit in your repository**\n\nNow that you've created a baseline file, you need to integrate [detect-secrets](https://github.com/Yelp/detect-secrets) into your workflow. To activate [pre-commit](https://pre-commit.com/) in your repository, run the following command:\n\n    pre-commit install\n\nOnce you've done that, you're ready to use [detect-secrets](https://github.com/Yelp/detect-secrets) to scan your code and prevent accidental leaks of sensitive information!\n\n# Epilogue\n\nYou're now ready to use [detect-secrets](https://github.com/Yelp/detect-secrets) to protect your code repository from accidental leaks of sensitive information. But remember, this tool is only one part of a comprehensive security strategy. Be sure to follow best practices for code security, such as:\n\n* Using secure passwords and private keys.\n* Limiting access to sensitive information only to those who need it.\n* Encrypting sensitive information in transit and at rest.\n* Regularly reviewing and updating security policies and procedures.","link":"https://www.reddit.com/r/Python/comments/1145nhv/protect_yourself_from_accidentally_leaking/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Company project : Django/React, Streamlit or non-web based GUI?","description":"Hello all, \n\nSo we have a project at work to gather and standardize all our scripts under one umbrella, with one app that includes all the scripts (obviously with the choice to use one or another depending on what you want to do). Those scripts need to make some machines run, analyze data, produce reports, etc.\n\nSo in summary, we want to have a toolbox accessible everywhere by everyone with an internet connection. \n\nThey've been quite far behind the curve since there's not even a proper Gitlab yet. \n\nWhat I'm wondering is what would be the best in the mid-long term for standardizing the work. \n\nI'm quite familiar with Streamlit since I've already built some independant tool on it, but not so much with Django/React. I think the learning curve with Django is a bit longer but that in the long term it's probably cleaner and gives you more control over your exact needs. However, it will necessitate to learn some HTML/CSS as well, right? \n\nTo be clear, I'm far from being a developper, but i'll be managing that project and I don't want to give stupid requirements (only one being that it'll be in python) to the future team we'll create. I just want a proper way to do things since we're establishing the base of the future development environment in the company. \n\nI don't know if my message is clear but we're only in the initial phase of that project and I'm not extremely familiar with proper dev practices. \n\n&amp;#x200B;\n\nCheers.","link":"https://www.reddit.com/r/Python/comments/1149swv/company_project_djangoreact_streamlit_or_nonweb/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":7}}
{"title":"I made a simple sandbox Chemistry game that simulates basic reactions with \"Mol-ecules\" (a mol of molecules).","description":"https://preview.redd.it/4az6oyyw8pia1.png?width=1920&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=73eac6f7b4bbc746b492fbee51bc0a49e4cc3af6\n\nThe \"MolEcule Chemistry Simulator\" is a Python Pygame Chemistry Simulator that allows you to simulate the reactions between different elements and molecules. You can spawn in a mol (or more) of any basic element from the periodic table and see how it reacts with other elements.\n\n&amp;#x200B;\n\nThis is my very first python project (that actually works). It's not finished yet, but I'm at the point where feedback is starting to become necessary. I have no idea if the info i'm finding online for these reactions or chemicals is accurate. I also don't know if me code is really all that nice to look at or if I should look into certain best practices.\n\n&amp;#x200B;\n\nI appreciate anyone who downloads and tries it out. \n\nSource Code: [https://github.com/adamivar/MolEcule-Chemistry-Simulator](https://github.com/adamivar/MolEcule-Chemistry-Simulator)\n\nDownload:  [https://drive.google.com/file/d/1zk\\_iCjAuCVrXg2edj\\_4g1DQ3IH-HSuxB/view?usp=sharing](https://drive.google.com/file/d/1zk_iCjAuCVrXg2edj_4g1DQ3IH-HSuxB/view?usp=sharing) ","link":"https://www.reddit.com/r/Python/comments/114diaf/i_made_a_simple_sandbox_chemistry_game_that/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Single-page web app in Python, but with all logic done in the browser.","description":"I'm interested in creating a single-page web app in Python, where all business logic will be done in the browser, without any data getting sent to a backend server. So it can be hosted as a static website like GitHub pages or AWS S3.\n\nAn example would be QR code generator, where everything is done in the browser using Javascript, but without writing Javascript code and using only Python. I'm ok with using Javascript libraries, assuming I can call them from my Python code :)\n\nAre any of the modern frameworks like Streamlit, Dash, Anvil, JustPy, Pynecone, or NiceGUI capable of creating this kind of app?","link":"https://www.reddit.com/r/Python/comments/114axwn/singlepage_web_app_in_python_but_with_all_logic/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":21}}
{"title":"What\u2019s a good looking GUI package?","description":"So I work from home and I made a Python script with PySimpleGUI to automate some of the tedious parts of the job. Well I (accidentally) showed it to my boss and he loved it. Now he wants me to make another script that can help automate the tedious parts of his job.\nHe also mentioned that he\u2019d like it if these programs can be given out to everyone in the company to automate everybody\u2019s work (or a big part of it). Functionality definitely comes first, but I\u2019d also like it if this looked up-to-date and professional. \n\nI\u2019ve played around with tkinter, but I\u2019m having trouble with how bland and bare and square it all looks. I tried custom tkinter as well, but it lacks some functionality I\u2019d need, such as Treeview and right-click menus.\n\nDoes anyone have any suggestions for anything Python libraries that might suit my needs? Bonus points if you have any suggestions for how I might do this outside of Python altogether, because I\u2019ve been thinking about learning another language.","link":"https://www.reddit.com/r/Python/comments/113jabc/whats_a_good_looking_gui_package/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":36}}
{"title":"How to debug Python applications","description":"# \n\n[How to debug Python applications](https://preview.redd.it/s5qps8ns2jia1.jpg?width=512&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=c8bfff4fbe2c52e9611f2169fa4cb9de91829322)\n\n## Introduction\n\nIn software development, testing is an essential part of ensuring that code works as intended. One critical aspect of testing is debugging, which involves finding and fixing errors or bugs in a program. In this article, we'll explore how to debug Python applications and highlight some of the most commonly used methods for debugging Python code.\n\n## Debugging options\n\nWhen it comes to debugging Python, there are multiple options available, and you should consider which one suits your needs best. Two popular options are IDE debugging tools and package debugging tools.\n\n## IDE Debugging Tools\n\nIDEs like PyCharm and VSCode offer debugging tools that allow you to set breakpoints in your code and run it in debug mode. This allows you to step through your code line by line, inspect variables, and evaluate expressions. Here are some resources for learning how to use the debugging tools in PyCharm and VSCode:\n\n* [Debugging Python in PyCharm](https://www.jetbrains.com/help/pycharm/debugging-your-first-python-application.html)\n* [Debugging Python in VSCode](https://code.visualstudio.com/docs/python/debugging)\n\n## Package Debugging Tools\n\nLinks:\n\n* [pdb](https://docs.python.org/3/library/pdb.html)\n* [ipdb](https://pypi.org/project/ipdb/)\n* [IPython](https://ipython.readthedocs.io/en/stable/interactive/tutorial.html)\n\nPython also offers built-in debugging tools, such as the `pdb` module, which allow you to set breakpoints and step through your code in a console-based debugger. Additionally, there are alternative packages like `ipdb`, which is based on the `IPython` tool and provides a more powerful debugger. Here is an example of how to use the `pdb` module in your code:\n\n**my\\_module.py**\n\n    def something(val: str) -&gt; int:\n        val += \" world\"\n        import pdb; pdb.set_trace()  # set a breakpoint\n        # If you want a more powerful debugger, use `ipdb`.\n        # Note, that this requires installation of `ipdb`\n        #     $ pip install ipdb\n        # Then, comment out the `mport pdb; ...` and \n        # uncomment the following line:\n        # import ipdb; ipdb.set_trace()\n    \n    my_str = \"Hello\"\n    \n    print(something(my_str))\n\nIn the example code above, we set a breakpoint in the `something()` function using the `pdb.set_trace()` function. When the code reaches this point, it will pause execution and drop into the debugger, allowing you to inspect variables and step through the code.\n\n**Run it**\n\n    python my_module.py\n\n**What would you see**\n\n    $ python my_module.py \n    --Return--\n    &gt; /home/artur.local/repos/tryouts/debug/my_module.py(3)something()-&gt;None\n    -&gt; import pdb; pdb.set_trace()  # set a breakpoint\n    (Pdb) locals()\n    {'val': 'Hello world', 'pdb': &lt;module 'pdb' from '/usr/lib64/python3.11/pdb.py'&gt;, '__return__': None}\n    (Pdb) val\n    'Hello world'\n    (Pdb)\n\nStudy `pdb` documentation for more.\n\n**Good to know**\n\nIt works similarly with your web views (like, FastAPI/Flask/Django).\n\n    def your_view(request):\n       # ...\n       import pdb; pdb.set_trace()\n\n## Best Practices for Debugging Python\n\nWhile debugging is an essential part of the development process, there are some best practices to keep in mind to ensure that your code remains clean and maintainable.\n\n## Don't commit your debug code!\n\nLinks:\n\n* [precommit](https://pre-commit.com/)\n* [ruff](https://github.com/charliermarsh/ruff)\n\nOne critical practice is to avoid committing your debug code to your code repository. Debug code can clutter your codebase and make it more challenging to maintain. To avoid committing debug code, use a tool like `pre-commit` and linters like `ruff` to catch and prevent it from being committed.\n\n## Debugging in Docker\n\nIf you use Docker for development, you need to configure your `docker-compose.yml` to allow debugging. You can do this by setting the `stdin_open` and `tty` options for your service:\n\n    version: '3'\n    \n    services:\n      api:\n        # Other configuration\n        stdin_open: true\n        tty: true\n\nAfter configuring your Docker environment, assuming that you have it running already, you can find the container ID (`CONTAINER ID`) for your service (in the example above - `api` service) using `docker ps` and attach to it with the `docker attach` (`docker attach {CONTAINER ID}`) command to start debugging. Note, that you will need to run the `docker attach` command in a separate shell/terminal tab and that's where the debug prompt will appear.\n\n## Conclusion\n\nDebugging Python is an essential skill for any developer, and it's crucial to understand the available options and best practices. In this article, we explored two popular options for debugging Python: IDE debugging tools and package debugging tools. We also highlighted some best practices for debugging in Python, including avoiding committing debug code and configuring Docker for debugging. With this knowledge, you'll be better equipped to debug Python applications and write clean, maintainable code.","link":"https://www.reddit.com/r/Python/comments/113n1dd/how_to_debug_python_applications/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"learning python from today, any mentors and learners who are available HMU.","description":"Any mentors who have interest to mentor and any new learners who have interest in learning python or the learners who have just started do message me.","link":"https://www.reddit.com/r/Python/comments/114dd7d/learning_python_from_today_any_mentors_and/","created":"2023-02-17","tags":["python","reddit"],"meta":{"num_comments":9}}
{"title":"Tableu or Python library?","description":"I recently came across Tableu and up to now had only used Python libraries for data visualization, granted, pretty basic since it was for learning purposes and I'm still fairly new to Python in general. \n\nThe question is: Do you use Tableu (or any other similar software) or Plotly (or any other visualization library) and why?","link":"https://www.reddit.com/r/Python/comments/113wb5h/tableu_or_python_library/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":5}}
{"title":"With KYRSWY you can schedule, rec and upload to your cloud service your favorites radio shows! All with Python, docker, Rclone and Linux. (KYRSWY doesn't provide any radio streaming link)","description":"Hi guys.\nKYRSWY (Keep Your Radio Shows With You) is here to help you to rec all the radio stations you want.\n\nhttps://github.com/esturniolo/kyrswy\n\nAs the title says, KYRSWY itself doesn't provide any radio station link. You need to add them to the config file and then run the script.\nYou can have all the config file you want. One for radio show.\n\nI hope you like this and don't be shy to comment here or the Github Issue page.\n\nThanks!\nEnjoy!","link":"https://www.reddit.com/r/Python/comments/1140u0h/with_kyrswy_you_can_schedule_rec_and_upload_to/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Open source transactional notifications tool for developers built with Python and Node JS","description":"Flasho is an open source, self hosted transactional notifications tool built with React, Python and NodeJS. You can set up transactional emails/smses in minutes using PostgreSQL triggers. This is the link to our Github repo: [https://github.com/flashohq/flasho](https://github.com/flashohq/flasho). Check it out and let me know what you think.","link":"https://www.reddit.com/r/Python/comments/113z8tl/open_source_transactional_notifications_tool_for/","created":"2023-02-16","tags":["python","reddit"],"meta":{"num_comments":0}}
