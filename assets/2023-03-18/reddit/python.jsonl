{"title":"Saturday Daily Thread: Resource Request and Sharing! Daily Thread","description":"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!","link":"https://www.reddit.com/r/Python/comments/11u8hmv/saturday_daily_thread_resource_request_and/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"Why use classes?","description":"*I originally wrote this piece as an answer to a question on the* [*learnpython reddit*](https://www.reddit.com/r/learnpython/comments/11sebbg/been_using_python_for_3_years_never_used_a_class/?utm_source=share&amp;utm_medium=web2x&amp;context=3)*, and it was suggested that it would be a useful learning resource for many people who struggle with* ***why*** *we use classes rather than just variables and functions.  So here it is:*\n\n# Why use classes?\n\n**My \"Ah ha!\" moment for understanding classes was understanding that a** ***class*** **creates** ***objects*** **and defines the** ***type*** **of** ***object.***\n\nTime for an example:\n\nSay that we're writing a game, and we need to define certain things about the player:\n\n    player_name = \"James\"\n    player_level = \"novice\"\n\nWe also need to keep track of the player's score:\n\n    player_score = 0\n\nWe may also need to save each of the player's moves:\n\n    player_moves = [move1, move2, move3]\n\nand now we need to be able to increase the player's score when they win some points, and to add their last move to their list of moves. We can do this with a function:\n\n    def win_points (points, move):\n        player_score += points\n        player_moves.append(move)\n\n&amp;#x200B;\n\nThat's all fine so far. We have some global variables to hold the player's data, and a function to handle the results of a win, and all without writing any classes.\n\nNow say that we need to add another player. We will need to repeat all of the above but with unique identities so that we can distinguish player\\_1 from player\\_2:\n\n    player1_name = \"&lt;name&gt;\"\n    player1_level = \"novice\"\n    player1_score = 0\n    player1_moves = [move1, move2, move3]\n    \n    player2_name = \"&lt;name&gt;\"\n    player2_level = \"novice\"\n    player2_score = 0\n    player2_moves = [move1, move2, move3]\n    \n    def win_points (player_name, points, move):\n        if player_name == player1_name:\n            player1_score += points\n            player1_moves.append(move)\n        else:\n            player2_score += points\n            playe2_moves.append(move)\n\nStill not too bad, but what if we have 4 players, or 10, or more?\n\nIt would be better if we could make some kind of generic \"player\" data structure that can be reused for as many players as we need. Fortunately we can do that in Python:\n\nWe can write a kind of \"template\" / \"blueprint\" to define all of the attributes of a generic player and define each of the functions that are relevant to a player. This \"template\" is called a \"Class\", and the class's functions are called \"methods\".\n\n    class Player():\n        def __init__(self, name):\n            \"\"\"Initialise the player's attributes.\"\"\"\n            self.name = name\n            self.level = 'novice'\n            self.score = 0\n            self.moves = []\n    \n        def win_points(self, points, move):\n            \"\"\"Update player on winning points.\"\"\"\n            self.score += points\n            self.moves.append(move)\n\nNow we can create as many players (\"player objects\") as we like as *instances* of the *Player class*.\n\nTo create a new player (a \"player object\") we need to supply the Player class with a name for the player (because the initialisation function \\_\\_init\\_\\_() has an argument \"name\" which must be supplied). So we can create multiple *Player* objects like this:\n\n    player1 = Player('James')\n    player2 = Player('Joe')\n    player3 = Player('Fred')\n\nDon't overthink the `self` arguments. The self argument just means \"the specific class object that we are working with\". For example, if we are referring to *player1*, then self means \"the player1 object\".\n\nTo run the `Player.win_points()` method (the `win_points()` function in the class `Player`) for, say player3:\n\n    player3.win_points(4, (0, 1)) # Fred wins 4 points, move is tuple (0, 1)\n\nand we can access Fred's other attributes, such as Fred's player's name, or  last move, from the Player object:\n\n    print(player3.name)  # prints \"Fred\"\n    # Get Fred's last move\n    try:\n        last_move = player3.moves[-1]\n    except IndexError:\n        print('No moves made.')\n\nUsing a Class allows us to create as many \"Player\" type objects as we like, without having to duplicate loads of code.\n\nFinally, if we look at the type of any of the players,  we see that they are instances of the class \"Player\":\n\n    print(type(player1))  # prints \"&lt;class '__main__.Player'&gt;\"\n\nI hope you found this  post useful.","link":"https://www.reddit.com/r/Python/comments/11ts1qq/why_use_classes/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":95}}
{"title":"I made a tic tac toe game with 98 lines of code. Is this good for a beginner?","description":"[https://github.com/DJToners/TicTacToe2.git](https://github.com/DJToners/TicTacToe2.git)","link":"https://www.reddit.com/r/Python/comments/11u9868/i_made_a_tic_tac_toe_game_with_98_lines_of_code/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":32}}
{"title":"Personal Project - JDR Tool Introduction","description":"I recently started learning Python, so I tried to write this project as  an exercise. The idea of the concept is derived from the solution to the  difficulties encountered when helping the Ministry of Finance to  develop the system. Share it here.\n\n&amp;#x200B;\n\n![img](k5nt455yggoa1 \"Figure 1. Appearance of JDR tool\n\")\n\n&amp;#x200B;\n\n![gif](ns56h4y0hgoa1 \"Figure 2. Using JDR tools to execute and manage programs\n\")\n\n## Link\n\n* Source code: [https://github.com/Chen-Alfred/JDR](https://github.com/Chen-Alfred/JDR)\n* Execution file: [https://github.com/Chen-Alfred/JDR/tree/main/dist](https://github.com/Chen-Alfred/JDR/tree/main/dist)\n* Documentation (English): [https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw](https://hackmd.io/xsLDRVAMTF2gO0YHo3lxYw)\n\n## Motivation\n\nJDR (Job Dependency Runner) is a set of small data governance tools developed by this project. In short, it is a set of \"programs used to assist in the execution and management of programs\".\n\nAt work, the action of \"executing a program\" is not particularly difficult in most cases. Usually, you edit the command first, then throw it into the shell, or an interface/platform, and then wait for the result to come out. Will use tools like crontab to pre-schedule.\n\nWith this method, if the scale is only one or two to a dozen programs, there may be no problem, but if there are hundreds or thousands of programs, it will be difficult to manage. The reason lies in the management issues derived from \"quantity\" and \"dependency\"\n\nThese management issues include: \"What is the current state of the program?\", \"What is the sequence of program execution?\", \"If a certain program needs to be re-run, will it affect which downstream related programs?\" When the number of programs is larger, it is less likely to be managed by the engineer's memory. Even if the records are assisted by files, maintenance and searching will take time and cost.\n\nAnd because data analysis has become more and more important in recent years, the data governance issue of \"whether the program is executed correctly and on time\" has also been paid more and more attention. In order to solve these issues, I hope to implement a set of tools in this project, so that some management issues can be automated, dashboarded, and the results are presented in a visual way.\n\nMaybe this project will overlap with some ETL tools (such as: SSIS, Trinity, DataStage, Automation) in function, because ETL tools also have the function of executing and managing programs, but because I haven't found a tool that can meet the needs , so that's another reason why I decided I wanted to develop my own.\n\nI hope that users only need to maintain a work list (Excel format), and then after inputting the list into this tool, a graphical program dependency flow chart can be automatically generated. The graphical program dependency flowchart is a kind of DAG (Directed Acyclic Graph). After having a graph, many issues arise about how to operate it. I try to simplify these operations as much as possible, so that these operations and management behaviors can be easily performed only by making a setting on the graphical interface, pressing a button, and viewing a report.\n\nEveryone is welcome to use this set of tools, but the design of the tools is based on my personal previous development experience and my own imagination, so if someone thinks that it is not easy to use, inconvenient, or not flexible enough, please feel free to feed these questions back to me, so that I can use them as a reference for improvement.","link":"https://www.reddit.com/r/Python/comments/11ui2v4/personal_project_jdr_tool_introduction/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Mercury \u2013 Turn Python Notebooks to Web Apps","description":"Hi! \n\nWe're Piotr and Aleksandra, founders of Mercury (https://RunMercury.com), an open-source framework for converting Jupyter Notebooks to Web Apps. You can turn the Python notebook into an interactive web app, static website, presentation, report, or dashboard and share it online with non-technical users. You can self-host Mercury or use our hosting service (coming soon!).\n\n\nOur GitHub: https://github.com/mljar/mercury\n\n\nSharing Python notebooks is challenging. You can't send notebooks directly to non-technical stakeholders. You need to copy-paste results/charts into Word/PowerPoint or rewrite the notebook to a web framework. Mercury converts a notebook to a web app. Users can execute cells but can't edit them.\n\n\nMercury offers a set of widgets that can be added to the notebook. When serving notebook with Mercury, widget change triggers automatic re-execution of cells. Not all cells are re-executed, only cells with widget definition and below, so you can cache results from previous cells execution (loading large dataset or model).\n\n\nMercury comes with handy features to make sharing easy:\n\n- decide to hide or show the notebook's code,\n\n- add authentication to notebooks so only selected users can view them,\n\n- export final notebook to PDF or HTML file,\n\n- all to create output files in a notebook, and make them downloadable,\n\n- share multiple notebooks on one Site.\n\n\n\nHow does Mercury differ from existing solutions?\n\n- it was designed for notebooks, it offers simple re-execution of cells after widget update,\n\n- it has built-in authentication.\n\n\nMercury is available on AGPLv3. We would like to offer a hosting service to make deployment very easy (just upload a notebook to have a website). We offer commercial license for companies looking for private forks and dedicated support.\n\nWe'd love to hear feedback on the framework!","link":"https://www.reddit.com/r/Python/comments/11tp5fa/mercury_turn_python_notebooks_to_web_apps/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":20}}
{"title":"ML models for User Recognition using Keystroke Dynamics","description":"The keystroke dynamics that are used in this article\u2019s machine learning models for user recognition are behavioral biometrics. Keystroke dynamics uses the distinctive way that each person types to confirm their identity. This is accomplished by analyzing the **2 keystroke events** on Key-Press and Key-Release \u2014 that make up a keystroke on computer keyboards to extract typing patterns. *The article will examine how these patterns can be applied to create 3 precise machine learning models for user recognition.*\n\n&amp;#x200B;\n\nhttps://preview.redd.it/rv2a4okbmaoa1.png?width=645&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=983865d15bb83d5c94b43a5940617117f972a89d\n\nThe goal of this article will be split in two parts, ***building and training*** 3 Machine Learning models (1. **SVM** 2. **Random** **Forest** 3. **XGBoost**) and ***deploying the model*** in a real live single point API capable of predicting the user based on 5 input parameters: the ML model and 4 keystroke times.\n\n[https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad](https://medium.com/@tudorache.a.bogdan/ml-models-for-user-recognition-using-keystroke-dynamics-e0665bc18cad)","link":"https://www.reddit.com/r/Python/comments/11tpor9/ml_models_for_user_recognition_using_keystroke/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"New to Python. Is this an inconsistency of the 'round()' function?","description":"I understand that the built-in `round()` function uses the \"round half to even\" strategy. However, I noticed that this isn't applied when rounding to a certain number of decimal places.\n\nHere's an example:\n\n`round(38.5)` returns `38`, the closest even number. But if I do `round(3.85, 1)` it returns `3.9`, 9 not being the closest even number. Is there a reason as to why the \"round half to even\" strategy is only applied to integers and not floats? Or is this just an overlooked inconsistency? (This might be a really obvious math thing and I'm just dumb, but I'm asking because I wanna understand these intricacies)\n\nThanks!","link":"https://www.reddit.com/r/Python/comments/11ud58f/new_to_python_is_this_an_inconsistency_of_the/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":13}}
{"title":"Introducing DataFrame QuickView: A Python package for easy DataFrame visualization, co-created with GPT-4! Seeking contributors \ud83d\ude80","description":"Hi, r/python! I'm u/gittb, and I'd like to share a project I've been working on called **DataFrame QuickView**. This package extends pandas DataFrame functionality to easily display and visualize DataFrames in a web-based environment, built using Flask. The catch? It's an experiment in paired programming with GPT-4, and I'm looking for contributors who want to join this exciting project!\n\n\ud83c\udf1f **Quick Overview of DataFrame QuickView:**\n\n* Extend pandas DataFrame with quickview()method\n* Display paginated DataFrame in a web browser\n* Create an interactive dropdown and button combination populated with DataFrame columns\n* Generate histograms based on the selected column when the button is pressed\n\n\ud83c\udfaf **Goal of the project:**\n\nThe primary goal is to expand the project with code written by Language Models (LLMs) like GPT-4. All contributions should be co-written primarily by LLMs to maintain the experimental nature of this project.\n\n\ud83d\udca1 **Potential additional functionality:**\n\n* More visualization types (bar charts, scatter plots, pie charts, etc.)\n* Filtering and sorting capabilities for DataFrames\n* Exporting visualizations as images or other formats\n* Adding support for multiple DataFrames\n\n\ud83d\udd0d **How to get involved:**\n\nIf you're interested in participating, check out the project on [GitHub](https://github.com/gittb/dataframe-quickview) and feel free to submit pull requests or open issues with your ideas. Remember that the code must be co-written primarily by LLMs for contribution acceptance.\n\nThanks for taking the time to read this post, and I'm looking forward to seeing what we can build together with the help of LLMs! Let's push the boundaries of AI-powered coding! \ud83d\ude80\n\nHappy coding! \ud83d\ude04 u/gittb\n\nEdit, forgot to include pypi link\n\n[https://pypi.org/project/dataframe-quickview/](https://pypi.org/project/dataframe-quickview/)\n\n&amp;#x200B;","link":"https://www.reddit.com/r/Python/comments/11uj8hh/introducing_dataframe_quickview_a_python_package/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"My first post","description":"Hello world!","link":"https://www.reddit.com/r/Python/comments/11uiymb/my_first_post/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"What are some projects on GitHub you support either through contribution or sponsorship?","description":"Hey all, I'm Chris, the developer community manager at New Relic. I'm trying to learn more about what interests developers in our community, and one thing I'm curious about is how devs choose projects to support on GitHub. What are some examples of projects you either contribute to or sponsor, for whatever reason -- either they improve your QoL as a dev, or they're humanitarian projects for the betterment of humankind. Thanks for your insights!","link":"https://www.reddit.com/r/Python/comments/11u5v9v/what_are_some_projects_on_github_you_support/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"Making a script that checks Twitch chat emote usage, channel has 828 emotes, VOD has 41,033 lines of chat. was blown away by how fast it took to run. 93ms.","description":"https://i.imgur.com/D88KQfa.png\n\n\ud83e\udd2f","link":"https://www.reddit.com/r/Python/comments/11uhi51/making_a_script_that_checks_twitch_chat_emote/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"QNX Demodisk Utilities","description":"[https://github.com/audiophyl/qnxdemotools](https://github.com/audiophyl/qnxdemotools)\n\nThis is a set of utilities for altering the contents of the QNX Demodisk of the late 90s. This is the first time I've shared a significant personal code base, and I'm pushing through my anxiety about negative feedback. I'm at a point where I'm telling myself \"eff it, all feedback is good feedback if you can use it to grow.\"\n\nThere's a lot more information within the README.md.\n\nI've been working on this on and off for several months, and now have functionality to a point which I like. It's a long shot that anyone would find this set of utilities useful in any way, but it's been quite fun for me to develop, and a wonderful learning experience as well.","link":"https://www.reddit.com/r/Python/comments/11u5zng/qnx_demodisk_utilities/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Pandas 2.0 RC1 has been published. Have you tried it? What do you think?","description":"I did a [TPC-H](https://www.tpc.org/tpch/) benchmark at scale factor 1 (\\~ 1GB) on 2.0.0 RC0 and the results were not as expected. The numbers are running time in seconds. Lower means better.\n\nSince the [main features](https://pandas.pydata.org/docs/dev/whatsnew/v2.0.0.html) of 2.0.0 are lazy copy and pyarrow dtype backend, I tried all the combinations:\n\n[Benchmarks on 2.0.0 RC0](https://preview.redd.it/upn6olo94boa1.png?width=1416&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=c5eb8092b50407a1eae6243eeee4ac969aedf59b)\n\nIf the image above doesn't work for you, please see the [gist](https://gist.github.com/UranusSeven/55817bf0f304cc24f5eb63b2f1c3e2cd). For the benchmarking script and dataset, please see this [repo](https://github.com/UranusSeven/experiments).\n\n**Now RC1 has been released, have you guys tried it?**\n\n&amp;#x200B;","link":"https://www.reddit.com/r/Python/comments/11ts7rv/pandas_20_rc1_has_been_published_have_you_tried/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":10}}
{"title":"Python 3.11 is much faster , but is it good for competitive programming?","description":"","link":"https://www.reddit.com/r/Python/comments/11ufqkw/python_311_is_much_faster_but_is_it_good_for/","created":"2023-03-18","tags":["python","reddit"],"meta":{"num_comments":5}}
{"title":"How to speed up bulkinsert in python?","description":"pypyodbc executemany method takes **70 seconds t**o insert 1000 records in the SQL server table. How can i speed up this bulkinsert query?\n\nimport pypyodbc as odbc\n\nconn\\_str = ( ...)\n\nconn1 = odbc.connect(conn\\_str)\n\nrecords =df. values.tolist()\n\nsql\\_insert = ''' insert into dbo.bulkinsert\\_tb values (?,?,?,?) '''\n\ncursor = conn1.cursor()\n\ncursor.fast\\_executemany = True\n\ncursor.executemany(sqlinsert,records)\n\ncursor.commit","link":"https://www.reddit.com/r/Python/comments/11u7hwo/how_to_speed_up_bulkinsert_in_python/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":7}}
{"title":"I wrote a program that calculates the difference between two files","description":"For some unknown reason, I am unable to use `fc` (file compare) command on Windows, so like a true programmer, instead of spending couple minutes troubleshooting it, I spent hours writing my own version of the program.\n\nYou can check it out at: [https://github.com/Ach113/dif](https://github.com/Ach113/dif)\n\nAny feedback would be appreciated.","link":"https://www.reddit.com/r/Python/comments/11twxa5/i_wrote_a_program_that_calculates_the_difference/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"The Ruff python linter is insanely good","description":"I just migrated some of my projects over to using [ruff](https://github.com/charliermarsh/ruff), and I am EXTREMELY impressed. It is quite literally 100 times faster than my previous linting configuration, all while being more organized and powerful. It's mind boggling fast. It has all of the plugins builtin that I was previously using with tools like flake8. It hooks into `pre-commit` and replaces many plugins I had before like:\n\n* `isort` - sorts imports\n* `bandit` - finds common security issues\n* `flake8` - linter; additional benefit is that I can now delete my \\`.flake8\\` file.\n* `pygrep-hooks` - common misc linting\n\nAdditionally, it's completely configurable via pyproject.toml, so that always feels good.\n\nBy the way, if you want to checkout my python template, it has my preferred ruff configuration:[https://github.com/BrianPugh/python-template](https://github.com/BrianPugh/python-template)","link":"https://www.reddit.com/r/Python/comments/11syxd0/the_ruff_python_linter_is_insanely_good/","created":"2023-03-16","tags":["python","reddit"],"meta":{"num_comments":136}}
{"title":"Speed | When has it been an issue for you?","description":"Everyone is always raving about how python is slow, but I have a feeling that as hardware gets better, this will mean less over time.\n\nDoes anyone have an example of when speed made you choose a different language?","link":"https://www.reddit.com/r/Python/comments/11u0gp7/speed_when_has_it_been_an_issue_for_you/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":13}}
{"title":"Is setting up React with Python difficult?","description":"Is it difficult to setup React with Python that meets the following requirements:\n\n1. Server Side Rendering\n2. Server Side Generation\n3. Incremental Server Side Generation\n4. Use React as a template with an experience similar to using Jinja templates","link":"https://www.reddit.com/r/Python/comments/11tlnkq/is_setting_up_react_with_python_difficult/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":51}}
{"title":"Another episode of the office-racer (Python, websockets,...)","description":"I'm streaming at arconsis today.  \nIt is about a little RC Car for our office.  \n\\- Websockets  \n\\- Python  \n\\- PiCamera  \n[https://www.twitch.tv/arconsis](https://www.twitch.tv/arconsis)  \n\n\nJoin us if you are interested in WebSockets and IoT.","link":"https://www.reddit.com/r/Python/comments/11tt2gm/another_episode_of_the_officeracer_python/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"README-AI: automated README creation and codebase documentation!","description":"Hey all,\n\nWanted to share a Python project I'm building with called [README-AI](https://github.com/eli64s/README-AI). The project aims to automate README Markdown creation and generate codebase documentation, leveraging OpenAI's language model APIs.\n\nThe project can be found using the link below:  \n[**https://github.com/eli64s/README-AI**](https://github.com/eli64s/README-AI).\n\nThe text generation is not perfect by any means, but it's been fun to learn and play around with. Would appreciate any feedback or suggestions to improve the codebase and enhance usability for users.\n\nThanks for taking the time to read this post!","link":"https://www.reddit.com/r/Python/comments/11ti68c/readmeai_automated_readme_creation_and_codebase/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Dad Joke Collector for my Blog","description":"Wrote a dad joke collector for my personal website. It runs on a cron and stores any jokes that have not already been stored into my dadabase based on the creation time of the posts I bookmark/save.  \n   \n[https://krowvin.com/dadjokes](https://krowvin.com/dadjokes)\n\n&amp;#x200B;\n\n[dbapi is a class I wrote using SQLAlchemy to do various things with my homelab database. ](https://preview.redd.it/620fy2g7s7oa1.png?width=793&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=97f2bed3a24f06c71000fe24bc02568ff341e88e)","link":"https://www.reddit.com/r/Python/comments/11tf5xk/dad_joke_collector_for_my_blog/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":6}}
{"title":"Theine 0.3.3 released, introducing new Clock-Pro eviction policy","description":"Theine: high performance in-memory cache\n\n[https://github.com/Yiling-J/theine](https://github.com/Yiling-J/theine)\n\nTheine 0.3.3 add a new eviction policy called Clock-Pro, which has better hit ratio than LRU in most cases and outperform W-TinyLFU in some benchmarks.\n\n[Clock-Pro](https://static.usenix.org/event/usenix05/tech/general/full_papers/jiang/jiang_html/html.html): An improved CLOCK replacement policy (CLOCK: an approximation of LRU).\n\n**10k requests benchmark**\n\nPython: 3.11 / OS: Ubuntu 22.04.2 LTS\n\nWrite and Mix Zipf use 1k max cache size, so you can see the high cost of traditional LFU eviction policy here.\n\n||Read|Write|Mix Zipf|\n|:-|:-|:-|:-|\n|Theine(Clock-Pro) API|3.07 ms|9.86 ms||\n|Theine(W-TinyLFU) API|3.42 ms|10.14 ms||\n|Theine(W-TinyLFU) Auto-Key Decorator|7.17 ms|18.41 ms|13.18 ms|\n|Theine(W-TinyLFU) Custom-Key Decorator|6.45 ms|17.67 ms|11.50 ms|\n|Cachetools LFU Decorator|15.70 ms|627.10 ms|191.04 ms|\n|Cacheout LFU Decorator|50.05 ms|704.70 ms|250.95 ms|\n|Theine(LRU) Custom-Key Decorator|5.70 ms|16.04 ms|10.91 ms|\n|Cachetools LRU Decorator|14.05 ms|61.06 ms|36.89 ms|\n|Cacheout LRU Decorator|47.90 ms|94.94 ms|68.25 ms|\n\nSee github README for hit ratio benchmarks.","link":"https://www.reddit.com/r/Python/comments/11tn6iu/theine_033_released_introducing_new_clockpro/","created":"2023-03-17","tags":["python","reddit"],"meta":{"num_comments":10}}
