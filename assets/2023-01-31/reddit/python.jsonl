{"title":"Sunday Daily Thread: What's everyone working on this week?","description":"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.","link":"https://www.reddit.com/r/Python/comments/10ntjak/sunday_daily_thread_whats_everyone_working_on/","created":"2023-01-29","tags":["reddit","python"],"meta":{"num_comments":21}}
{"title":"Tuesday Daily Thread: Advanced questions","description":"Have some burning questions on advanced Python topics? Use this thread to ask more advanced questions related to Python.\n\n**If your question is a beginner question we hold a beginner Daily Thread tomorrow (Wednesday) where you can ask any question! We may remove questions here and ask you to resubmit tomorrow.**\n\nThis thread may be fairly low volume in replies, if you don't receive a response we recommend looking at r/LearnPython or joining the Python Discord server at [https://discord.gg/python](https://discord.gg/python) where you stand a better chance of receiving a response.","link":"https://www.reddit.com/r/Python/comments/10pid6b/tuesday_daily_thread_advanced_questions/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"What are the best Python libraries to learn for beginners?","description":"Hi everyone. I wanted to reach out and ask for some help with a Python project I'm working on. So, I'm a CS student and I recently started learning Python and so far, I\u2019m loving it. It's a great language and I even like it better than JavaScript. Anyways, I'm looking forward to continuing to improve my skills in this area.\n\nOne thing I've been struggling with though is all the libraries that come with Python. I'm particularly interested in machine learning, but I'm down to learn any popular libraries that you guys recommend.\n\nI've been doing some research online, but I figured why not ask Reddit. So, if you guys have any good libraries to suggest, that'd be great. Also, if you know of any good places to learn these libraries, I'm all ears.\n\nSo far, I've picked out a few libraries that I found:\n\n* [NumPy](https://numpy.org/): Scientific computing library and I know this one is the most popular especially in Data Science.\n* [DocArray](https://github.com/docarray/docarray): Multimodal Data Library\n* [TensorFlow](https://www.tensorflow.org/) and [PyTorch](https://pytorch.org/): Deep learning library\n* [python-benedict](https://github.com/fabiocaccamo/python-benedict): Dictionary manipulation library\n\nI know we'll be moving on to other languages next semester, but I want to make sure I have a solid understanding of Python as well. I would really appreciate it if you guys could give me some more suggestions. If you have any personal experience with any of these libraries, I would love to hear about it.\n\nNext semester, we'll be moving on to other languages, but I want to make sure I have a solid understanding of Python too. If you have any more libraries to recommend, I'd be grateful.\n\nAlso, if you have any personal experience with any of these libraries or have any project ideas, I'd love to hear about it.\n\nThanks for anyone helping out. Looking forward to diving into these libraries and learning more.","link":"https://www.reddit.com/r/Python/comments/10prx0l/what_are_the_best_python_libraries_to_learn_for/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":64}}
{"title":"Making Automatic YouTube Videos with Python","description":"Hi everyone! Awhile back I had the idea to fully automate a YouTube channel to see how successful it could become. I'm not new to programming, but I certainly am to Python.\n\nHere's a video I made explaining the process: [https://youtu.be/ZmSb3LZDdf0](https://youtu.be/ZmSb3LZDdf0)\n\nThe way I started was to use those terrible Reddit TikTok/Reel/Shorts where people find a popular post and essentially just read it out with some funny comments. Luckily for me, people already use text-to-speech instead of their own voice, so my solution would fit right in.\n\nTo get content, I first used PRAW to access the Reddit API. I filter through that response and used pyttsv3 to generate an .mp3 of the voiceover. Then Selenium and Firefox made getting screenshots of each comment/post title really easy.\n\nThe only tricky part for me was learning how to use MoviePy to package everything up into a neatly-edited video. I explain this much better in the video above, but it basically consists of creating clip objects with each of the pictures and voiceovers, then connecting them in a CompositeVideoClip.\n\nI'm curious how many others have tried this, as I'm sure the majority of popular stolen Reddit posts can't be all made by hand.","link":"https://www.reddit.com/r/Python/comments/10peps0/making_automatic_youtube_videos_with_python/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":21}}
{"title":"Transfer the ownership of Flask-Mailing","description":"Hi,\nI want to transfer the ownership of the below mentioned project.\n\nFlask-Mailing: Flask mail system for sending mails(individual, bulk) ,attachments(individual, bulk) fully asynchronously..\n\nGitHub: https://github.com/marktennyson/flask-mailing\n\nPYPI: https://pypi.org/project/Flask-Mailing/\n\nDocumentation: https://gh.aniketsarkar.info/flask-mailing/","link":"https://www.reddit.com/r/Python/comments/10pvwlu/transfer_the_ownership_of_flaskmailing/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"PyCharm has become horrible to work with over SSH interpreter, any similar experiences?","description":"I have been using PyCharm pro for a few years now. I dont remember when exactly but probably last year they reworked the way SSH interpreters are configured?\n\nFor a while now,  I constantly have problems with this stupid config. Maybe I am doing something wrong and it's me who is stupid but it is just so frustrating! It all worked nicely before with some simple settings.\n\n&amp;#x200B;\n\nNow I have problems like:\n\n\\-  confusing coupling of deployment and SSH\n\n\\- deployment not happening where it is supposed to be (see above)\n\n\\- SSH option wizard no longer supports pointing to anaconda directly and somehow changed to be not as intuitive as it used to be\n\n\\- debugging is a feaking hell. PyCharm always wants to jump to some temporary files (which dont have my breakpoints) and it takes me a day to try all kind of settings until it magically works and I have no clue what finally got me to the point...\n\nI have several projects on several servers and this is becoming a huge blocker in my work, being not able to debug properly.\n\n&amp;#x200B;\n\nPlease tell me I am not the only one? ","link":"https://www.reddit.com/r/Python/comments/10pyujg/pycharm_has_become_horrible_to_work_with_over_ssh/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":6}}
{"title":"What does Python uniquely offer for automation?","description":"I write JavaScript and when we launched our open source business automation tool, we let users write Node.js code as part of their flows if they can't find an out-of-the-box piece for it.\n\nWe keep hearing from users that they prefer to write Python over JavaScript. We'll add it eventually since it's being consistently requested.\n\nBut.. I'd like to understand from the perspective of Python developers, what is it that Python offers that other languages (namely JavaScript) don't? Any specific features or libraries that you think you'd rely on for automation jobs?\n\nI mean by automation things like: syncing data from service A to service B and so.","link":"https://www.reddit.com/r/Python/comments/10pyttg/what_does_python_uniquely_offer_for_automation/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":8}}
{"title":"AWS lambda payload in Pythonic way.","description":"Following is my code snippet to return payload or the failure message for future error handling.However, I would like to improve the readability and maintainability.\n\n        if reportId is not None:\n            return {'payload': reportId}\n        # Future error handling\n        else:\n            return {'message': 'Fail to create report'}\n\nFollowing is the answer given by Chat GPT\n\n`return {'payload': reportId} if reportId else {'message': 'Fail to create Amazon Business &amp; Traffic report'}`\n\nCould you let me know which one is the better one, please?","link":"https://www.reddit.com/r/Python/comments/10pxx2f/aws_lambda_payload_in_pythonic_way/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"Full support for slots in dataclasses","description":"Many years ago I've made a small library to provide the `__slots__` attribute to dataclasses: dataslots. It's stable, well-tested, and supports type checking. Additional features to python implementation:\n\n* Support for python 3.7 - 3.12 (python 3.10/3.11 added base support for slots).\n* Support for dynamic assignment for new variables (`__dict__` in `__slots__`).\n* Pickling frozen dataclasses (fixed in python 3.10).\n* Support for data descriptors and slots simultaneously.\n\nIf you are using older versions of python or need more from dataclasses give it a try. \n\nGithub: https://github.com/starhel/dataslots\nPyPI: https://pypi.org/project/dataslots/","link":"https://www.reddit.com/r/Python/comments/10pce4u/full_support_for_slots_in_dataclasses/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":5}}
{"title":"Looking for a tutorial on building restful apis in the functional paradigm in python","description":"Hi Python, \n\nI can't seem to find any tutorials on building Restful API's using the Functional Paradigm over the Object Oriented Paradigm with Python. Could you link them if you know of any?","link":"https://www.reddit.com/r/Python/comments/10ps5us/looking_for_a_tutorial_on_building_restful_apis/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"Understanding Python re(gex)? with hundreds of examples and exercises (free till Feb 5)","description":"Hello!\n\nI just published a new version of \"**Understanding Python re(gex)?**\" ebook. I caught up to new features in 3.11 version like possessive quantifiers, corrected many mistakes, improved examples, exercises and so on.\n\nThis book will help you learn **Python Regular Expressions** step-by-step from beginner to advanced levels with **hundreds of examples and exercises**. The standard library `re` and the third-party `regex` module are covered in this book.\n\n[Book cover](https://preview.redd.it/7fctq8qa4dfa1.png?width=1280&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=8e1aa7a75031eec1380f4ff430d56f741711fb26)\n\n## Release offers\n\nTo celebrate the new release, you can download PDF/EPUB versions of **Understanding Python re(gex)?** for FREE till 05-Feb-2023. You can still pay if you wish (also, check the bundle offers in the product page). If you already got my ebook before, you can get the updated content via your Gumroad/Leanpub account.\n\n* [Gumroad](https://learnbyexample.gumroad.com/l/py_regex)\n* [Leanpub](https://leanpub.com/py_regex/c/P7erPYAm1386)\n\n## re(gex)? playground\n\nTo make it easier to experiment, I'm currently working on an interactive app. See [PyRegexPlayground](https://github.com/learnbyexample/TUI-apps/tree/main/PyRegexPlayground) repo for installation instructions and usage guide. A sample screenshot is shown below:\n\n[TUI app for regex playground](https://preview.redd.it/yl5gagip4dfa1.png?width=864&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=b4fc9c40290575cf786547fdf4d2040a5d6b88b6)\n\n## Table of Contents\n\n1. Preface\n2. Why is it needed?\n3. re introduction\n4. Anchors\n5. Alternation and Grouping\n6. Escaping metacharacters\n7. Dot metacharacter and Quantifiers\n8. Interlude: Tools for debugging and visualization\n9. Working with matched portions\n10. Character class\n11. Groupings and backreferences\n12. Interlude: Common tasks\n13. Lookarounds\n14. Flags\n15. Unicode\n16. regex module\n17. Gotchas\n18. Further Reading\n\n## Web version\n\nYou can also read the book online here: [https://learnbyexample.github.io/py\\_regular\\_expressions/](https://learnbyexample.github.io/py_regular_expressions/).\n\n## GitHub repo\n\nVisit [https://github.com/learnbyexample/py\\_regular\\_expressions](https://github.com/learnbyexample/py_regular_expressions) for markdown source, example files, exercise solutions, sample chapters and other details related to the book.\n\n## Feedback and Errata\n\nI would highly appreciate if you'd **let me know how you felt about this book**. It could be anything from a simple thank you, pointing out a typo, mistakes in code snippets, which aspects of the book worked for you (or didn't!) and so on.\n\nHappy learning :)","link":"https://www.reddit.com/r/Python/comments/10pwmaw/understanding_python_regex_with_hundreds_of/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Computer Vision Autopilot","description":" For those of you interested in aviation and programming, I\u2019d like to share this open-source, computer vision flight controller that I built. Any feedback that you have would be greatly appreciated.\n\nhttps://preview.redd.it/27vegagrf8fa1.png?width=1280&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=3b9710c1d2cfe070f09c7e475ba57703593c7e78\n\n[https://youtu.be/BQiIkhdTP4o](https://youtu.be/BQiIkhdTP4o)","link":"https://www.reddit.com/r/Python/comments/10pbmqn/computer_vision_autopilot/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"How do you guys feel about live learning/live coding videos? (featuring one about Open AI)","description":"Hi r/Python, I'm an ex-Amazon Software Engineer and I enjoy making tutorials. I've helped a few people who've found me through tutorials land jobs and I've also solidified my knowledge of many subjects through these tutorials. Usually I write blog posts, but recently I've been playing around making some videos as well.\n\nI've made some straight up tutorial videos in the past, but I thought it might be interesting to show how I get started with new technologies and see if it's helpful for other people. Here's an example of something I made recently: [Learn the OpenAI API with me](https://youtu.be/jz0CoTlt7zY)\n\nWhat do you guys think? Do you like this style of learning or do you prefer straight up tutorials? Thanks!","link":"https://www.reddit.com/r/Python/comments/10pfwfe/how_do_you_guys_feel_about_live_learninglive/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":1}}
{"title":"Use cases for PySide","description":"I think my next project will include working with QT applications using a PySide2. As I\u2019m learning the tooling I wanted to ask the community what use cases or application types you know are trending (?) with QT and Python.","link":"https://www.reddit.com/r/Python/comments/10pknit/use_cases_for_pyside/","created":"2023-01-31","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"ConfigParser potential inconsistencies","description":"&amp;#x200B;\n\nHello All,\n\nIs it just me or ConfigParser is pretty inconsistent? Does it seem illogical only to me or am I missing something?\n\nThis is what puzzled me when I started to use it.\n\n1. The section names are case sensitive but the key names are not. Why not stick to one way or another to keep consistent?\n2. There are no subsections. Why not? It would seem only logical and it doesn\u2019t appear hard to implement. Lots of people are asking about it in forums. Or nested structures could be defined by indents just like Python itself does.\n3. There can be a DEFAULT section if it is named exactly like that. But it doesn\u2019t show in the list of sections, if we try to enumerate them. See a script below. Did I miss something? So if I\u2019m trying to find all the sections and all the keys in them, the DEFAULT section doesn\u2019t show up. Ok, let\u2019s say there\u2019s some logic behind it that I\u2019m missing. But then if it\u2019s really, truly so \u201cDEFAULT\u201d, then why not allow to read from the config file without specifying any section? Wouldn\u2019t it be logical to read from the DEFAULT section in that case? Why we need to specify it if it\u2019s really a default?\n4. Why not allow a simple config (ini) file to have a set of keys and values without the need for any sections at all? Then really treat all those keys as in the default section?\n\n&amp;#x200B;\n\nThis is a simple test I used:\n\n`for Section in cfg.sections():`  \n`print('Section:', Section)`  \n`for key,value in cfg.items(Section):`  \n`print(key, value)`","link":"https://www.reddit.com/r/Python/comments/10p8szk/configparser_potential_inconsistencies/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":6}}
{"title":"Stacks and Queues in Python","description":"Hey everyone, I've written this article that explains  stacks and queues in Python and also their implementation. [https://medium.com/@azizbelaweid/stacks-queues-in-python-explained-c164bde0561e](https://medium.com/@azizbelaweid/stacks-queues-in-python-explained-c164bde0561e) Feel free to check it out and give me your feedback.","link":"https://www.reddit.com/r/Python/comments/10oyssl/stacks_and_queues_in_python/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":6}}
{"title":"Expense Tracker","description":"Hello everyone, \n\nI built an expense tracker long time ago. I looked at the code several weeks ago and realized how bad it was. So I decided to rebuild it and make it better and more important: useful. I will continue working on it and maybe inplementing features like currency coonversion, taxes and more. \n\nI am happy for every feedback I get. For bugs or problems, feel free to create an Issue on GitHub. \n\nRepo: [https://github.com/Jolumine/exptrk](https://github.com/Jolumine/exptrk)","link":"https://www.reddit.com/r/Python/comments/10pcz96/expense_tracker/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Quaker: A paginated client for the USGS earthquake database","description":"Hi! This is a small little project that came out of a hackathon late last year. I was curious about doing some data analysis in earthquake times and locations, and came across this public database from USGS (which is well-documented: https://earthquake.usgs.gov/fdsnws/event/1/). However their public API has a hard limit on query results: it will only accept queries that have less than 20000 results.   \n\n\nThough not super-fast, I thought that it would be possible to run queries that exceed this by recursively breaking up the results into smaller queries. And it was! So I decided to build out the initial script into it's own repo.  \n\nIntroducing [Quaker](https://github.com/BlakeJC94/quaker)! I've just finished the last major refactor and completed the full implementation of the USGS API, so I decided it was finally worthy of a v1.0.0 release. \n\n\nThrough this project, I learned about \n- Using argparse and auto-generating help/usage docs\n- Using the requests library \n- Mocking responses in PyTest\n- Nested subclassing and mixins\n- Caching result IDs using a deque\n\n\nSomething I'd be keen to add next would be some dash-app functionality (similar to what's on their [website](https://earthquake.usgs.gov/earthquakes/search/)), Pull requests and discussion is welcome. Not sure if anyone would find it useful, but it was an entertaining project to tinker with. \n\nThanks for having a gander!","link":"https://www.reddit.com/r/Python/comments/10oybdv/quaker_a_paginated_client_for_the_usgs_earthquake/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"Built a little evolution simulator in pygame!","description":"[https://two119.itch.io/dynasty](https://two119.itch.io/dynasty)\n\nThe world is dangerous. Anyone can\u00a0starve, get eaten, lost, outcompeted or outrun\u00a0 - and the answer to all these problems is to evolve! Look down upon your beings like a god and watch them struggle to survive over the generations. Join them yourself and see how long your bloodline survives! Fill the world with deadly predators, or give your creatures free reign in a paradise. The choice is yours!\u00a0\n\nSource on github: [https://github.com/Two119/Dynasty](https://github.com/Two119/Dynasty)\n\nhttps://preview.redd.it/5uivpr6ur7fa1.png?width=1260&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=d6679ce29b1ea81b1bdec35a840218fd48cd7be1","link":"https://www.reddit.com/r/Python/comments/10p87t5/built_a_little_evolution_simulator_in_pygame/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"I don't understand urllib redirections.","description":"Hello im trying to understand a few things about redirection.\n\nCan someone explain to me why I don't get redirected when I try to open [http://www.google.com](http://www.google.com/) with urllib. Meanwhile I get the redirection for [http://www.toto.fr](http://www.toto.fr/) which redirect to [https://www.toto.fr](https://www.toto.fr/).\n\nIn firefox those two http urls are well redirected to https.\n\n\\&gt;&gt;&gt; url = '[http://www.toto.fr](http://www.toto.fr/)'\n\n\\&gt;&gt;&gt; r = request.urlopen(url)\n\n\\&gt;&gt;&gt; r.url\n\n'[https://www.toto.fr/](https://www.toto.fr/)'\n\n\\&gt;&gt;&gt; url = '[http://www.google.com](http://www.google.com/)'\n\n\\&gt;&gt;&gt; r= request.urlopen(url)\n\n\\&gt;&gt;&gt; r.url\n\n'[http://www.google.com](http://www.google.com/)'","link":"https://www.reddit.com/r/Python/comments/10pd88r/i_dont_understand_urllib_redirections/","created":"2023-01-30","tags":["reddit","python"],"meta":{"num_comments":7}}
