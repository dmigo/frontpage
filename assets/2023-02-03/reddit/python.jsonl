{"title":"Thursday Daily Thread: Python Careers, Courses, and Furthering Education!","description":"Discussion of using Python in a professional environment, getting jobs in Python as well as ask questions about courses to further your python education!\n\n**This thread is not for recruitment, please see** r/PythonJobs **or the thread in the sidebar for that.**","link":"https://www.reddit.com/r/Python/comments/10ral8v/thursday_daily_thread_python_careers_courses_and/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":5}}
{"title":"Better Google Calendar API for Python","description":"I found that picture \u201cThe 50 push-ups in a month challenge\u201d back in 2017 and decided that it was time to try it.\n\nI wanted a calendar reminder of how many push-ups I need to do every day. As a software engineer, I couldn\u2019t afford to spend 10 minutes putting the events manually. So I spent 3 hours getting the official API to work to do this for me. Then I thought that this simple task shouldn\u2019t take 3 hours and spent the next couple of days implementing the initial version of the GCSA (Google Calendar Simple API). Several years later, I\u2019m happy that people find this project useful, you might too:[https://github.com/kuzmoyev/google-calendar-simple-api](https://github.com/kuzmoyev/google-calendar-simple-api)\n\nIssue reports, pull-requests are greatly appreciated :)\n\n&amp;#x200B;\n\nHere is the [Getting started page](https://google-calendar-simple-api.readthedocs.io/en/latest/getting_started.html).","link":"https://www.reddit.com/r/Python/comments/10shzxt/better_google_calendar_api_for_python/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"PokerPy , Python module for precise and fast Texas Hold'em Poker probability calculations.","description":"&amp;#x200B;\n\n**LINK:** [PokerPy](https://github.com/glpcc/PokerPy)\n\nHi, I made this module to learn C++ and Python integration and also to in the future maybe build a Poker AI. But I think this module can still be usefull for building automated poker scripts and apps easly form python.\n\nIn my windows machine it takes around 0.7secs for all calculations for 7 players with 2 cards each. In my Linux machine (worst CPU) it takes less (around 0.5 secs) for some reason :)\n\nAny thing more than 2 cards per player can be considered realtime.\n\nAny recommendation or comment is gladly welcomed.","link":"https://www.reddit.com/r/Python/comments/10rodh3/pokerpy_python_module_for_precise_and_fast_texas/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":52}}
{"title":"Cookiecutter template to build and deploy FastAPI backends\u2026batteries included","description":"Here is a small project I use to get up and running with FastAPI backends https://github.com/nickatnight/cookiecutter-fastapi-backend  \n  \nComes with some nice bells and whistles: nginx web proxy, postgres, async, ci/cd, and auto certbot renewal to name a few.","link":"https://www.reddit.com/r/Python/comments/10s6b5x/cookiecutter_template_to_build_and_deploy_fastapi/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"Making a loudness monitor for online meetings using Python","description":"I've received complaints from my wife and others in the house that I speak too loud. So I decided to write a script that measures the sound volume from my microphone and alerts me when there is too much noise in my office. \n\n[https://rolisz.ro/2023/02/02/making-a-loudness-monitor/](https://rolisz.ro/2023/02/02/making-a-loudness-monitor/)","link":"https://www.reddit.com/r/Python/comments/10rzbcv/making_a_loudness_monitor_for_online_meetings/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"\"Introducing \"callpyback\": Last callbacks for your Python functions you will ever need - Feedback and Contributions Wanted!\"","description":"https://github.com/samuelgregorovic/callpyback\n\nWe are proud to announce the release of our new Python library, \"callpyback\" - a flexible and powerful tool for adding callbacks to your functions. With its wide range of features, you can customize the behavior of your functions in different stages of their execution, making it easier to build robust and reliable applications.\n\nIf you're a Python developer, we invite you to check out \"callpyback\" on GitHub at https://github.com/samuelgregorovic/callpyback. We would also love to hear your feedback and get your contributions to the project.\n\nThe \"callpyback\" library is still in its early stages, and we believe there is a lot of room for improvement. If you have any suggestions, bug reports, or feature requests, feel free to open an issue or submit a pull request on GitHub. Your contribution can help us make this library even better!\n\nWe hope you enjoy using \"callpyback\" as much as we enjoyed building it! Thank you for your support and we look forward to hearing from you.","link":"https://www.reddit.com/r/Python/comments/10s3uzq/introducing_callpyback_last_callbacks_for_your/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":20}}
{"title":"I built cakework - open source platform to deploy computationally intensive Python functions as serverless jobs, with no timeouts","description":"Hi friends! I ran into this problem enough times at my last few jobs that I built a tool to solve it. I spent many hours building Docker containers for my Python functions, as many of the data science modules required building C libraries (since they significantly speed up compute-intensive routines, such as math calculations). Deploying the containers to AWS Lambda or Fargate (if the processes required more CPU or memory or were &gt;15 minutes) and wiring functions to talk to each other using queues, databases, and blob storage made iterating on the actual code, which wasn't even that complex most of the time, slow.\n\nI made cakework [https://github.com/usecakework/cakework](https://github.com/usecakework/cakework), a platform that lets you spin up your Python functions as serverless, production-scale backends with a single command. Using the client SDK, you submit requests, check status, and get results. You can also specify the amount of CPU (up to 16 cores) and memory (up to 128GB) for each individual request, which is helpful when your data size and complexity varies across different requests.\n\nIt's open source &lt;3. Here are some fun examples to get you started: [https://docs.cakework.com/examples](https://docs.cakework.com/examples)\n\nWould love to hear your thoughts!","link":"https://www.reddit.com/r/Python/comments/10ryiqt/i_built_cakework_open_source_platform_to_deploy/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Beautiful date","description":"Use [beautiful\\_date](https://github.com/kuzmoyev/beautiful-date) when need to create date/datetime objects in a simple way.\n\nInstall with\n\n    pip install beautiful-date\n\nAnd use like so:\n\n    from beautiful_date import Feb, days\n    \n    d = 2/Feb/2023\n    # BeautifulDate(2023, 2, 2)\n    \n    d[4:13]\n    # datetime.datetime(2023, 2, 2, 4, 13)\n    \n    d + 2 * days\n    # BeautifulDate(2023, 2, 4)","link":"https://www.reddit.com/r/Python/comments/10shz2h/beautiful_date/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"[PYGAME] THE SHIP THAT FIRES BULLETS in a version of mine.","description":"Hi everyone, it is nice to meet you all from all over the world\n\nI am a beginner of Python, this is my first project - programming a game based on the book \"Python Crash Course of Eric Matthes\". Since I find that there are a lot of readers of this book but rarely someone did this project, I want to share my code thru Git.\n\nIf you need it you can take it. I also need some STARS for motivation only. Please drop some for me. Thank you guys\n\nLink:  [MauricePham/Alien-Invasion: \\[PYGAME\\] The invasion of Aliens (github.com)](https://github.com/MauricePham/Alien-Invasion)","link":"https://www.reddit.com/r/Python/comments/10se0dt/pygame_the_ship_that_fires_bullets_in_a_version/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"How to recieve the user inpout from joystick of PS4 and use it to recognise the pattern in the input and also identify time using pygame","description":"I'm trying to automatically detect any sequence that is being formed by joystick but I am not able to do so. Let me try explaining what I mean to say - suppose with the joystick i perform following operatings (left, right, forward, right) then I only do right , after that I perform safe operation like (left, right, forward, right) and again this (left, right, forward, right) so I have repeated that 3 time and two times consecutively. SO I want that my code should detect it automatically if any pattern is getting performed and print the \"Repetitive task\".  \n\n\n    import pygame\n    \n    # initialize pygame library\n    pygame.init()\n    \n    # initialize joystick\n    pygame.joystick.init()\n    \n    # get number of joysticks\n    joystick_count = pygame.joystick.get_count()\n    \n    # check if any joysticks are available\n    if joystick_count == 0:\n        print(\"No joysticks found\")\n        pygame.quit()\n        quit()\n    else:\n        # initialize the first joystick\n        joystick = pygame.joystick.Joystick(0)\n        joystick.init()\n    \n    # set the previous positions to an empty list\n    prev_positions = [(joystick.get_axis(0), joystick.get_axis(1))]\n    \n    # define the maximum length of the sequence\n    max_length = 10\n    \n    # define the minimum movement threshold\n    threshold = 0.1\n    \n    # main loop\n    while True:\n        # get current position of joystick\n        position = (joystick.get_axis(0), joystick.get_axis(1))\n    \n        # check if current position is different from previous position\n        if abs(position[0] - prev_positions[-1][0]) &gt; threshold or abs(position[1] - prev_positions[-1][1]) &gt; threshold:\n            #print(\"Joystick moved:\", position)\n    \n            # add the current position to the list of previous positions\n            prev_positions.append(position)\n    \n            # check if the list of previous positions is longer than the maximum length\n            if len(prev_positions) &gt; max_length:\n                prev_positions.pop(0)\n    \n            # check if the current sequence of positions is repeating\n            repeat_length = 1\n            for i in range(len(prev_positions) - 2, -1, -1):\n                if prev_positions[i:i + repeat_length] == prev_positions[-repeat_length:]:\n                    repeat_length += 1\n                else:\n                    break\n            if repeat_length &gt;= 4:\n                print(\"It is a repetitive task.\")\n    \n        # check if the quit event is triggered\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT:\n                pygame.quit()\n                quit()\n\n&amp;#x200B;","link":"https://www.reddit.com/r/Python/comments/10sd8yc/how_to_recieve_the_user_inpout_from_joystick_of/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Ariadne Codegen: code generator for Python GraphQL clients","description":"Hey everyone!\n\nRecently we've released [Ariadne Codegen](https://github.com/mirumee/ariadne-codegen), a new tool for Python which generates GraphQL clients from `*.graphql` files with schema and queries. This project evolved from the utility tool that was created at work to speed up the process of writing services integrating with and extending the GraphQL API of [Saleor](https://graphql.com/saleor/saleor), our company's open source e-commerce package.\n\nTL;DR for the problem solved is that writing GraphQL client by hand is mostly writing a lot of boilerplate code and translating the GraphQL types to Python dataclasses or Pydantic's models. And every new query is basically previous query copied over with some bits changed. This process is great for automation.\n\nOur Codegen is fast to get started with. You configure it by adding dedicated `[ariadne-codegen]` section to your `pyproject.toml` file, which contains settings for codegen telling it where to find the GraphQL schema and operations. You then run the ariadne-codegen command which makes the Codegen parse those files and generate a Python package implementing the GraphQL client providing those operations as fully typed methods. GraphQL types are represented as Pydantic models and Enums are represented as Python enums.\n\nFor example, this GraphQL query:\n\n    mutation UserCreate($name: String!, $email: String!, $password: String!) {\n      userCreate(input: { name: $name, email: $email, password: $password }) {\n        token\n        user {\n          id\n        }\n        errors {\n          location\n          type\n          message\n        }\n      }\n    }\n\nBecomes this method on generated client:\n\n    class Client(BaseClient):\n        def user_create(self, name: str, email: str, password: str) -&gt; UserCreate:\n            # Bunch of boilerplate code building query and variables dict,\n            # then sending it to the GraphQL client and handling the response\n            return UserCreate.parse_obj(data)\n\nYou can then either release generated package as a library for others to use, or keep it as a part of the project you are working at\n\nMultiple customization options are also provided, including option switch between async and sync client, inject custom Python code into generated classes or swap default HTTP client with custom one.\n\n**GitHub repository:** [mirumee/ariadne-codegen](https://github.com/mirumee/ariadne-codegen)\n\nThere's also full [release announcement on Ariadne blog](https://ariadnegraphql.org/blog/2023/02/02/ariadne-codegen) that tells the whole story\n\nThank you for reading all of this. We hope this tool will be helpful for you, and if not, then that the read above was at least interesting :)","link":"https://www.reddit.com/r/Python/comments/10rqo82/ariadne_codegen_code_generator_for_python_graphql/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"I just released my new book \"Practical Python Artificial Intelligence Programming\"","description":"You can buy it or read it free online at [https://leanpub.com/pythonai](https://leanpub.com/pythonai)","link":"https://www.reddit.com/r/Python/comments/10rc3vy/i_just_released_my_new_book_practical_python/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":16}}
{"title":"I\u2019m developing a programming game where you use Python to automate all kinds of machines, robots, drones and more and solve exciting bite-sized coding challenges.","description":"Six weeks ago, I announced JOY OF PROGRAMMING here on r/python and it was met with an overwhelmingly positive reception and a lot of valuable feedback. In case you missed it, the game is all about practicing and applying your Python skills to challenging tasks in realistic, physically simulated 3D environments. It will cover a wide variety of topics, from basic algo / ds, oop, GUI programming to control theory, robotics, image processing, machine learning, genetic algorithms, and more. Of course it will also include a basic tutorial for beginners, but I plan to include interesting challenges for all skill levels. In my day job I\u2019m a CS professor, and this game actually started out as a tool I used in-class for my students. For the last 19 months I\u2019ve been developing this prototype into a proper game.\n\nSpeaking of development, in these last 6 weeks I added a lot of new features, polished and cleaned up many things, and improved the API documentation and made everything fully pep8 compliant. Also I finally got around to recording a longer gameplay trailer, which is hot off the press and I\u2019d like to share it with you. Please head over to the game\u2019s Steam page where you can check it out (it\u2019s the second video there, though I recommend watching the first teaser if you haven\u2019t already).\n\n[https://store.steampowered.com/app/2216770/JOY\\_OF\\_PROGRAMMING\\_\\_Software\\_Engineering\\_Simulator](https://store.steampowered.com/app/2216770/JOY_OF_PROGRAMMING__Software_Engineering_Simulator) \n\nI\u2019m very much looking forward to your feedback or your questions, and of course if you have a Steam account and you like what you see, consider a wishlist. This really helps to \u201cfeed\u201d Steam\u2019s recommender algorithm to spread the word about JOY OF PROGRAMMING and hopefully getting more people into Python programming that way!","link":"https://www.reddit.com/r/Python/comments/10qv40g/im_developing_a_programming_game_where_you_use/","created":"2023-02-01","tags":["python","reddit"],"meta":{"num_comments":91}}
{"title":"Where to learn good design and software engineering for python?","description":"","link":"https://www.reddit.com/r/Python/comments/10s9ayf/where_to_learn_good_design_and_software/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"PocketPy: A Lightweight(~5000 LOC) Python Implementation","description":"[PocketPy](https://github.com/blueloveth/pocketpy) is a lightweight(\\~5000 LOC) Python interpreter for game engines.\n\nIt is easy to embed. All of the functionalities are available in a single header file pocketpy.h, without external dependencies. You can [try it on your browser](https://blueloveth.github.io/pocketpy/) to see what it looks like.\n\n## Current Available Features\n| Name            | Example                    | Supported |\n| --------------- | -------------------------- | --------- |\n| If Else         | `if..else..elif`           | YES       |\n| Loop            | `for/while/break/continue` | YES       |\n| Function        | `def f(x,*args,y=1):`      | YES       |\n| Function `**`   | `def f(**kwargs):`         | NO        |\n| Subclass        | `class A(B):`              | YES       |\n| List            | `[1, 2, 'a']`              | YES       |\n| ListComp        | `[i for i in range(5)]`    | YES       |\n| Slice           | `a[1:2], a[:2], a[1:]`     | YES       |\n| Tuple           | `(1, 2, 'a')`              | YES       |\n| Dict            | `{'a': 1, 'b': 2}`         | YES       |\n| F-String        | `f'value is {x}'`          | YES       |\n| Unpacking       | `a, b = 1, 2`              | YES       |\n| Star Unpacking  | `a, *b = [1, 2, 3]`        | NO        |\n| Throw Exception | `assert/raise`             | YES       |\n| Catch Exception | `try..catch`               | NO        |\n| Eval/Exec       | `eval()/exec()`            | YES       |\n| Import          | `import/from..import`      | YES       |\n\nI am working on it for a few months. I hope PocketPy can be used in game dev.\nIf u are making a custom game engine and searching for a script impl, please contact me. I want to explore the possibility of PocketPy as a game script.\n\nIf u are making your own script language, you may find some inspirations in PocketPy.\n\nIf u likes it, please give me a star\\~ I need your star!!","link":"https://www.reddit.com/r/Python/comments/10rq7gd/pocketpy_a_lightweight5000_loc_python/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":7}}
{"title":"Python code that parses an xlsx file taking long, should I convert the xlsx to an SQL table and use SQLite3 during the parsing?","description":"I have a Python code that reads a long xlsx file (it compares column A to C to check for matching values), with the Column A being 400,000 cells long. Column C is only 5 cells long. \n\nThe code takes an exceptionally long time to run. Would it be faster if I converted the xlsx file to an SQL table then used pandas/sqlite3 during the process to search for a match?","link":"https://www.reddit.com/r/Python/comments/10s62wo/python_code_that_parses_an_xlsx_file_taking_long/","created":"2023-02-03","tags":["python","reddit"],"meta":{"num_comments":9}}
{"title":"[WIP] A Python web framework as powerful as NextJS + Webflow","description":"Hello Pythonistas, I have been developing an open-source python web framework for the past few months. I have felt the pain that Python developers have to switch to NextJS whenever they want to build a good-looking website/web app.\n\nI would like to share the teaser of our framework and get feedback (both pros &amp; cons are welcome).\n\nGitHub - [https://github.com/Atri-Labs/atrilabs-engine](https://github.com/Atri-Labs/atrilabs-engine)\n\nThe front end can be built using our powerful visual builder or by writing React code. You can write the backend using our Python API which feels a lot like the Unity game engine's script.\n\n[1 min Atri teaser video](https://reddit.com/link/10rwwf4/video/xlixqrzejtfa1/player)","link":"https://www.reddit.com/r/Python/comments/10rwwf4/wip_a_python_web_framework_as_powerful_as_nextjs/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"Simple Multiprocessing with QuasiQueue","description":"QuasiQueue is a MultiProcessing library for Python that makes it super easy to have long running MultiProcess jobs. QuasiQueue handles process creation and cleanup, signal management, cross process communication, and all the other garbage that makes people hate dealing with multiprocessing.\n\n* [Github](https://github.com/tedivm/quasiqueue/)\n* [Introduction Post](https://blog.tedivm.com/open-source/2023/02/simple-multiprocessing-with-quasiqueue/)","link":"https://www.reddit.com/r/Python/comments/10rwoxp/simple_multiprocessing_with_quasiqueue/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Should I be improving resume projects?","description":"I have a year of experience as a software developer (not python). I'm currently searching for a python job, so I included some personal projects made with python to account for the lack of real experience. Here's what I've included:\n\n1. Password manager: Command line interface python password encryptor, generator and manager.\n2. Spotify and Genius APIs Project: Displays the lyrics of any song currently playing on Spotify on command line in real time.\n3. Camera movement detector: Detects objects moving in camera and sends an email notification with attached picture.\n4. Weather API: Created my own API that fetches data from database and sends it to different endpoints.\n5. Weather Forecast App: Web app that lets the user know the weather forecast for any city in the world through API calls.\n\nThese are simple projects. Do you think I need to have something more complex? Should I ditch some project or replace it with another one? Any opinion on this would be really helpful. Thank you!","link":"https://www.reddit.com/r/Python/comments/10rpohz/should_i_be_improving_resume_projects/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":5}}
{"title":"Python package that normalizes common data fields","description":"I was going through and standardizing some data and thought about making a package that does this  so everyone in my organization can use it and we can share it with other orgs that we sometimes work with so we are all on the same page.  I just thought something like this surely exists, but I can't find it.\n\n&amp;#x200B;\n\nDoes anyone know of a package that normalizes common fields such as names, addresses, phone numbers, etc.?\n\nFor example a name Mr. John DOe III -&gt; john doe\n\nA lot of this is for data analysis so having uniform names across systems is important when trying to match people.  Does anyone know of something like this?","link":"https://www.reddit.com/r/Python/comments/10rtze2/python_package_that_normalizes_common_data_fields/","created":"2023-02-02","tags":["python","reddit"],"meta":{"num_comments":0}}
