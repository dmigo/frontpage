{"title":"Saturday Daily Thread: Resource Request and Sharing! Daily Thread","description":"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!","link":"https://www.reddit.com/r/Python/comments/11o54ib/saturday_daily_thread_resource_request_and/","created":"2023-03-11","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"PSA: conda-libmamba-solver can cut two hours off of your Anaconda install, but has only 47 GitHub stars. It deserves more praise.","description":"If you've dealt with Conda for data science, or just because it's a cool environment, you know the algorithm Conda uses to solve library conflicts is not great. Trying to add 6 packages for example can take 300 seconds to solve. That's just normal. A bit more complex environment, and you can take 20 minutes. If you misstep in just the wrong way however, you can easily take **3+ hours** for the algorithm to figure out what's compatible. Mamba, an alternative to Conda, is a known solution but it just isn't the same. Lots of people would rather keep using Conda. Well... apparently it's fairly straightforward to *fix Conda*:\n\n    conda install -n base conda-libmamba-solver\n\nThen you just add the flag `--solver=libmamba` to each command you want to use it with thereafter and compare the difference. In my case it took a 2 hour 17 minute install down to 16 minutes or so.\n\nThis is also an interesting lesson in software design. Conda tried to roll their own solver that runs on a single core in pure Python. The alternative a proven multi-core C++ library.\n\nHopefully someone finds this useful.\n\n[Link to relevant GitHub. (no affiliation)](https://github.com/conda/conda-libmamba-solver)","link":"https://www.reddit.com/r/Python/comments/11o3n76/psa_condalibmambasolver_can_cut_two_hours_off_of/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":37}}
{"title":"Cake Day - 1st Job","description":"Just wanted to celebrate my Reddit cake day by announcing that I may be getting my first programming job as I got an email today to be moved forward!!! That\u2019s all. Hope the best for you all.","link":"https://www.reddit.com/r/Python/comments/11o91ik/cake_day_1st_job/","created":"2023-03-11","tags":["python","reddit"],"meta":{"num_comments":10}}
{"title":"Do you feel like your education prepped you in becoming a good programmer?","description":"I am just a little bitter. I feel my undergrad was pretty much useless. Do you feel like your undergrad made you what you are today? or did you have to learn on your own?","link":"https://www.reddit.com/r/Python/comments/11nxfx3/do_you_feel_like_your_education_prepped_you_in/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":97}}
{"title":"Other cool python feature recommendations","description":"I have recently learned about Python turtle and thought it was really cool. I am new to python and I am looking for other beginner friendly yet powerful modules for visuals/ drawing/ animation/ graphics that I can exploit in python. Any recommendations of where I should look next would be appreciated.","link":"https://www.reddit.com/r/Python/comments/11odpcf/other_cool_python_feature_recommendations/","created":"2023-03-11","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Apache Airflow Getting Started","description":"Hi all --\n\nI recently started digging into Apache Airflow. Rather than simply forgetting the things that are difficult as a beginner as I climbed the learning curve, I decided to try to make the process a bit easier for the next person. Enjoy!\n\n[https://codesolid.com/airflow-python-etl/](https://codesolid.com/airflow-python-etl/)","link":"https://www.reddit.com/r/Python/comments/11nzb5j/apache_airflow_getting_started/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"I Automated A Youtube Channel Using Python Without AI","description":"Source Code and Explanation\n\n[https://github.com/TarunTomar122/Automating-a-Youtube-Channel-without-using-AI](https://github.com/TarunTomar122/Automating-a-Youtube-Channel-without-using-AI)","link":"https://www.reddit.com/r/Python/comments/11oeuk4/i_automated_a_youtube_channel_using_python/","created":"2023-03-11","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Pyfuck - A python to brainfuck translater","description":"https://github.com/cmspeedrunner/Pyfuck\nWhat do you guys think","link":"https://www.reddit.com/r/Python/comments/11nci0v/pyfuck_a_python_to_brainfuck_translater/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":33}}
{"title":"Is there some hidden genius in the handle-exception package that I'm missing?","description":"I ran across [the handle-exception package](https://github.com/dillibk777/handle_exception) whose supposed benefit is:\n\n&gt; you can handle exceptions in a centralized way, instead of having to write try-except blocks in multiple places.\n\nBut you can *already* handle exceptions in a centralized way, correct?","link":"https://www.reddit.com/r/Python/comments/11niekp/is_there_some_hidden_genius_in_the/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":18}}
{"title":"Config management for deep learning","description":"This is my first ever python package I've released, hope you guys find it useful. I'm open to any feedback (however harsh), thanks!\n\ngit: [https://github.com/sashank-tirumala/yaml_config_override](https://github.com/sashank-tirumala/yaml_config_override)\\\n\npypi:  [https://pypi.org/project/yaml-config-override/](https://pypi.org/project/yaml-config-override/)\n\nThe idea is simple, you no longer need to write argparse for your config files for machine learning and deep learning projects (or any project really). Just call a function and it will write the arg parse for you, so that you can load config files and at the same time override them from the command line interface. Below is a more detailed description:\n\n# YAML CONFIG OVERRIDE\nYAML Config Override is an extremely lightweight command line interface to your YAML configuration file.\nJust create a yaml config file, and yaml_config_override will add command line arguments to it automatically.\nSuppose you have a YAML file `test.yaml`:\n```yaml\nouter:\n    x: 0\n    inner:\n        y: 1\n        eveninner:\n            z: abc\n```\nthen you can use it in the code `main.py`:\n```python\nfrom yaml_config_override import add_arguments\nimport yaml\nfrom pathlib import Path\nmy_config_path = 'test.yaml'\nconf = yaml.safe_load(Path(my_config_path).read_text())\nconf = add_arguments(conf)\nprint(conf)\n```\nNow you can call main.py as follows:\n```\npython main.py --outer.x 2 --outer.inner.eveninner.z hello\n```\nYour program output will be:\n```\n{'outer': {'x': 2, 'inner': {'y': 1, 'eveninner': {'z': 'hello'}}}}\n```\n\nAlternatively if you want to pass the config file as a command line argument you can modify the code as follows:\n```python\nfrom yaml_config_override import add_arguments\nconf = add_arguments()\n```\n\nNow you call main.py as :\n```\npython main.py --config test.yaml --outer.x 2 --outer.inner.eveninner.z hello\n```","link":"https://www.reddit.com/r/Python/comments/11o5a6m/config_management_for_deep_learning/","created":"2023-03-11","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"pip install openfrom","description":"hi guys, just wanted to share a python script that opens multipe endpoints from a given URL.\n\n[https://github.com/chozeur/openfrom](https://github.com/chozeur/openfrom)","link":"https://www.reddit.com/r/Python/comments/11o5rvs/pip_install_openfrom/","created":"2023-03-11","tags":["python","reddit"],"meta":{"num_comments":2}}
{"title":"heyoka.py 0.21 - ODE integration wth LLVM, now supporting multiprecision","description":"Hello there!\n\nI posted here before about [heyoka.py](https://github.com/bluescarni/heyoka.py), our high-performance ODE integrator based on LLVM.\n\nWe recently released a new version supporting arbitrary-precision computations. This support is built on top of a multiprecision class exposed from C++ to Python, with full NumPy support. That is, this new datatype can be used as a native ``dtype`` in NumPy arrays. I believe this might be a first in the scientific Python ecosystem.\n\nHere is a tutorial introducing the new feature:\n\nhttps://bluescarni.github.io/heyoka.py/notebooks/arbitrary_precision.html\n\nThanks to the properties of the specific numerical integration method employed by heyoka.py (Taylor's method), multiprecision numerical integrations can be orders of magnitude faster than DifferentialEquations.jl, as shown in the benchmarks section here:\n\nhttps://bluescarni.github.io/heyoka/benchmarks.html#extended-and-arbitrary-precision\n\nThe latest version of heyoka.py also introduces a prebuilt ``pip`` wheel for Linux x86-64 (whereas previous versions had only ``conda`` packages):\n\n```\n$ pip install heyoka\n```\n\nPlease let me know if you have comments, questions, criticism, etc.!","link":"https://www.reddit.com/r/Python/comments/11nj2g0/heyokapy_021_ode_integration_wth_llvm_now/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"Python remote debugging on windows machines is now made easy!","description":"Hi guys, I couldn't find latterly a single solution for pycharm to remote debug my python code on other windows machines, and I wanted to do that to do my AI training stuff on my friend's pc because mine is no strong enough, I ended up making my own python library that exactly does that!  \n\n\nWith only two lines of code, you can debug an python script on a windows machine easily, and a copy of all the stdout, stderr and stdin calls will be forwarded to you and you will feel like you are working on your own machine.  \n\n\nI wanted to share it here if anyone needs such capability, I also uploaded it to PyPl so pip will be able to install it, here's the project's github page: [https://github.com/AhmedAhmedEG/PyWinRD](https://github.com/AhmedAhmedEG/PyWinRD)","link":"https://www.reddit.com/r/Python/comments/11nod6t/python_remote_debugging_on_windows_machines_is/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":1}}
{"title":"Can you break my Flask authentication system?","description":" I recently created a Flask authentication system that focuses on security. As a challenge, I invite you to try and find vulnerabilities in my system.\n\nThe repository contains a comprehensive README.md that explains the system's design and implementation. I believe that it can be a great exercise for developers who are interested in security and want to test their skills.\n\nYou can access the repository at [**https://github.com/IdanHajbeko/Secure-Flask-Auth**](https://github.com/IdanHajbeko/Secure-Flask-Auth).\n\nPlease feel free to fork the repository, test the system, and share your feedback. I am open to any suggestions, comments, or contributions that can help me improve this project.\n\nLet's see if you can break my Flask authentication system!","link":"https://www.reddit.com/r/Python/comments/11n082u/can_you_break_my_flask_authentication_system/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":26}}
{"title":"I created Flask-Squeeze, it minifies and compresses responses so that your data transfers are as small as possible!","description":"Hi guys! I just wanted to share the Flask extension [Flask-Squeeze](https://github.com/mkrd/Flask-Squeeze) with you. It will minify javascript and css, and compress responses with brotli, deflate, or gzip depending on the request, with almost zero configuration.\n\nI know there are other extensions aswell, but as far as I know, none of them have a complete feature set of minification AND compression.\n\nLet me know what you think, if there are more things that could be added!","link":"https://www.reddit.com/r/Python/comments/11ms54x/i_created_flasksqueeze_it_minifies_and_compresses/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":6}}
{"title":"Released python module for imports modules in parent directories.","description":"I had a difficulties when importing modules in parent directory. syspend module is one of the solution.\n\n[https://pypi.org/project/syspend/](https://pypi.org/project/syspend/)\n\nIn the case, [sample.py](https://sample.py) want to import mypackage, but it locates in parent directory. syspend module searches SYSPEND\\_ROOT recursively, and calls sys.path.append. Doing so, python interpreter can find mypackage module from [sample.py](https://sample.py).\n\n&amp;#x200B;\n\n* project\n   * mypackage.py\n   * samples\n      * sample.py\n   * SYSPEND\\_ROOT &lt;------- make this file by your self. empty file is ok.\n\n&amp;#x200B;\n\nIn [sample.py](https://sample.py), you just write like this:\n\n    import syspend\n    import mypackage\n    \n    if __name__ == '__main__':\n        mypackage.hello()","link":"https://www.reddit.com/r/Python/comments/11npl20/released_python_module_for_imports_modules_in/","created":"2023-03-10","tags":["python","reddit"],"meta":{"num_comments":0}}
{"title":"qStore - Youtube as file storage","description":"Okay, first and foremost, I want to say that I got inspired by GitHub: DvorakDwarf's [Infinite-Storage-Glitch](https://github.com/DvorakDwarf/Infinite-Storage-Glitch). So I decided to make my own proof of concept version in python3 instead of rust. I also wanted to use steganography but youtube's compression killed any and all hope I had. I have tried LSB, RGB, DCT, and Spacial Domain steganography and ALL work normally on their own...but all have failed when I upload the video to youtube and then download it.\n\nSo I decided to be a little clever and use QR codes. I modify one of many frames in the video with a QR code, and then re make the video and then it's ready to upload. One may wonder, \"well if it's in the QR code then the data can be easily obtained.\" Yes and No. Yes in terms of it's indeed a normal QR code and works how you'd expect it to work, and no in terms of the file data is encrypted using GCMlib (AES-GCM. KDF Argon2id) before being turned into the QR code. One can use any encryption method they want but I use GCMlib. (use at your own risk obviously).\n\n&amp;#x200B;\n\n[qStore](https://github.com/therealOri/qStore) also has its own database to keep track of what videos are what and the keys used to encrypt the file that is in the QR code. This database can also be locked and unlocked. (Like bitwarden). Just give it a key that was generated and then it's up to you on how you store it and keep it safe. (You can also use your own way of encrypting files if you wish, my methods are use at your own risk obviously.) You can add, remove, and view entries/records as well.\n\nThere's nothing really more to say about it as this project is still being worked on and I still really hope that eventually I can use actual steganography to embed a file into the videos. But for now, just QR codes.\n\nIf you or anyone you know would like to help out or even try it out/use my project then the link is below. &lt;3\n\nLink to github repo: [https://github.com/therealOri/qStore](https://github.com/therealOri/qStore)  \n\n\n  \n\n\n[qStore main menu](https://preview.redd.it/gqi2fnz01rma1.png?width=851&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=aa637f2bbf49ea9a040cd6ea0be48a808ed6028d)","link":"https://www.reddit.com/r/Python/comments/11my1tz/qstore_youtube_as_file_storage/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":3}}
{"title":"Training Transformer Networks in Scikit-Learn?!","description":"Have you ever wanted to use handy scikit-learn functionalities with your neural networks, but couldn\u2019t because TensorFlow models are not compatible with the scikit-learn API?\n\nI\u2019m excited to introduce one-line wrappers for TensorFlow/Keras models that enable you to use TensorFlow models within scikit-learn workflows with features like Pipeline, GridSearch, and more.\n\n&amp;#x200B;\n\n[Swap in one line of code to use keras\\/TF models with scikit-learn.](https://preview.redd.it/g5ssnz1f6rma1.png?width=960&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=206be211c08985c0693929c445f3c274234bd58d)\n\nTransformers are extremely popular for modeling text nowadays with GPT3, ChatGPT, Bard, PaLM, FLAN excelling for conversational AI and other Transformers like T5 &amp; BERT excelling for text classification. Scikit-learn offers a broadly useful suite of features for classifier models, but these are hard to use with Transformers. However not if you use these wrappers we developed, which only require changing one line of code to make your existing Tensorflow/Keras model compatible with scikit-learn\u2019s rich ecosystem!\n\nAll you have to do is swap `keras.Model` \u2192 `KerasWrapperModel`, or `keras.Sequential` \u2192 `KerasSequentialWrapper`. The wrapper objects have all the same methods as their keras counterparts, plus you can use them with tons of awesome scikit-learn methods.\n\nYou can find a demo jupyter notebook and read more about the wrappers here: [https://cleanlab.ai/blog/transformer-sklearn/](https://cleanlab.ai/blog/transformer-sklearn/)","link":"https://www.reddit.com/r/Python/comments/11mzd3p/training_transformer_networks_in_scikitlearn/","created":"2023-03-09","tags":["python","reddit"],"meta":{"num_comments":0}}
