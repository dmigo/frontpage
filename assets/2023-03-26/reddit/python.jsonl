{"title":"Sunday Daily Thread: What's everyone working on this week?","description":"Tell /r/python what you're working on this week! You can be bragging, grousing, sharing your passion, or explaining your pain. Talk about your current project or your pet project; whatever you want to share.","link":"https://www.reddit.com/r/Python/comments/12244qx/sunday_daily_thread_whats_everyone_working_on/","created":"2023-03-26","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"Saturday Daily Thread: Resource Request and Sharing! Daily Thread","description":"Found a neat resource related to Python over the past week? Looking for a resource to explain a certain topic?\n\nUse this thread to chat about and share Python resources!","link":"https://www.reddit.com/r/Python/comments/1213pp7/saturday_daily_thread_resource_request_and/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"Warning, Streamlit collects a lot of data!","description":"I just found out that Streamlit defaults to sending telemetry data to Streamlit (and so sends it to Snowflake). While they say this is only metadata and not app information, I'm not totally sure I trust that.   \n\n\n[https://docs.streamlit.io/library/advanced-features/configuration#telemetry](https://docs.streamlit.io/library/advanced-features/configuration#telemetry)","link":"https://www.reddit.com/r/Python/comments/121pvdy/warning_streamlit_collects_a_lot_of_data/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":36}}
{"title":"Zang - A dynamically typed programming language made in python","description":"It even has a text editor with syntax highlighting! what do you guys think?\n\n[https://github.com/cmspeedrunner/Zang](https://github.com/cmspeedrunner/Zang)","link":"https://www.reddit.com/r/Python/comments/121ofpa/zang_a_dynamically_typed_programming_language/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":27}}
{"title":"Keep Your Data Safe with pyCryptobox - A Simple Python Package for File Encryption","description":" \n\nHey there fellow Python enthusiasts,\n\nIf you're looking for an easy way to protect your sensitive data, you might be interested in a Python package called pyCryptobox. It's a straightforward and efficient way to encrypt and decrypt your files and directories using the AES encryption algorithm.\n\npyCryptobox is a powerful tool that allows you to safeguard your confidential data by encrypting your files with a secure AES encryption algorithm. With this package, you can quickly encrypt and decrypt files and directories with a simple command, making it ideal for protecting sensitive data that you don't want others to see.\n\nThe package is simple to install and use, and it offers a range of encryption and decryption options to choose from. You can encrypt entire folders, individual files, or even specific lines of code within a file. The encrypted files can only be decrypted using a passphrase, so your data will be secure even if someone gains access to your computer.\n\nWhether you're a developer looking to secure your source code or a user who wants to protect personal files, pyCryptobox is a great tool to have in your arsenal. Give it a try and let me know what you think!\n\nYou can find pyCryptobox on PyPI at this link: [**https://pypi.org/project/pycryptobox/**](https://pypi.org/project/pycryptobox/)","link":"https://www.reddit.com/r/Python/comments/122e9g3/keep_your_data_safe_with_pycryptobox_a_simple/","created":"2023-03-26","tags":["reddit","python"],"meta":{"num_comments":5}}
{"title":"popularity behind pydantic","description":"I was trying to find a good data validation library to use and then came across pydantic.\n\nI was wondering what exactly is the reason behind this popularity of pydantic. I saw some other libraries also such as msgspec which seems to be still faster than pydantic-core, but doesn't seems much popular.\n\nAlthough I know speed is a secondary matter and first comes developer comfort as per many (this is what pydantic also claims to be the reason behind their popularity)... I just wanted to know if there are some mind blowing features in pydantic which I am missing.\n\nPS : can anyone share their experience, especially in production about how helpful pydantic was to them and wether they tried any other alternatives only to find that they lack in some aspects?","link":"https://www.reddit.com/r/Python/comments/121amct/popularity_behind_pydantic/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":70}}
{"title":"Panther - Throttling (Day 1)","description":"Panther I**s A Fast &amp;  Friendly Web Framework For Building Async APIs With Python 3.11+**\n\nPanther has a built-in Throttling class that you can use to handle the rate limit of your APIsIt has rate and duration so you can specify how many requests the user can send to your API in a duration\n\n    from datetime import timedelta\n    from panther.app import API\n    from panther.throttling import Throttling\n    \n    \n    # User only can request 5 times in every minute\n    InfoThrottling = Throttling(rate=5, duration=timedelta(minutes=1))\n    \n    \n    @API(throttling=InfoThrottling)\n    async def info_api():\n        return {'detail': 'some detail'}\n\nPreview: [preview.redd.it](https://preview.redd.it/6mmvqpbidvpa1.jpg?width=1080&amp;format=pjpg&amp;auto=webp&amp;v=enabled&amp;s=3f747d70a3c8eaca1917dcd9385c5d3efa9ed440)  \nGitHub: [https://github.com/AliRn76/panther/](https://github.com/AliRn76/panther/)  \nPyPI: [https://pypi.org/project/panther/](https://pypi.org/project/panther/)","link":"https://www.reddit.com/r/Python/comments/121ip41/panther_throttling_day_1/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"pywinterminal -- fun project for Windows/Linux admins","description":"Hey everyone,\n\nI figured someone could benefit from this. I mainly use a Mac or Linux. I migrated from Windows earlier last year and haven't looked back. However, in my job as a Cloud Engineer/DevOps Engineer/WhateverTheyTellMeToBeNeer I still have to maintain some Windows servers.\n\nI'm a big terminal guy. I like being able to SSH into a server when I need a few quick things and be done. Well, SSH into Windows is possible now. However, most enterprises do not support this and you are working off of older based severs that would not even support this. This means you have to RDP into the server. I HATE RDP!!!!\n\nThis got me thinking, well, what about if you make a terminal to connect from Mac/Linux to Windows using the WinRM library in Python? I started thinking about it more, what if I used something that does it already and does it well? Ansible!!! What if you used Ansible as the backend, and created a mock terminal you could send commands through??? Winner!!!\n\nSo pywinterminal is exactly that. It is a fancy forever loop that allows you to send commands to a Windows server through a mock terminal. It maintains history and directory state. So if you send a command \"cd c:\\\\windows\\\\temp\", then the next command you sent \"dir\", it would output the the dir of \"C:\\\\windows\\\\temp\". This is still a work in progress, but it has been an absolute life saver for me.\n\nThere are limitations. if you set a variable, value is not not maintained. This is something I am looking into. HOWEVER, you can send piped commands and multiple commands like \"get-service | where name -like \\*win\\*\"  or \"mkdir c:\\\\temp; cd c:\\\\temp; dir\". It uses Ansible in the backend to send all this stuff back and forth. I may be able integrate this a bit more and have a custom playbook to keep a sort of \"variable state\". Until then it has a basic functionality.\n\nIt an open source project, and it is in an early alpha stage so their will be bugs. I have not extensively tested everything, but for general use it works. Code is a bit rough and by no means final. I do this in my spare time as I have time, which isn't much. Please enjoy! I hope it makes someone's life easier!\n\n[https://github.com/mcscwizzy/pywinterminal](https://github.com/mcscwizzy/pywinterminal)","link":"https://www.reddit.com/r/Python/comments/121lyf1/pywinterminal_fun_project_for_windowslinux_admins/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Build your own python security tools - PortScanner, Visual Network Tracker and Anonymous FTP Scanner","description":"**Python Cybersecurity \u2014 PortScanner**\n\nBuild a simple Port Scanner using the Python Programming language. Port Scanner is an application designed to probe a server or host for open ports. Such an application may be used by administrators to verify security policies of their networks and by attackers to identify network services running on a host and exploit vulnerabilities\n\n**Link**: [https://vinsloev.medium.com/python-cybersecurity-build-a-port-scanner-13b798a1b654](https://vinsloev.medium.com/python-cybersecurity-build-a-port-scanner-13b798a1b654)\n\n**Python Cybersecurity \u2014 Visual Network Tracker**\n\nDive into Network Traffic visualization using the Python programming language, Wireshark and Google Maps. This tutorial, covers the implementation steps needed to take a file of network traffic and convert it into a visual presentation using Google Maps.\n\n**Link**: [https://medium.com/vinsloev-academy/python-cybersecurity-network-tracking-using-wireshark-and-google-maps-2adf3e497a93](https://medium.com/vinsloev-academy/python-cybersecurity-network-tracking-using-wireshark-and-google-maps-2adf3e497a93)\n\n**Python Cybersecurity \u2014 Anonymous FTP Scanner**\n\nBuild a simple FTP Scanner using the Python Programming language. Anonymous FTP is a means by which archive sites allow general access to their archives of information. These sites create a special account called anonymous\n\n**Link**: [https://vinsloev.medium.com/python-cybersecurity-for-beginners-build-anonymous-ftp-scanner-a62f0534fcf5](https://vinsloev.medium.com/python-cybersecurity-for-beginners-build-anonymous-ftp-scanner-a62f0534fcf5)","link":"https://www.reddit.com/r/Python/comments/121f4w0/build_your_own_python_security_tools_portscanner/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"My first app in Tkinter - B\u00e9zier curve read off","description":"Hello, I started coding in Python about 5 months ago. I worked mainly with Pygame, but now, I have shifted my interest to Tkinter.  \nFor my first application with this module, I chose to do B\u00e9zier curve read off. If you have an image with a quadratic or cubic B\u00e9zier curve and do not know the correct equations, this application can help you with that. You only need to import the image and shape the B\u00e9zier curve in the app to look like the one in the image, the application can then provide you with the corresponding equations. In addition, it also tells you where the extrema of the curve are and highlights them for you.\n\nIn the future, I plan to add the ability to add more than one B\u00e9zier curve.\n\nI also made a Youtube video where I go into a little bit more detail:  \n[https://www.youtube.com/watch?v=HN47iyTLCG8](https://www.youtube.com/watch?v=HN47iyTLCG8)\n\nI would like to hear your opinion and what I could improve.\n\nYou can find the code here:  \n[https://drive.google.com/file/d/1-iKEmiFGzq0-Gq76yNXk5jrb2IK3BUEX/view?usp=sharing](https://drive.google.com/file/d/1-iKEmiFGzq0-Gq76yNXk5jrb2IK3BUEX/view?usp=sharing)","link":"https://www.reddit.com/r/Python/comments/121h43w/my_first_app_in_tkinter_b\u00e9zier_curve_read_off/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"A Python library that hashes text to a port number in the dynamic range (49152-65535)","description":"Hashport is a function that generates a port number using a deterministic hashing algorithm. It takes a string input as the name of the project or entity that requires a port number and returns an integer value that falls within the range of ports typically used for dynamic assignments (49152 to 65535).\n\nThe function uses the SHA-256 algorithm to generate a hash of the input string. The resulting hash is then converted to an integer, and the integer is scaled to the desired range using modular arithmetic.\n\nHashport is useful in scenarios where a fixed and deterministic port assignment is required. By hashing the project name, the same input will always generate the same output, ensuring consistency and predictability in port assignments.\n\nPython library: [https://github.com/labteral/hashport](https://github.com/labteral/hashport)","link":"https://www.reddit.com/r/Python/comments/1227hfg/a_python_library_that_hashes_text_to_a_port/","created":"2023-03-26","tags":["reddit","python"],"meta":{"num_comments":5}}
{"title":"pandas 2.0 is coming out soon","description":"pandas 2.0 will come out soon, probably as soon as next week. The (hopefully) final release candidate was published last week.\n\n&amp;#x200B;\n\nI wrote about a couple of interesting new features that are included in 2.0:\n\n* non-nanosecond Timestamp resolution\n* PyArrow-backed DataFrames in pandas\n* Copy-on-Write improvement\n\n[https://medium.com/gitconnected/welcoming-pandas-2-0-194094e4275b](https://medium.com/gitconnected/welcoming-pandas-2-0-194094e4275b)","link":"https://www.reddit.com/r/Python/comments/120mci9/pandas_20_is_coming_out_soon/","created":"2023-03-24","tags":["reddit","python"],"meta":{"num_comments":41}}
{"title":"Which Jupyter Notebook service has worked best for you?","description":"There are Jupyter Notebook providers such as Hex and Baseten. Just curious, if people are using it. If yes, what is the use case? If tried but didn't like it, please mention that as well. I am trying to figure out what should we use in our org.","link":"https://www.reddit.com/r/Python/comments/121yagw/which_jupyter_notebook_service_has_worked_best/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":3}}
{"title":"Automate Your Stock Trading with Investopedia-Bot","description":"Are you tired of manually monitoring stock data and placing trades? I made Investopedia-Bot for you, a beginner-friendly Python program that automates stock trading.\n\nUsing Selenium, Investopedia-Bot scrapes Finviz for stock charts and can execute trades in the Investopedia stock simulator. The program calculates stock expectancies, displays stock data and graphs, and recommends the number of shares to buy based on various user-defined variables. With the ability to execute trades automatically, Investopedia-Bot can save users time and effort.\n\nWhile Investopedia-Bot was designed to work with a specific version of the Investopedia stock simulator UI, there is an opportunity for contributors to update the program to work with the latest version of the UI. If you're interested in contributing to the project, updating the scraping code of executing a trade would be a valuable contribution that would help ensure the program continues to function as intended.\n\nSay goodbye to manual stock trading and try Investopedia-Bot today. Automate your stock trading and save yourself time and effort!\n\nHere's the link: [https://github.com/bassel27/Investopedia-Bot](https://github.com/bassel27/Investopedia-Bot)","link":"https://www.reddit.com/r/Python/comments/1222f6l/automate_your_stock_trading_with_investopediabot/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":2}}
{"title":"I made a cli tool to convert m3u to pyradio playlist.","description":"I made a cli tool to convert m3u to pyradio playlist.\n\nhttps://i.redd.it/8g7rxh11xspa1.gif\n\nIt converts m3u files to pyradio ([https://github.com/coderholic/pyradio](https://github.com/coderholic/pyradio)) CSV stations file format.\n\nYou can also automatically download and convert stations from the \"everything full\" m3u in this repo: [https://github.com/junguler/m3u-radio-music-playlists](https://github.com/junguler/m3u-radio-music-playlists).\n\nAnd there's also an option to download, convert and override current stations.csv (what GIF shows).\n\nGithub: [https://github.com/LionyxML/pyradio-m3u-to-playlist](https://github.com/LionyxML/pyradio-m3u-to-playlist)\n\nPip: `pip install m3u_to_pyradio_playlist`","link":"https://www.reddit.com/r/Python/comments/1218jin/i_made_a_cli_tool_to_convert_m3u_to_pyradio/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"10 beginner python projects with code snippets","description":"&amp;#x200B;\n\n[https://medium.com/p/6b75b1506b67](https://medium.com/p/6b75b1506b67)","link":"https://www.reddit.com/r/Python/comments/121ydvb/10_beginner_python_projects_with_code_snippets/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"Python on Silicon Mac","description":"Hello, what are the disadvantages in developing Python programs (eventually to be run on Ubuntu Linux on PC or RPi) on Silicon Mac under MacOS or a Ubuntu virtual machine on Arm? I may need to run some scientific libraries.","link":"https://www.reddit.com/r/Python/comments/121nqho/python_on_silicon_mac/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":19}}
{"title":"Python Web Scraping Delay","description":"Web Scraping Headlines delay\n\nI\u2019m using python, beautiful soup (bs4) and requests to scrape headlines from an website within seconds when they appear in website.. here\u2019s how i do it.\n\nI modified script to check theblock.co/latest h2 div where (headlines) are and if a new headline appears i receive data (headline) via cmd immediately but someone else is scraping the same headline 20 seconds earlier than me..\n\nHere is an screenshot that i compared seconds when i get data to cmd and someone\u2019s terminal that scrapes same website/headline before me.\n\nLink Screenshot \u201cimgbb\u201d\nhttps://ibb.co/19NpV1q\n\nWhat could be the case and what it\u2019s preventing me to scrape quicker.. Is Selenium/Scrapy faster than Beautiful Soup?\n\nOr could it be that im using VPN to avoid getting blocked by site?\n\nLooking forward to hear your opinions.","link":"https://www.reddit.com/r/Python/comments/12159xu/python_web_scraping_delay/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":12}}
{"title":"myKamus: A Free and Open Source Indonesian Translation Program","description":"G'day all!\n\nToday I am here to showcase my first public open source program (which is VERY simple but very useful or anyone like me)!\n\nIf you try to clone it, take note that one of the files is over 700mb so it is stored on the GitHub large file service.\n\nDescription:\n\n*myKamus is An open source instant translation software for Indonesian that provides the user with complex Indonesian-English translation capabilities. To run the program you can either do it from inside an IDE of your choice, or with Python installed either:*\n\n*a) Run clipboard\\_monitor through IDLE*\n\n*b) Launch a Powershell session through the directory and run clipboard\\_monitor through it*\n\n*It utilises several open source bitext corpus to provide access to over 50 million example sentences and words for the purposes of translation. The program is free to use for academic and non-commercial applications, if you wish to use it for something else email me at* [*gabrielcbarnett@gmail.com*](mailto:gabrielcbarnett@gmail.com)*. There will be no cost involved for a license to use in a corporate, government or military environment, it is so we can discuss any needs you might have for updates, specific vocabulary or language requirements. Again, it will be free but a representative from your organization must make contact with me first.*\n\n&amp;#x200B;\n\n*If you like this program and have found it useful for your work, feel free to email with your success story or anyimprovements that you might suggest.*\n\nFeatures:\n\n* Automatically translate individual words and phrases from the computers clipboard which it monitors through the use of pyperclip\n* The library of approximately 60 million sentences and words means the nine times out of ten you will find either the definition of the word that you are looking for or an example sentence that you will be able to infer the meaning of the word from.\n* This means you are likely to find almost all verb/noun forms that Indonesian has to offer\n* Excellent for people who have learnt Indonesian through school or work and just need to look the odd word up quickly without using a translation service like Google or Deepl (which often provide misleading results anyway).\n\nA link to the program can be found here:\n\n[https://github.com/GabrielBarnett/myKamus](https://github.com/GabrielBarnett/myKamus)\n\nI am happy to take suggestions on how to improve the program, but I have only been working on the for a few hours now. At some point I would like to build it into a GUI and use pyInstaller to actually make an executable for the program, but I can't work out how to use pyInstaller on a project with multiple py files and have it also include the dependent translation files which at over 700mg in size.","link":"https://www.reddit.com/r/Python/comments/1219gse/mykamus_a_free_and_open_source_indonesian/","created":"2023-03-25","tags":["reddit","python"],"meta":{"num_comments":0}}
{"title":"NASA's Cassini - Cosmic Dust Analyzer: A proper calibration!","description":"[In my last post](https://www.reddit.com/r/Python/comments/11vjmc2/nasas_cassini_cosmic_dust_analyzer_how_to/) I showed you, how spacecraft instruments are calibrated. To be more precise: it was about so called dust detectors, like the Cosmic Dust Analyzer (CDA) that was on-board the NASA's probe Cassini.\n\nBut conducting calibration experiments and recording and storing tons of data is one thing. The next logical step: deriving actual calibration functions!\n\nFor this part I created a small tutorial that shows the already existing functions to compute the velocity of dust impacts, based on some electric signals. *Why is the velocity so important?* Well, based on the impact speed and direction of the instrument at the \"moment\" of impact, one can derive astro-dynamical insights.\n\nAnd later ... when we take a look at the science part ... you will see that ... well I don't want to spoil ... you can create amazing science results with these \"simple\" computations!\n\nAnyway, further I compute the Mean Absolute Error (MAE) and Root Mean Square Error (RSME) to obtain some performance result of the calibration functions. *Why?* Well next week we will use a **Tensorflow / Keras** based approach to create a **Machine Learning based calibration function**. The MAEs and RSME are the \"benchmark\" values we need to \"beat\".\n\nStay tuned,\n\nThomas\n\nVideo: [https://youtu.be/RkVx-7fcVRY](https://youtu.be/RkVx-7fcVRY)\n\nGitHub: [https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/02\\_prior\\_calibration.ipynb](https://github.com/ThomasAlbin/Astroniz-YT-Tutorials/blob/main/%5BProject%5D-Cassini-CDA/01-Calibration/02_prior_calibration.ipynb)","link":"https://www.reddit.com/r/Python/comments/120zfin/nasas_cassini_cosmic_dust_analyzer_a_proper/","created":"2023-03-24","tags":["reddit","python"],"meta":{"num_comments":2}}
